{"version":3,"file":"static/js/294.5cdb4c54.chunk.js","mappings":"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","sources":["components/ProductCard.js","pages/Main.js","utils/axios.js"],"sourcesContent":["import React, { useContext } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Context } from \"../index\";\r\nimport { GOOD_ROUTE } from \"../routes/const\";\r\nimport CyrillicToTranslit from 'cyrillic-to-translit-js';\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Box, Image, Text, Flex, Button, Badge } from \"@chakra-ui/react\";\r\nimport axios from '../utils/axios';\r\n\r\nconst cyrillicToTranslit = new CyrillicToTranslit();\r\n\r\nconst ProductCard = ({ param }) => {\r\n  const navigator = useNavigate();\r\n  const { good, user } = useContext(Context);\r\n  const COLOR_MAP = {\r\n    \"В наявності\": \"green.300\",\r\n    \"Закінчується\": \"yellow.400\",\r\n    \"Закінчився\": \"red.500\",\r\n    \"Очікується\": \"teal.400\"\r\n  }\r\n\r\n  async function goToGoodPage() {\r\n    const name = cyrillicToTranslit.transform(param.name, '-').toLowerCase();\r\n    good.setId(param.id);\r\n    navigator(GOOD_ROUTE + `/${name}`)\r\n  };\r\n\r\n  async function addToBasket(e) {\r\n    e.stopPropagation();\r\n    const response = await axios.post('basket/add', { goodId: param.id });\r\n\r\n    if (response.status === 200) {\r\n\r\n    };\r\n  }\r\n\r\n  function calculateDiscount() {\r\n    const value = Math.round((1 - param.priceWithDiscount / param.price) * 100);\r\n    return `-${value}%`;\r\n  }\r\n\r\n  return (\r\n    <Box layerStyle=\"card\" w=\"250px\" mx=\"20px\" bg=\"gray.100\" rounded=\"7px\" onClick={goToGoodPage} position=\"relative\">\r\n      {param.isDiscount &&\r\n        <Badge colorScheme=\"red\" position=\"absolute\" right=\"0\" borderRadius=\"0 7px 0 3px\" top=\"0\" fontSize=\"20px\">{calculateDiscount()}</Badge>\r\n      }\r\n      <Image w=\"100%\" borderRadius=\"7px 7px 2px 2px\" objectFit=\"cover\" src={param.image} alt=\"\" />\r\n      <Box p=\"15px 10px 5px 10px\">\r\n        <Text noOfLines={1} textOverflow=\"ellipsis\" fontSize='12px' maxHeight={24} overflow=\"hidden\" alignSelf=\"start\" color={COLOR_MAP[param.state]} >{param.state}</Text>\r\n        <Text noOfLines={1} textOverflow=\"ellipsis\" fontSize='16px' maxHeight={24} overflow=\"hidden\" alignSelf=\"start\" color=\"gray.600\">{param.name}</Text>\r\n\r\n        <Flex justifyContent=\"space-between\" alignItems=\"center\" w=\"100%\" py=\"5px\" px=\"5px\">\r\n          {param.isDiscount ?\r\n            <Flex className=\"Price\"><Text fontSize=\"24px\" lineHeight=\"24px\">{param.priceWithDiscount}₴</Text><Text fontSize=\"14px\" lineHeight=\"24px\" mx=\"5px\" color=\"gray.500\" as=\"del\">{param.price}₴</Text></Flex>\r\n            :\r\n            <div className=\"Price\"><Text fontSize=\"24px\" lineHeight=\"24px\">{param.price}₴</Text></div>\r\n          }\r\n          <div className=\"Cart\">\r\n            <Button isDisabled={!user.isAuth} colorScheme=\"teal\" h=\"30px\" onClick={(e) => addToBasket(e)}>\r\n              Кошик\r\n            </Button>\r\n          </div>\r\n        </Flex>\r\n      </Box>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default ProductCard;","import React, { useEffect, useState } from 'react'\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport ProductCard from \"../components/ProductCard\";\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\nimport Slider from \"react-slick\";\r\nimport { Image, Flex, Text, useMediaQuery, SimpleGrid } from \"@chakra-ui/react\";\r\nimport axios from \"../utils/axios\"\r\n\r\nconst good = {\r\n    comments: [],\r\n    id: \"abdd5906-cf61-4b0d-8e41-e198878168c9\",\r\n    image: \"http://res.cloudinary.com/hsu9dlm7f/image/upload/v1655313994/avatar/qgn1rsjbtaocvspcimvv.jpg\",\r\n    name: \"qwerty\",\r\n    params: [],\r\n    price: 1,\r\n    state: \"Очікується\",\r\n    typeID: \"Вода\"\r\n}\r\n\r\nconst Main = () => {\r\n    const [isLargerThan1280] = useMediaQuery('(min-width: 1280px)')\r\n    const [isLargerThan950] = useMediaQuery('(min-width: 950px)')\r\n    const [isLargerThan650] = useMediaQuery('(min-width: 650px)')\r\n    const [discount, setDiscount] = useState([]);\r\n\r\n    let settings1 = {\r\n        infinite: true,\r\n        speed: 500,\r\n        slidesToShow: 1,\r\n        arrows: false,\r\n        slidesToScroll: 1,\r\n        autoplay: true,\r\n        autoplaySpeed: 4000\r\n    };\r\n\r\n    let settings = {\r\n        infinite: true,\r\n        speed: 500,\r\n        slidesToShow: 2/*isLargerThan1280 ? 4 : (isLargerThan950 ? 3 : (isLargerThan650 ? 2 : 1))*/,\r\n        slidesToScroll: 0,\r\n        dots: true\r\n    };\r\n    const getColumns = () => {\r\n        let count = discount.length;\r\n        if (count === 1) {\r\n            return 1;\r\n        }\r\n        else if (count === 2) {\r\n            return isLargerThan1280 ? count : (isLargerThan950 ? count : (isLargerThan650 ? 2 : 1));\r\n        }\r\n        return isLargerThan1280 ? count : (isLargerThan950 ? 3 : (isLargerThan650 ? 2 : 1));\r\n\r\n\r\n    }\r\n    const getDisc = async () => {\r\n        const response = await axios.get('good/getSomeDisc');\r\n        console.log(response.data);\r\n        if (response.status === 200) {\r\n            setDiscount(response.data)\r\n        };\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        getDisc()\r\n        console.log(discount)\r\n    }, [])\r\n\r\n    return (\r\n        <Flex flexDir=\"column\" justifyContent=\"space-between\" alignItems=\"center\">\r\n            <Image src=\"assets/banners/3.png\" h=\"auto\" objectFit=\"cover\" w=\"100%\" />\r\n            <Slider {...settings1} style={{ width: isLargerThan650 ? \"70%\" : \"90%\", marginTop: \"50px\", }}>\r\n                <Image src=\"assets/banners/a.png\" objectFit=\"cover\" />\r\n                <Image src=\"assets/banners/b.png\" objectFit=\"cover\" />\r\n            </Slider>\r\n            <Text fontSize=\"35px\" paddingTop=\"50px\">Акційні товари</Text>\r\n            <SimpleGrid templateColumns={`repeat(${getColumns()}, 250px)`} justifyItems=\"center\" alignContent=\"center\" spacing='20px'>\r\n                {discount.map((i) => (\r\n                    <ProductCard key={i.id} param={i} />\r\n                ))}\r\n\r\n            </SimpleGrid>\r\n\r\n        </Flex >\r\n    )\r\n}\r\n\r\nexport default Main;","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"https://mydiplomlevas.herokuapp.com/api/\",\r\n  headers: {\r\n    'Authorization': localStorage.getItem(\"Token\") ?? \"\"\r\n  }\r\n});\r\n\r\ninstance.interceptors.response.use(\r\n  res => res,\r\n  error => {\r\n    if (error.response.status === 401) {\r\n      localStorage.removeItem(\"Token\");\r\n    };\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default instance;"],"names":["cyrillicToTranslit","CyrillicToTranslit","param","navigator","useNavigate","useContext","Context","good","user","name","transform","toLowerCase","setId","id","GOOD_ROUTE","e","stopPropagation","axios","goodId","status","layerStyle","w","mx","bg","rounded","onClick","position","isDiscount","colorScheme","right","borderRadius","top","fontSize","value","Math","round","priceWithDiscount","price","calculateDiscount","objectFit","src","image","alt","p","noOfLines","textOverflow","maxHeight","overflow","alignSelf","color","state","justifyContent","alignItems","py","px","className","lineHeight","as","isDisabled","isAuth","h","addToBasket","useMediaQuery","isLargerThan1280","isLargerThan950","isLargerThan650","useState","discount","setDiscount","getDisc","response","console","log","data","useEffect","flexDir","infinite","speed","slidesToShow","arrows","slidesToScroll","autoplay","autoplaySpeed","style","width","marginTop","paddingTop","templateColumns","count","length","getColumns","justifyItems","alignContent","spacing","map","i","instance","baseURL","headers","localStorage","getItem","interceptors","use","res","error","removeItem","Promise","reject"],"sourceRoot":""}