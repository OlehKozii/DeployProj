{"version":3,"file":"static/js/712.3af8aaab.chunk.js","mappings":"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","sources":["components/good/comment.js","pages/goodsPage.js","utils/axios.js"],"sourcesContent":["import { Box, Text, Flex } from '@chakra-ui/react';\r\n\r\nconst Comment = ({ name, text, time, grade }) => {\r\n    const date = new Date(time);\r\n\r\n    function getGradeColor(value) {\r\n        switch (true) {\r\n            case (value >= 75):\r\n                return 'green';\r\n            case (value >= 50):\r\n                return 'teal';\r\n            case (value >= 25):\r\n                return 'yellow';\r\n            case (value >= 0):\r\n                return 'red';\r\n            default:\r\n                return 'teal';\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Box w=\"100%\">\r\n            {console.log(time)}\r\n            <Flex justifyContent='space-between'>\r\n                <Text color=\"gray.600\" fontSize='18px' as='b'>{name}</Text>\r\n                <Text color=\"gray.400\" fontSize='14px'>{`${date.getHours()}:${date.getMinutes()}  ${date.getDate()}/${date.getMonth()}/${date.getFullYear()}`}</Text>\r\n            </Flex>\r\n            <Flex justifyContent='space-between'>\r\n                <Text color=\"gray.500\" fontSize='16px' maxWidth=\"80%\">\r\n                    {text}\r\n                </Text>\r\n                <Text color={getGradeColor(grade)} fontSize='35px' mx=\"10px\">\r\n                    {grade}%\r\n                </Text>\r\n            </Flex>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Comment;","import React, { useContext, useState, useEffect } from \"react\";\r\nimport { Context } from \"../index\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport axios from '../utils/axios';\r\nimport Comment from \"../components/good/comment\";\r\nimport {\r\n    Textarea,\r\n    TableContainer,\r\n    Table,\r\n    Tr,\r\n    Td,\r\n    Tbody,\r\n    Container,\r\n    Box,\r\n    Image,\r\n    SimpleGrid,\r\n    Button,\r\n    Flex,\r\n    Text,\r\n    VStack,\r\n    NumberInput,\r\n    NumberInputField,\r\n    NumberInputStepper,\r\n    NumberIncrementStepper,\r\n    NumberDecrementStepper,\r\n    SliderMark,\r\n    Slider,\r\n    SliderTrack,\r\n    SliderFilledTrack,\r\n    SliderThumb,\r\n    Tooltip,\r\n    Spacer,\r\n    Link\r\n} from '@chakra-ui/react'\r\n\r\nconst Good = observer(() => {\r\n    const { good, user } = useContext(Context);\r\n    const [data, setData] = useState({});\r\n    const [count, setCount] = useState(1);\r\n    const [commentText, setCommentText] = useState('');\r\n    const [sliderValue, setSliderValue] = useState(50);\r\n    const [showTooltip, setShowTooltip] = useState(false);\r\n    const [isLoading, setLoading] = useState(false);\r\n\r\n    function getColor(value) {\r\n        switch (true) {\r\n            case (value >= 75):\r\n                return 'green';\r\n            case (value >= 50):\r\n                return 'teal';\r\n            case (value >= 25):\r\n                return 'yellow';\r\n            case (value >= 0):\r\n                return 'red';\r\n            default:\r\n                return 'teal';\r\n        }\r\n    }\r\n\r\n    const COLOR_MAP = {\r\n        \"В наявності\": \"green.300\",\r\n        \"Закінчується\": \"yellow.400\",\r\n        \"Закінчився\": \"red.500\",\r\n        \"Очікується\": \"teal.400\"\r\n    }\r\n\r\n    async function getData() {\r\n        const response = await axios.get(`good/getone/${good.id}`);\r\n        if (response.status === 200) {\r\n            setData(response.data);\r\n            console.log(response.data);\r\n        }\r\n    }\r\n\r\n    async function addToBasket() {\r\n        const response = await axios.post('basket/addMany', { goodId: good.id, count });\r\n        setLoading(true);\r\n        if (response) {\r\n            setLoading(false);\r\n        };\r\n    }\r\n\r\n    async function addComment() {\r\n        const newComment = { name: user.user.name, text: commentText, time: new Date(), grade: sliderValue }\r\n        const newData = { ...data, comments: [newComment, ...data.comments] };\r\n        const newGrade = newData.comments.reduce((r, c) => r + c.grade, 0) / newData.comments.length;\r\n        newData.grade = newGrade;\r\n        setData(newData);\r\n        const response = await axios.post(`good/addComment/${good.id}`, newComment);\r\n        setCommentText('');\r\n    }\r\n\r\n    useEffect(() => {\r\n        getData();\r\n    }, []);\r\n\r\n    return (\r\n        <Container p={30} maxWidth={1080}>\r\n            {data && <>\r\n            <Box bg=\"whiteAlpha.500\" rounded={10} p='10px 30px 40px 30px'>\r\n                <SimpleGrid minChildWidth='350px' spacing=\"25px\">\r\n                    <Box p=\"10px\">\r\n                        <Image src={data.image} rounded={5} w=\"100%\" h=\"auto\" objectFit=\"cover\" />\r\n                    </Box>\r\n                    <Box display='flex' flexDirection=\"column\" justifyContent=\"space-between\">\r\n                        <Text marginBottom=\"30px\" fontSize='4xl'>{data.name}</Text>\r\n                        \r\n                        {data?.comments?.length ? \r\n                        <>\r\n                            <Box>\r\n                                <Flex>\r\n                                    <Text fontSize='30px' color=\"gray.500\">Рейтинг товару: </Text> \r\n                                    <Spacer />\r\n                                    <Text as=\"span\" color={getColor(data.grade)} fontSize='45px' lineHeight=\"40px\" mx=\"10px\">\r\n                                        {data.grade}%\r\n                                    </Text>\r\n                                </Flex>\r\n                                <Flex fontSize='30px' color=\"gray.500\" my=\"20px\">\r\n                                    <Text fontSize='30px' color=\"gray.500\">Кількість відгуків: </Text>\r\n                                    <Spacer />\r\n                                    <Text as=\"span\" fontSize='35px' mx=\"10px\">\r\n                                        <Link href=\"#comments\">{data?.comments?.length}</Link>\r\n                                    </Text>\r\n                                </Flex>\r\n                            </Box>\r\n                        </>\r\n                        :\r\n                        <Flex justifyContent=\"center\" m=\"10px 0 30px 0\">\r\n                            <Text fontSize='30px' color=\"gray.500\">Ще немає відгуків</Text>\r\n                        </Flex>\r\n                        }\r\n                        <Box borderWidth='1px' borderColor=\"gray.300\" rounded={10} p=\"15px\">\r\n                            <Flex marginBottom=\"30px\" justifyContent=\"space-between\" alignItems=\"end\">\r\n                                <Text fontSize=\"50px\">{data.price}₴</Text>\r\n                                <Box>\r\n                                    <Text fontSize=\"16px\" fontWeight=\"500\" marginBottom=\"10px\" color={COLOR_MAP[data.state]}>{data.state}</Text>\r\n                                    <Flex fontSize=\"18px\">\r\n                                        Кількість:\r\n                                        <NumberInput marginLeft=\"10px\" size='xs' value={count} onChange={(value) => setCount(value)} maxW={14} min={1}>\r\n                                            <NumberInputField />\r\n                                            <NumberInputStepper>\r\n                                                <NumberIncrementStepper />\r\n                                                <NumberDecrementStepper />\r\n                                            </NumberInputStepper>\r\n                                        </NumberInput>\r\n                                    </Flex>\r\n                                </Box>\r\n                            </Flex>\r\n                            <Button width=\"100%\" colorScheme=\"teal\" onClick={() => addToBasket()} isDisabled={isLoading}>Додати в кошик</Button>\r\n                        </Box>\r\n                    </Box>\r\n                </SimpleGrid>\r\n            </Box>\r\n            <Box bg=\"whiteAlpha.500\" rounded={10} p={15} my='20px' display=\"flex\" flexDir='column'>\r\n                <Text m='0 10px 10px 10px' fontSize=\"24px\" alignSelf=\"center\">Характеристики</Text>\r\n                <TableContainer>\r\n                    <Table bg='gray.200' variant='striped' rounded={10}>\r\n                        <Tbody>\r\n                            {data?.params?.map(param => (\r\n                                <Tr>\r\n                                    <Td><b>{param.title}</b></Td>\r\n                                    <Td>{param.description}</Td>\r\n                                </Tr>\r\n                            ))}\r\n                        </Tbody>\r\n                    </Table>\r\n                </TableContainer>\r\n            </Box>\r\n\r\n            <Box bg=\"whiteAlpha.500\" rounded={10} p={15} my='20px' display=\"flex\" flexDir='column'>\r\n                <Text m='0 10px 10px 10px' fontSize=\"24px\" alignSelf=\"center\">Залиште відгук</Text>\r\n                {user.isAuth ?\r\n                    <>\r\n                        <Textarea\r\n                            rows={5}\r\n                            resize='none'\r\n                            placeholder=\"Напишіть щось...\"\r\n                            value={commentText}\r\n                            onChange={(e) => setCommentText(e.target.value)}\r\n\r\n                        />\r\n                        <Text marginTop=\"20px\" fontSize=\"18px\" alignSelf=\"center\" color=\"gray.500\">Оцініть цей продукт</Text>\r\n                        <Slider\r\n                            isDisabled={!commentText}\r\n                            my=\"20px\"\r\n                            defaultValue={50}\r\n                            min={0}\r\n                            max={100}\r\n                            onChange={(v) => setSliderValue(v)}\r\n                            onMouseEnter={() => setShowTooltip(true)}\r\n                            onMouseLeave={() => setShowTooltip(false)}\r\n                            colorScheme={getColor(sliderValue)}\r\n                        >\r\n                            <SliderMark value={25} mt='1' ml='-2.5' fontSize='sm'>\r\n                                25%\r\n                            </SliderMark>\r\n                            <SliderMark value={50} mt='1' ml='-2.5' fontSize='sm'>\r\n                                50%\r\n                            </SliderMark>\r\n                            <SliderMark value={75} mt='1' ml='-2.5' fontSize='sm'>\r\n                                75%\r\n                            </SliderMark>\r\n                            <SliderTrack colorScheme='red'>\r\n                                <SliderFilledTrack />\r\n                            </SliderTrack>\r\n                            <Tooltip\r\n                                hasArrow\r\n                                bg={getColor(sliderValue)}\r\n                                color='white'\r\n                                placement='top'\r\n                                isOpen={showTooltip}\r\n                                label={`${sliderValue}%`}\r\n                            >\r\n                                <SliderThumb colorScheme='red' />\r\n                            </Tooltip>\r\n                        </Slider>\r\n                        <Button onClick={addComment} colorScheme='teal' my='10px' isDisabled={!commentText}>\r\n                            Опублікувати\r\n                        </Button>\r\n                    </>\r\n                    :\r\n                    <Textarea\r\n                        rows={5}\r\n                        resize='none'\r\n                        isDisabled\r\n                        placeholder=\"Увійдіть або зареєструйтесь, щоб залишити відгук.\"\r\n\r\n                    />\r\n                }\r\n            </Box>\r\n\r\n            <Box bg=\"whiteAlpha.500\" rounded={10} p={15} my='20px' display=\"flex\" flexDir='column'>\r\n                <VStack spacing=\"35px\" id=\"comments\">\r\n                    {data?.comments?.map((props, i) => <Comment key={i} {...props} />)}\r\n                </VStack>\r\n            </Box>\r\n            </>}\r\n        </Container >\r\n    )\r\n})\r\n\r\nexport default Good;","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"https://mydiplomlevas.herokuapp.com/api/\",\r\n  headers: {\r\n    'Authorization': localStorage.getItem(\"Token\") ?? \"\"\r\n  }\r\n});\r\n\r\ninstance.interceptors.response.use(\r\n  res => res,\r\n  error => {\r\n    if (error.response.status === 401) {\r\n      localStorage.removeItem(\"Token\");\r\n    };\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default instance;"],"names":["name","text","time","grade","date","Date","w","console","log","justifyContent","color","fontSize","as","getHours","getMinutes","getDate","getMonth","getFullYear","maxWidth","value","getGradeColor","mx","Good","observer","useContext","Context","good","user","useState","data","setData","count","setCount","commentText","setCommentText","sliderValue","setSliderValue","showTooltip","setShowTooltip","isLoading","setLoading","getColor","axios","id","response","status","goodId","newComment","newData","comments","newGrade","reduce","r","c","length","useEffect","getData","p","bg","rounded","minChildWidth","spacing","src","image","h","objectFit","display","flexDirection","marginBottom","lineHeight","my","href","m","borderWidth","borderColor","alignItems","price","fontWeight","state","marginLeft","size","onChange","maxW","min","width","colorScheme","onClick","addToBasket","isDisabled","flexDir","alignSelf","variant","params","map","param","Tr","Td","title","description","isAuth","rows","resize","placeholder","e","target","marginTop","defaultValue","max","v","onMouseEnter","onMouseLeave","mt","ml","hasArrow","placement","isOpen","label","props","i","instance","baseURL","headers","localStorage","getItem","interceptors","use","res","error","removeItem","Promise","reject"],"sourceRoot":""}