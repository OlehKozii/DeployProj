{"version":3,"file":"static/js/735.9402af5b.chunk.js","mappings":"4NAmFA,UA9Ee,WACX,OAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAoCF,EAAAA,EAAAA,UAAS,GAA7C,eAAOG,EAAP,KAAmBC,EAAnB,KAFiB,8CAIjB,2GAC2BC,EAAAA,EAAAA,IAAU,aAAc,CAC3CC,QAAS,CACL,cAAiBC,aAAaC,QAAQ,YAHlD,OAO4B,OANlBC,EADV,QAOiBC,SACTR,EAAUO,EAASE,MACbC,EAAQH,EAASE,KAAKE,QAAO,SAACD,EAAOE,GAAR,OAAiBF,EAAQE,EAAKC,MAAQD,EAAKE,QAAO,GACrFZ,EAAcQ,IAVtB,4CAJiB,oEAkBjB,mGAA4BK,EAA5B,EAA4BA,GAAIC,EAAhC,EAAgCA,UAAhC,SAC2Bb,EAAAA,EAAAA,OAAA,iBAAuBY,IADlD,OAE4B,MAF5B,OAEiBP,SACTR,EAAUD,EAAOkB,QAAO,SAAAL,GAAI,OAAIA,EAAKG,KAAOA,MAC5Cb,EAAcD,EAAae,IAJnC,4CAlBiB,sBA+BjB,OALAE,EAAAA,EAAAA,YAAU,YA1BO,mCA2BbC,KAED,KAGC,SAAC,KAAD,CAAWC,SAAU,KAAMC,cAAc,QAAzC,SACKtB,EAAOuB,QACJ,UAAC,KAAD,WACKvB,EAAOwB,KAAI,SAACX,EAAMY,GACX,OACI,UAAC,KAAD,CAAcC,EAAE,OAAOC,EAAE,QAAQC,QAAS,GAAIC,GAAG,WAAWC,EAAG,EAAGC,EAAE,sBAAsBC,eAAe,gBAAzG,WACI,UAAC,KAAD,YACI,SAAC,KAAD,CAAOL,EAAE,OAAOD,EAAE,OAAOE,QAAS,EAAGK,IAAKpB,EAAKqB,SAC/C,UAAC,KAAD,CAAMC,GAAI,EAAGC,GAAI,EAAGC,cAAc,SAASL,eAAe,gBAA1D,WACI,SAAC,KAAD,CAAMM,SAAS,OAAOC,MAAM,WAAWC,WAAW,OAAlD,SAA0D3B,EAAK4B,QAC/D,UAAC,KAAD,CAAaC,aAAc7B,EAAKE,MAAO4B,IAAK,EAAGjB,EAAE,QAAQG,GAAG,WAAWD,QAAS,EAAhF,WACI,SAAC,KAAD,KACA,UAAC,KAAD,YACI,SAAC,KAAD,KACA,SAAC,KAAD,iBAKhB,UAAC,KAAD,CAAMgB,QAAQ,SAASZ,eAAe,gBAAgBa,WAAW,WAAjE,WACI,SAAC,KAAD,CAAQnB,EAAE,OAAOC,EAAE,OAAOmB,YAAY,MAAMC,QAAS,kBApDxE,2CAoD8EC,CAAW,CAAChC,GAAIH,EAAKG,GAAIC,UAAWJ,EAAKC,MAAQD,EAAKE,SAAjH,UACI,SAAC,KAAD,OAIJ,UAAC,KAAD,CAAMoB,GAAI,EAAGG,SAAS,OAAOR,EAAE,IAAIS,MAAM,WAAzC,UAAqD1B,EAAKC,MAA1D,iBApBGW,OAyBvB,UAAC,KAAD,CAAMoB,WAAW,SAASI,UAAU,MAAMC,YAAY,MAAMC,YAAY,YAAYvB,QAAS,EAAGC,GAAG,YAAYE,EAAE,OAAjH,WACI,UAAC,KAAD,CAAMO,SAAS,OAAOc,YAAY,OAAOb,MAAM,WAA/C,UAA2DrC,EAA3D,aACA,SAAC,KAAD,CAAQ4C,YAAY,QAApB,yDAIZ,SAAC,KAAD,CAAKO,SAAS,QAAQC,IAAI,MAAMC,KAAK,mBAArC,UACI,SAAC,KAAD,CAAMjB,SAAS,OAAf,kD,qCCxEVkB,E,MAAWpD,GAAAA,OAAa,CAC5BqD,QAAS,6BACTpD,QAAS,CACP,wBAAiBC,aAAaC,QAAQ,gBAAtC,QAAkD,MAItD","sources":["pages/basket.js","utils/axios.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Box, Container, VStack, Flex, Text, Image, Button, NumberDecrementStepper, NumberIncrementStepper, NumberInputStepper, NumberInputField, NumberInput } from '@chakra-ui/react'\r\nimport { DeleteIcon } from \"@chakra-ui/icons\";\r\nimport axios from '../utils/axios';\r\n\r\nconst Basket = () => {\r\n    const [basket, setBasket] = useState([]);\r\n    const [totalPrice, setTotalPrice] = useState(0);\r\n\r\n    async function getBasket() {\r\n        const response = await axios.get('basket/get', {\r\n            headers: {\r\n                'Authorization': localStorage.getItem('Token')\r\n            }\r\n        });\r\n\r\n        if (response.status === 200) {\r\n            setBasket(response.data)\r\n            const total = response.data.reduce((total, item) => total + item.price * item.count, 0);\r\n            setTotalPrice(total);\r\n        }\r\n    }\r\n\r\n    async function deleteGood({ id, itemPrice }) {\r\n        const response = await axios.delete(`basket/${id}`);\r\n        if (response.status === 200) {\r\n            setBasket(basket.filter(item => item.id !== id));\r\n            setTotalPrice(totalPrice - itemPrice)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getBasket()\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <Container maxWidth={1080} paddingBottom=\"200px\">\r\n            {basket.length ?\r\n                <VStack> \r\n                    {basket.map((item, i) => {\r\n                            return (\r\n                                <Flex key={i} w=\"100%\" h=\"150px\" rounded={10} bg=\"gray.200\" m={4} p=\"15px 20px 15px 20px\" justifyContent=\"space-between\">\r\n                                    <Flex>\r\n                                        <Image h=\"100%\" w=\"auto\" rounded={5} src={item.image}/>\r\n                                        <Flex mx={4} my={1} flexDirection=\"column\" justifyContent=\"space-between\">\r\n                                            <Text fontSize=\"35px\" color=\"gray.800\" lineHeight=\"20px\">{item.name}</Text>\r\n                                            <NumberInput defaultValue={item.count} min={1} w=\"100px\" bg=\"gray.100\" rounded={2}>\r\n                                                <NumberInputField />\r\n                                                <NumberInputStepper>\r\n                                                    <NumberIncrementStepper />\r\n                                                    <NumberDecrementStepper />\r\n                                                </NumberInputStepper>\r\n                                            </NumberInput>\r\n                                        </Flex>\r\n                                    </Flex>\r\n                                    <Flex flexDir=\"column\" justifyContent=\"space-between\" alignItems=\"flex-end\">\r\n                                        <Button w=\"40px\" h=\"40px\" colorScheme=\"red\" onClick={() => deleteGood({id: item.id, itemPrice: item.price * item.count})}>\r\n                                            <DeleteIcon>\r\n                                                \r\n                                            </DeleteIcon>\r\n                                        </Button>\r\n                                        <Text mx={4} fontSize=\"30px\" m=\"0\" color=\"gray.600\">{item.price}₴</Text>\r\n                                    </Flex>\r\n                                </Flex>\r\n                            )}\r\n                        )}\r\n                    <Flex alignItems=\"center\" alignSelf=\"end\" borderWidth=\"2px\" borderColor=\"green.300\" rounded={5} bg=\"green.100\" p=\"20px\">\r\n                        <Text fontSize=\"30px\" marginRight=\"30px\" color=\"gray.600\">{totalPrice}₴</Text>\r\n                        <Button colorScheme=\"green\">Купити</Button>\r\n                    </Flex>\r\n            </VStack>\r\n            :\r\n            <Box position=\"fixed\" top=\"50%\" left=\"calc(50% - 30px)\">\r\n                <Text fontSize=\"40px\">\r\n                    Пусто\r\n                </Text>\r\n            </Box>\r\n        }\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Basket; ","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"http://localhost:8000/api/\",\r\n  headers: {\r\n    'Authorization': localStorage.getItem(\"Token\") ?? \"\"\r\n  }\r\n});\r\n\r\nexport default instance;"],"names":["useState","basket","setBasket","totalPrice","setTotalPrice","axios","headers","localStorage","getItem","response","status","data","total","reduce","item","price","count","id","itemPrice","filter","useEffect","getBasket","maxWidth","paddingBottom","length","map","i","w","h","rounded","bg","m","p","justifyContent","src","image","mx","my","flexDirection","fontSize","color","lineHeight","name","defaultValue","min","flexDir","alignItems","colorScheme","onClick","deleteGood","alignSelf","borderWidth","borderColor","marginRight","position","top","left","instance","baseURL"],"sourceRoot":""}