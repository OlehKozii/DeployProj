{"version":3,"file":"static/js/489.26e2244a.chunk.js","mappings":"0YAIA,SAASA,EAAaC,GAClB,IAAQC,EAAgCD,EAAhCC,YAAaC,EAAmBF,EAAnBE,eAErB,GAAoCC,EAAAA,EAAAA,UAChC,CACIC,KAAM,IACNC,MAAO,GACPC,OAAQ,IAJhB,eAAOC,EAAP,KAAmBC,EAAnB,KAQA,GAAgCL,EAAAA,EAAAA,YAAhC,eAAOM,EAAP,KAAiBC,EAAjB,KAXyB,8CAazB,WAAyBC,GAAzB,iFACQF,GAAYE,EAAKN,OAASM,EAAKC,QADvC,uBAEQC,QAAQC,IAAIL,GAFpB,SAGmCM,EACvBN,EAASO,OACTL,GALZ,OAGcM,EAHd,OAQQf,EAAee,GARvB,4CAbyB,sBAyBzB,SAASF,EAAgBG,EAAaX,GAClC,IAAMY,EAASC,SAASC,cAAc,UAChCC,EAASJ,EAAYK,aAAeL,EAAYb,MAChDmB,EAASN,EAAYO,cAAgBP,EAAYN,OAiBvD,OAhBAO,EAAOd,MAAQE,EAAWF,MAC1Bc,EAAOP,OAASL,EAAWK,OACfO,EAAOO,WAAW,MAE1BC,UACAT,EACAX,EAAWqB,EAAIN,EACff,EAAWsB,EAAIL,EACfjB,EAAWF,MAAQiB,EACnBf,EAAWK,OAASY,EACpB,EACA,EACAjB,EAAWF,MACXE,EAAWK,QAGR,IAAIkB,SAAQ,SAACC,EAASC,GACzBb,EAAOc,QACH,SAACC,GACG,GAAKA,EAAL,CAKA,IAAMC,EAAO,IAAIC,KACb,CAACF,GACD,eACA,CACIG,KAAMH,EAAKG,KACXC,cAAc,IAAIC,MAAOC,YAKjCT,EAFqBI,QAZjBH,EAAO,IAAIS,MAAM,sBAetB,iBAKf,OACI,SAAC,IAAD,CACI9B,KAAMJ,EACNmC,cAAY,EACZC,SAAU,SAACpC,GAAD,OAAgBC,EAAcD,IACxCqC,WAAY,SAACrC,GAAD,OA1EK,2CA0EWsC,CAAUtC,IACtCD,OAAQ,EALZ,UAOI,gBACIwC,OAAQ,SAACrC,GAAD,OAAcC,EAAYD,IAClCsC,IAAK9C,MAKrBF,EAAaiD,aAAe,CACxB9C,eAAgB,cAGpB,QCvEM+C,GAAaC,EAAAA,EAAAA,KAAS,YAA8B,IAA3BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,QAASC,EAAS,EAATA,GAC5C,GAAwBlD,EAAAA,EAAAA,UAAS,IAAjC,eAAOmD,EAAP,KAAaC,EAAb,KACA,GAAwBpD,EAAAA,EAAAA,UAAS,IAAjC,eAAOqD,EAAP,KAAaC,EAAb,KACA,GAA0BtD,EAAAA,EAAAA,UAAS,GAAnC,eAAOuD,EAAP,KAAcC,EAAd,KACA,GAAkDxD,EAAAA,EAAAA,YAAlD,eAAOyD,EAAP,KAA0BC,EAA1B,KACA,GAA4B1D,EAAAA,EAAAA,UAAS,IAArC,eAAO2D,EAAP,KAAeC,EAAf,KACA,GAA0B5D,EAAAA,EAAAA,UAAS,IAAnC,eAAO6D,EAAP,KAAcC,EAAd,KACA,GAA0B9D,EAAAA,EAAAA,UAAS,MAAnC,eAAO+D,EAAP,KAAcC,EAAd,KACA,GAAgChE,EAAAA,EAAAA,UAAS,MAAzC,eAAOiE,EAAP,KAAiBC,EAAjB,KACA,GAAoClE,EAAAA,EAAAA,WAAS,GAA7C,gBAAOmE,GAAP,MAAmBC,GAAnB,MACA,IAA0BpE,EAAAA,EAAAA,UAAS,iEAAnC,iBAAOqE,GAAP,MAAcC,GAAd,MAGA,IAAwCtE,EAAAA,EAAAA,eAASuE,GAAjD,iBAAOzD,GAAP,MAAqB0D,GAArB,MAsBMC,GAAa,SAACC,EAAKC,EAAOC,GAC5BxB,EAAQD,EAAK0B,KAAI,SAAAC,GAAC,OAAIA,EAAEF,SAAWA,GAAb,kBAA2BE,GAA3B,cAA+BJ,EAAMC,IAAUG,OAyBnEC,GAAQ,WACV3B,EAAQ,IACRE,EAAQ,IACRE,EAAS,GACTI,EAAU,IACVI,EAAS,MACTE,EAAY,MACZR,IACAU,IAAc,GACdE,GAAS,IAETrB,KAIE+B,GAAQ,yCAAG,yGACUC,EAAAA,EAAAA,IAAU,eADpB,OAEW,OADlBC,EADO,QAEAC,QAAgBrB,EAASoB,EAASE,MAFlC,2CAAH,qDASd,OAJAC,EAAAA,EAAAA,YAAU,WACNL,OACD,KAGC,+BACI,UAAC,KAAD,CACIhC,OAAQA,EACRC,QAAS8B,GAFb,WAII,SAAC,KAAD,KACA,UAAC,KAAD,YACI,SAAC,KAAD,2GACA,SAAC,KAAD,KACA,UAAC,KAAD,CAAWO,GAAI,EAAf,WACI,UAAC,KAAD,YACI,SAAC,KAAD,wCACA,kBAAOC,OAAO,UAAUrD,KAAK,OAAOmB,KAAK,SAASmC,GAAG,aAAahD,SAnFvE,SAAAiD,GACf,GAAIA,EAAM5E,OAAO6E,OAASD,EAAM5E,OAAO6E,MAAMC,OAAS,EAAG,CACrD,IAAMC,EAAS,IAAIC,WAEnBD,EAAOE,iBAAiB,QAAQ,kBAC5B5B,EAAY0B,EAAOG,WAGvBH,EAAOI,cAAcP,EAAM5E,OAAO6E,MAAM,IACxC1B,EAASyB,EAAM5E,OAAO6E,MAAM,WA4Ef3B,IACG,SAAC,EAAD,CAAcjE,YAAamE,EAAUlE,eAAgB,SAACe,GAAD,OAAkB0D,GAAgB1D,OAE3F,UAAC,KAAD,YACI,SAAC,KAAD,KACA,SAAC,KAAD,8CACA,SAAC,KAAD,CAAOmF,YAAY,iCAAQtB,MAAOtB,EAAMb,SAAU,SAAC0D,GAAD,OAAO5C,EAAQ4C,EAAErF,OAAO8D,cAE9E,UAAC,KAAD,YACI,SAAC,KAAD,wCACA,SAAC,KAAD,CAAOsB,YAAY,2BAAOtB,MAAOpB,EAAOf,SAAU,SAAC0D,GAAD,OAAO1C,EAAS2C,OAAOD,EAAErF,OAAO8D,eAEtF,UAAC,KAAD,YACI,SAAC,KAAD,gGACA,UAAC,KAAD,YACI,SAAC,KAAD,CAAUyB,GAAG,OAAO5D,SAAU,SAAC0D,GAAD,OAAO9B,GAAc8B,EAAErF,OAAOwF,aAC5D,SAAC,KAAD,CAAOJ,YAAY,mFAAkBK,YAAanC,GAAYQ,MAAOlB,EAAmBjB,SAAU,SAAC0D,GAAD,OAAOxC,EAAqByC,OAAOD,EAAErF,OAAO8D,kBAGtJ,UAAC,KAAD,YACI,SAAC,KAAD,kCACA,SAAC,KAAD,CAAQsB,YAAY,sEAAezD,SAAU,SAAC0D,GAAD,OAAOtC,EAAUsC,EAAErF,OAAO8D,QAAQA,MAAOhB,EAAtF,SACKE,EAAMgB,KAAI,SAAAC,GAAC,OACR,mBAAmBH,MAAOG,EAAEU,GAA5B,SAAiCV,EAAEzB,MAAtByB,EAAEU,UAGvB,SAAC,KAAD,wHACA,SAAC,KAAD,CAAQS,YAAY,4EAAgBzD,SAAU,SAAC0D,GAAD,OAAO5B,GAAS4B,EAAErF,OAAO8D,QAAQA,MAAON,GAAtF,SApHb,CAAC,gEAAe,2EAAgB,+DAAc,gEAqHzBQ,KAAI,SAAAC,GAAC,OACL,4BAAiBA,GAAJA,YAIzB,SAAC,KAAD,KACA,SAAC,KAAD,kFAEA,SAAC,KAAD,CAAayB,aAAa,MAAMC,GAAG,OAAOC,QAAQ,OAAOC,eAAe,SAAxE,UACI,SAAC,KAAD,CAAQC,YAAY,QAChBC,QA9GZ,WACZxD,EAAQ,GAAD,eAAKD,GAAL,CAAW,CAAE0D,MAAO,GAAIC,YAAa,GAAIlC,OAAQxC,KAAK2E,WA4GzC,mIAIH5D,EAAK0B,KAAI,SAAAC,GAAC,OACP,UAAC,KAAD,CAA4BkC,MAAO,CAAEP,QAAS,OAAQF,aAAc,OAApE,WACI,gBAAKS,MAAO,CAAEC,YAAa,OAA3B,UACI,SAAC,KAAD,CAAOhB,YAAY,iCACfzD,SAAU,SAAC0D,GAAD,OAAOzB,GAAW,QAASyB,EAAErF,OAAO8D,MAAOG,EAAEF,cAG/D,gBAAKoC,MAAO,CAAEC,YAAa,OAA3B,UACI,SAAC,KAAD,CAAOhB,YAAY,mDACfzD,SAAU,SAAC0D,GAAD,OAAOzB,GAAW,cAAeyB,EAAErF,OAAO8D,MAAOG,EAAEF,cAErE,0BACI,SAAC,KAAD,CAAQ+B,YAAY,MAChBC,QAAS,kBA3HzBhC,EA2H0CE,EAAEF,OA1H5DxB,EAAQD,EAAK+D,QAAO,SAAApC,GAAC,OAAIA,EAAEF,SAAWA,WACtClE,QAAQC,IAAIwC,GAFG,IAACyB,GA0HY,mBAXUE,EAAEF,eAmB5B,UAAC,KAAD,YACI,SAAC,KAAD,CAAQ+B,YAAY,OAAOQ,GAAI,EAAGP,QA3HvC,WACX,IAAMQ,EAAW,IAAIC,SACrBD,EAASE,OAAO,OAAQjE,GACxB+D,EAASE,OAAO,QAAS/D,GACzB6D,EAASE,OAAO,QAASxG,IACzBsG,EAASE,OAAO,SAAU3D,GAC1ByD,EAASE,OAAO,QAASjD,IACzB+C,EAASE,OAAO,OAAQC,KAAKC,UAAUrE,IACvCiE,EAASE,OAAO,aAAcnD,IAC1BA,IAAYiD,EAASE,OAAO,oBAAqB7D,GAErDwB,EAAAA,EAAAA,KAAW,cAAemC,EAAU,CAChCK,QAAS,CACL,eAAgB,yBAGnBC,MAAK,WACFxE,IACA6B,SAyGQ,mBAGA,SAAC,KAAD,CAAQ6B,QAAS3D,EAAjB,kCAOxB,I,UC9KM0E,GAAc5E,EAAAA,EAAAA,KAAS,YAA8B,IAA3BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,QAASC,EAAS,EAATA,GACrC0E,GAASC,EAAAA,EAAAA,YAAWC,EAAAA,GAApBF,KACR,GAA0B5H,EAAAA,EAAAA,YAA1B,eAAQqD,EAAR,KAAcC,EAAd,KACA,GAA4BtD,EAAAA,EAAAA,YAA5B,eAAQuD,EAAR,KAAeC,EAAf,KACA,GAA8BxD,EAAAA,EAAAA,YAA9B,eAAQ2D,EAAR,KAAgBC,EAAhB,KACA,GAA4B5D,EAAAA,EAAAA,YAA5B,eAAQqE,EAAR,KAAeC,EAAf,KACA,GAAwBtE,EAAAA,EAAAA,UAAS,IAAjC,eAAOmD,EAAP,KAAaC,EAAb,KAEA,GAA0BpD,EAAAA,EAAAA,UAAS,IAAnC,eAAO6D,EAAP,KAAcC,EAAd,KAGMiE,EAAM,yCAAG,mGACY9C,EAAAA,EAAAA,IAAA,eAAkB2C,EAAKpC,IAAM,CAChDnC,KAAI,OAAEA,QAAF,IAAEA,EAAAA,EAAQuE,EAAKvE,KACnBE,MAAK,OAAEA,QAAF,IAAEA,EAAAA,EAASqE,EAAKrE,MACrBc,MAAK,OAAEA,QAAF,IAAEA,EAAAA,EAASuD,EAAKzC,OACrBxB,OAAM,OAAEA,QAAF,IAAEA,EAAAA,EAAUiE,EAAKjE,OACvBR,KAAMoE,KAAKC,UAAL,OAAerE,QAAf,IAAeA,EAAAA,EAAQyE,EAAKI,UAN3B,OAQa,MARb,OAQE7C,SACTjC,IACAD,KAVO,2CAAH,qDAcN+B,EAAQ,yCAAG,yGACUC,EAAAA,EAAAA,IAAU,eADpB,OAEW,OADlBC,EADO,QAEAC,QAAgBrB,EAASoB,EAASE,MAFlC,2CAAH,qDAWRX,EAAa,SAACC,EAAKC,EAAOC,GAC5BxB,EAAQD,EAAK0B,KAAI,SAAAC,GAAC,OAAIA,EAAEF,SAAWA,GAAb,kBAA2BE,GAA3B,cAA+BJ,EAAMC,IAAUG,OAazE,OAJAO,EAAAA,EAAAA,YAAU,WACNL,MACD,KAGC,+BACI,UAAC,KAAD,CACIhC,OAAQA,EACRC,QAdE,WACVK,IACAE,IACAP,KASI,WAII,SAAC,KAAD,KACA,UAAC,KAAD,YACI,SAAC,KAAD,uHACA,SAAC,KAAD,KACA,UAAC,KAAD,CAAWqC,GAAI,EAAf,WACI,UAAC,KAAD,YACI,SAAC,KAAD,8CACA,SAAC,KAAD,CAAOW,YAAY,iCAAQgC,aAAcL,EAAKvE,KAAMsB,MAAOtB,EAAMb,SAAU,SAAC0D,GAAD,OAAO5C,EAAQ4C,EAAErF,OAAO8D,cAEvG,UAAC,KAAD,YACI,SAAC,KAAD,wCACA,SAAC,KAAD,CAAOsB,YAAY,2BAAOgC,aAAcL,EAAKrE,MAAOoB,MAAOpB,EAAOf,SAAU,SAAC0D,GAAD,OAAO1C,EAAS0C,EAAErF,OAAO8D,cAEzG,UAAC,KAAD,YACI,SAAC,KAAD,kCACA,SAAC,KAAD,CAAQsB,YAAY,sEAApB,SACKpC,EAAMgB,KAAI,SAAAC,GAAC,OACR,mBAAmBoD,SAAUN,EAAKjE,SAAWmB,EAAEU,GAAIoB,QAAS,kBAAMhD,EAAUkB,EAAEU,KAA9E,SAAoFV,EAAEzB,MAAzEyB,EAAEU,UAGvB,SAAC,KAAD,wHACA,SAAC,KAAD,CAAQS,YAAY,4EAAgBgC,aAAcL,EAAKvD,MAAO7B,SAAU,SAAC0D,GAAD,OAAO5B,EAAS4B,EAAErF,OAAO8D,QAAQA,MAAON,EAAhH,SApEb,CAAC,gEAAe,2EAAgB,+DAAc,gEAqEzBQ,KAAI,SAAAC,GAAC,OACL,4BAAiBA,GAAJA,YAKzB,SAAC,KAAD,CAAa0B,GAAG,OAAOC,QAAQ,OAAOC,eAAe,SAArD,UACI,SAAC,KAAD,CAAQC,YAAY,QAChBC,QAxDZ,WACZxD,EAAQ,GAAD,eAAKD,GAAL,CAAW,CAAE0D,MAAO,GAAIC,YAAa,GAAIlC,OAAQxC,KAAK2E,WAsDzC,mIAIH5D,EAAK0B,KAAI,SAAAC,GAAC,OACP,UAAC,KAAD,CAA4BkC,MAAO,CAAEP,QAAS,OAAQF,aAAc,OAApE,WACI,gBAAKS,MAAO,CAAEC,YAAa,OAA3B,UACI,SAAC,KAAD,CAAOhB,YAAY,iCACfzD,SAAU,SAAC0D,GAAD,OAAOzB,EAAW,QAASyB,EAAErF,OAAO8D,MAAOG,EAAEF,cAG/D,gBAAKoC,MAAO,CAAEC,YAAa,OAA3B,UACI,SAAC,KAAD,CAAOhB,YAAY,mDACfzD,SAAU,SAAC0D,GAAD,OAAOzB,EAAW,cAAeyB,EAAErF,OAAO8D,MAAOG,EAAEF,cAErE,0BACI,SAAC,KAAD,CAAQ+B,YAAY,MAChBC,QAAS,kBArEzBhC,EAqE0CE,EAAEF,YApE5DxB,EAAQD,EAAK+D,QAAO,SAAApC,GAAC,OAAIA,EAAEF,SAAWA,MADvB,IAACA,GAoEY,mBAXUE,EAAEF,eAmB5B,UAAC,KAAD,YACI,SAAC,KAAD,CAAQ+B,YAAY,OAAOQ,GAAI,EAAGP,QAASmB,EAA3C,mBAGA,SAAC,KAAD,CAAQnB,QAAS3D,EAAjB,kCAQxB,ICxFA,MApCA,YAA8C,IAApBD,EAAmB,EAAnBA,OAAQC,EAAW,EAAXA,QAC9B,GAAwBjD,EAAAA,EAAAA,YAAxB,eAAOkC,EAAP,KAAaiG,EAAb,KADyC,8CAGzC,mGAC2BlD,EAAAA,EAAAA,KAAW,eAAgB,CAAEmD,SAAUlG,IADlE,cAEIe,IAFJ,4CAHyC,sBAQzC,OACI,+BACI,UAAC,KAAD,CACID,OAAQA,EACRC,QAASA,EAFb,WAII,SAAC,KAAD,KACA,UAAC,KAAD,YACI,SAAC,KAAD,oIACA,SAAC,KAAD,KACA,SAAC,KAAD,CAAWqC,GAAI,EAAf,UACI,UAAC,KAAD,YACI,SAAC,KAAD,8CACA,SAAC,KAAD,CAAOW,YAAY,iCAAQtB,MAAOzC,EAAMM,SAAU,SAAC0D,GAAD,OAAOiC,EAAQjC,EAAErF,OAAO8D,gBAIlF,UAAC,KAAD,YACI,SAAC,KAAD,CAAQiC,QA1Ba,2CA0BKD,YAAY,OAAOQ,GAAI,EAAjD,mDAGA,SAAC,KAAD,CAAQP,QAAS3D,EAAjB,gFC7BlBoF,GAAiBtF,EAAAA,EAAAA,KAAS,YAA0B,IAAvBC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACzC,GAA0BjD,EAAAA,EAAAA,UAAS,IAAnC,eAAO6D,EAAP,KAAcC,EAAd,KACA,GAAoC9D,EAAAA,EAAAA,UAAS,IAA7C,eAAOsI,EAAP,KAAmBC,EAAnB,KAFuD,SAIxCvD,IAJwC,6EAIvD,yGACyBC,EAAAA,EAAAA,IAAU,eADnC,OAE0B,OADlBC,EADR,QAEeC,QACXrB,EAASoB,EAASE,MAHtB,4CAJuD,oEAmBvD,mGACyBH,EAAAA,EAAAA,KAAA,cAA0B,CAAEqD,WAAAA,IADrD,cAEenD,SACXH,IACA/B,KAJJ,4CAnBuD,sBA+BvD,OAJAoC,EAAAA,EAAAA,YAAU,WACRL,MACC,KAGD,+BACE,UAAC,KAAD,CAAOhC,OAAQA,EAAQC,QAASA,EAAhC,WACE,SAAC,KAAD,KACA,UAAC,KAAD,YACE,SAAC,KAAD,0IACA,SAAC,KAAD,KACA,SAAC,KAAD,CAAWqC,GAAI,EAAf,UACE,SAAC,KAAD,CAAYkD,gBAAgB,cAA5B,SACG3E,GACCA,EAAMgB,KAAI,SAAC3C,GAAD,OACR,SAAC,KAAD,CAAUyE,YAAY,MAAMnE,SAAU,SAAC0D,GAAD,OAAOA,EAAErF,OAAOwF,SA/B7Cb,EA+BuEtD,EAAKsD,QA9BnG+C,EAAc,GAAD,eAAKD,GAAL,CAAiB9C,MAGhC,SAAkCA,GAChC+C,EAAcD,EAAWpB,QAAO,SAACuB,GAAD,OAAYA,IAAWjD,MA0BkDkD,CAAyBxG,EAAKsD,IA/BzI,IAAyBA,GA+BT,SACGtD,EAAKmB,eAMhB,UAAC,KAAD,YACE,SAAC,KAAD,CAAQuD,QAlDqC,2CAkDfD,YAAY,MAAMQ,GAAI,EAApD,+DAGA,SAAC,KAAD,CAAQP,QAAS3D,EAAjB,kFAQZ,I,UCjBA,MA1CA,YAA8C,IAAxBD,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,QAASC,EAAM,EAANA,GACnC,GAA4BlD,EAAAA,EAAAA,YAA5B,eAAO2I,EAAP,KAAeC,EAAf,KACA,GAAwB5I,EAAAA,EAAAA,YAAxB,eAAO6I,EAAP,KAAaC,EAAb,KAUA,OACI,+BACI,UAAC,KAAD,CACI9F,OAAQA,EACRC,QAASA,EAFb,WAII,SAAC,KAAD,KACA,UAAC,KAAD,YACI,SAAC,KAAD,yFACA,SAAC,KAAD,KACA,SAAC,KAAD,CAAWqC,GAAI,EAAf,UACI,UAAC,KAAD,YACI,SAAC,KAAD,8CACA,SAAC,KAAD,CAAOW,YAAY,iCAAQtB,MAAOgE,EAAQnG,SAAU,SAAC0D,GAAD,OAAO0C,EAAU1C,EAAErF,OAAO8D,WAC9E,SAAC,KAAD,mFACA,SAAC,IAAD,CAAUoE,EAAE,QAAQ9C,YAAY,sEAAetB,MAAOkE,EAAMrG,SAAU,SAAC0D,GAAD,OAAO4C,EAAQ5C,EAAErF,OAAO8D,gBAItG,UAAC,KAAD,YACI,SAAC,KAAD,CAAQiC,QA5B5B,WACI3B,EAAAA,EAAAA,KAAW,qBAAsB,CAAC0D,OAAAA,EAAQE,KAAAA,IACpCnB,MAAK,WACHxE,IACAD,QAwBqC0D,YAAY,OAAOQ,GAAI,EAApD,mDAGA,SAAC,KAAD,CAAQP,QAAS3D,EAAjB,gFCMxB,MAzCA,YAAoF,IAA7DD,EAA4D,EAA5DA,OAAQC,EAAoD,EAApDA,QAAa+F,GAAuC,EAA3C9F,GAA2C,EAAvC8F,aAAaC,EAA0B,EAA1BA,YAAaC,EAAa,EAAbA,UAClE,GAAwBlJ,EAAAA,EAAAA,YAAxB,eAAO6I,EAAP,KAAaC,EAAb,KACA,GAAwB9I,EAAAA,EAAAA,YAAxB,eAAOqD,EAAP,KAAaC,EAAb,KACM6F,EAAW,yCAAG,mGAEOlE,EAAAA,EAAAA,IAAA,2BAA8BiE,GAAa,CAAEL,KAAAA,EAAMF,OAAQtF,IAFlE,OAGQ,MAHR,OAGH8B,QAAgBlC,IAHb,2CAAH,qDAMjB,OACI,+BACI,UAAC,KAAD,CACID,OAAQA,EACRC,QAASA,EAFb,WAII,SAAC,KAAD,KACA,UAAC,KAAD,YACI,SAAC,KAAD,iHACA,SAAC,KAAD,KACA,UAAC,KAAD,CAAWqC,GAAI,EAAf,WACI,UAAC,KAAD,YACI,SAAC,KAAD,8CACA,SAAC,KAAD,CAAOW,YAAY,iCAAQgC,aAAcgB,EAAatE,MAAOtB,EAAMb,SAAU,SAAC0D,GAAD,OAAO5C,EAAQ4C,EAAErF,OAAO8D,cAEzG,SAAC,KAAD,WACI,SAAC,IAAD,CAAUoE,EAAE,QAAQ9C,YAAY,sEAAegC,aAAce,EAAarE,MAAOkE,EAAMrG,SAAU,SAAC0D,GAAD,OAAO4C,EAAQ5C,EAAErF,OAAO8D,gBAKjI,UAAC,KAAD,YACI,SAAC,KAAD,CAAQgC,YAAY,OAAOQ,GAAI,EAAGP,QAASuC,EAA3C,mDAGA,SAAC,KAAD,CAAQvC,QAAS,WAAQ3D,KAAzB,gFCtClBmG,GAAQrG,EAAAA,EAAAA,KAAS,WACnB,IAAMsG,EAAM,CACR,mDAAY,cACZ,qEAAe,gBACf,uCAAU,gBACV,+DAAc,qBAGVzB,GAASC,EAAAA,EAAAA,YAAWC,EAAAA,GAApBF,KAER,GAAwB5H,EAAAA,EAAAA,UAAS,oDAAjC,eAAOsJ,EAAP,KAAaC,EAAb,KACA,GAAwBvJ,EAAAA,EAAAA,UAAS,IAAjC,eAAOoF,EAAP,KAAaoE,EAAb,KACA,GAAsCxJ,EAAAA,EAAAA,UAAS,IAA/C,eAAOiJ,EAAP,KAAoBQ,EAApB,KACA,GAAsCzJ,EAAAA,EAAAA,UAAS,IAA/C,eAAOgJ,EAAP,KAAoBU,EAApB,KACA,GAAkC1J,EAAAA,EAAAA,UAAS,IAA3C,eAAOkJ,EAAP,KAAkBS,EAAlB,KAEA,GAA2FC,EAAAA,EAAAA,MAA3EC,EAAhB,EAAQ7G,OAAkC8G,EAA1C,EAAkCC,OAAmCC,EAArE,EAA4D/G,QAC5D,GAA8F2G,EAAAA,EAAAA,MAA9EK,EAAhB,EAAQjH,OAAmCkH,EAA3C,EAAmCH,OAAoCI,EAAvE,EAA8DlH,QAC9D,GAAuG2G,EAAAA,EAAAA,MAAvFQ,EAAhB,EAAQpH,OAAsCqH,EAA9C,EAAsCN,OAAuCO,GAA7E,EAAoErH,QACpE,IAAgH2G,EAAAA,EAAAA,MAAhGW,GAAhB,GAAQvH,OAAyCwH,GAAjD,GAAyCT,OAA0CU,GAAnF,GAA0ExH,QAC1E,IAA2F2G,EAAAA,EAAAA,MAA3Ec,GAAhB,GAAQ1H,OAAkC2H,GAA1C,GAAkCZ,OAAmCa,GAArE,GAA4D3H,QAC5D,IAA8F2G,EAAAA,EAAAA,MAA9EiB,GAAhB,GAAQ7H,OAAmC8H,GAA3C,GAAmCf,OAAoCgB,GAAvE,GAA8D9H,QArBrC,SAuBV+H,GAvBU,mFAuBzB,WAAuBC,GAAvB,4FAC2BhG,EAAAA,EAAAA,IAAUgG,EAAO,CACpCxD,QAAS,CACL,cAAiByD,aAAaC,QAAQ,YAHlD,OAM4B,OALlBjG,EADV,QAMiBC,QACTqE,EAAQtE,EAASE,MAPzB,4CAvByB,sEAuCzB,WAA6BI,GAA7B,sFAC2BP,EAAAA,EAAAA,OAAA,eAAqBO,IADhD,OAG4B,MAH5B,OAGiBL,QACTqE,EAAQpE,EAAK8B,QAAO,SAAAkE,GAAI,OAAIA,EAAK5F,KAAOA,MAJhD,4CAvCyB,uBAkCzBH,EAAAA,EAAAA,YAAU,WACNmE,EAAQ,IACRwB,GAAQ3B,EAAIC,MACb,CAACA,IArCqB,gDA2EzB,WAA6B9D,GAA7B,sFAC2BP,EAAAA,EAAAA,OAAA,6BAAmCO,IAD9D,OAG4B,MAH5B,OAGiBL,QACTqE,EAAQpE,EAAK8B,QAAO,SAAAkE,GAAI,OAAIA,EAAK5F,KAAOA,MAJhD,4CA3EyB,sEAmFzB,WAAuB6F,EAAM7F,GAA7B,sFAC2BP,EAAAA,EAAAA,KAAA,uBAA2BO,GAAM,CAAE6F,KAAAA,IAD9D,eAGQL,GAAQ3B,EAAI,uEAHpB,4CAnFyB,sEA0FzB,WAA0B7D,GAA1B,sFAC2BP,EAAAA,EAAAA,OAAA,0BAAgCO,IAD3D,eAGQgE,EAAQpE,EAAK8B,QAAO,SAAAoE,GAAI,OAAIA,EAAK9F,KAAOA,MAHhD,4CA1FyB,sEAiGzB,WAA6BnB,EAAOmB,GAApC,sFAC2BP,EAAAA,EAAAA,IAAA,6BAAgCO,GAAM,CAAEnB,MAAAA,IADnE,eAGQ2G,GAAQ3B,EAAI,iEAHpB,4CAjGyB,sBAwGzB,OACI,UAAC,KAAD,CAAW5C,QAAQ,OAAO8E,cAAc,SAASC,WAAW,SAASC,EAAE,OAAOC,KAAK,SAAnF,WACI,UAAC,KAAD,YACI,SAAC,KAAD,CAAYxL,MAAM,QAAQyL,GAAG,OAAOC,GAAIC,EAAAA,GAAQC,WAAW,SAAC,KAAD,IAA3D,SACKxC,KAEL,SAAC,KAAD,WACI,UAAC,KAAD,YACI,SAAC,KAAD,CAAU1C,QAAS,kBAAM2C,EAAQ,qDAAjC,+DACA,SAAC,KAAD,CAAU3C,QAAS,kBAAM2C,EAAQ,uEAAjC,iFACA,SAAC,KAAD,CAAU3C,QAAS,kBAAM2C,EAAQ,iEAAjC,2EACA,SAAC,KAAD,CAAU3C,QAAS,kBAAM2C,EAAQ,yCAAjC,0DAKF,qDAATD,IACG,iCACI,SAAC,KAAD,CAAQ1C,QAASkD,EAAjB,yIACA,SAAC,KAAD,CAAQlD,QAASyD,EAAsB7D,GAAG,MAA1C,kKACA,SAAC,KAAD,CAAQI,QAAS4D,GAAyBjE,aAAa,OAAvD,yIAEA,SAAC,KAAD,WACI,UAAC,KAAD,CAAOwF,GAAG,WAAWC,QAAQ,UAAUC,QAAS,GAAhD,WACI,SAAC,KAAD,2GACA,SAAC,KAAD,WACI,UAAC,EAAAC,GAAD,YACI,SAAC,EAAAC,GAAD,4EACA,SAAC,EAAAA,GAAD,8CACA,SAAC,EAAAA,GAAD,wCACA,SAAC,EAAAA,GAAD,wCACA,SAAC,EAAAA,GAAD,0DACA,SAAC,EAAAA,GAAD,qEAGR,SAAC,KAAD,UACK/G,EAAKP,KAAI,SAAAuH,GAAO,OACb,UAAC,EAAAF,GAAD,YACI,SAAC,EAAAG,GAAD,WAAI,SAAC,KAAD,CAAOtD,EAAE,OAAOnG,IAAKwJ,EAAQrI,MAAOkI,QAAS,OACjD,SAAC,EAAAI,GAAD,UAAKD,EAAQ/I,QACb,UAAC,EAAAgJ,GAAD,CAAIC,UAAU,SAAd,UAAwBF,EAAQ7I,MAAhC,aACA,SAAC,EAAA8I,GAAD,CAAIC,UAAU,SAAd,SAAwBF,EAAQ/H,SAChC,SAAC,EAAAgI,GAAD,CAAIC,UAAU,SAAd,UAAuB,SAAC,KAAD,CAAQ3F,YAAY,OAAOC,QAAS,kBA3F/F,YAAmE,IAA1CpB,EAAyC,EAAzCA,GAAInC,EAAqC,EAArCA,KAAMM,EAA+B,EAA/BA,OAAQI,EAAuB,EAAvBA,MAAOR,EAAgB,EAAhBA,MAAOc,EAAS,EAATA,MACrDuD,EAAK2E,MAAM/G,GACXoC,EAAKtE,QAAQD,GACbuE,EAAKhE,UAAUD,GACfiE,EAAK5D,SAASD,GACd6D,EAAKpE,SAASD,GACdqE,EAAKtD,SAASD,GACd6F,IAoFiGsC,CAAcJ,IAAxD,UAAkE,SAAC,KAAD,SACzF,SAAC,EAAAC,GAAD,CAAIC,UAAU,SAAd,UAAuB,SAAC,KAAD,CAAQ3F,YAAY,MAAMC,QAAS,kBAnJrE,4CAmJ2E6F,CAAcL,EAAQ5G,KAA/D,UAAoE,SAAC,KAAD,iBAIvG,SAAC,KAAD,WACI,UAAC,EAAA0G,GAAD,YACI,SAAC,EAAAC,GAAD,4EACA,SAAC,EAAAA,GAAD,8CACA,SAAC,EAAAA,GAAD,wCACA,SAAC,EAAAA,GAAD,wCACA,SAAC,EAAAA,GAAD,0DACA,SAAC,EAAAA,GAAD,4EASX,uEAAT7C,IACA,+BACI,SAAC,KAAD,WACI,UAAC,KAAD,CAAOyC,GAAG,WAAWC,QAAQ,UAAUC,QAAS,GAAhD,WACI,SAAC,KAAD,sJACA,SAAC,KAAD,WACI,UAAC,EAAAC,GAAD,YACI,SAAC,EAAAC,GAAD,8FACA,SAAC,EAAAA,GAAD,mCACA,SAAC,EAAAA,GAAD,qBACA,SAAC,EAAAA,GAAD,wCACA,SAAC,EAAAA,GAAD,qEAGR,SAAC,KAAD,UACK/G,EAAKP,KAAI,SAAAyG,GAAI,OACV,UAAC,EAAAY,GAAD,YACI,SAAC,EAAAG,GAAD,UAAKf,EAAK9F,MACV,SAAC,EAAA6G,GAAD,UAAKf,EAAKjI,QACV,SAAC,EAAAgJ,GAAD,UAAKf,EAAKoB,SACV,SAAC,EAAAL,GAAD,WACI,UAAC,KAAD,CAAQ1H,MAAO2G,EAAKD,KAAM7I,SAAU,SAAC0D,GAAD,OA5LnD,8CA4L0DyG,CAAQzG,EAAErF,OAAO8D,MAAO2G,EAAK9F,KAAxE,WACI,0CACA,4CAGR,SAAC,EAAA6G,GAAD,WAAI,SAAC,KAAD,CAAQ1F,YAAY,MAAMC,QAAS,kBAjMlD,4CAiMwDgG,CAAWtB,EAAK9F,KAAzD,UAA8D,SAAC,KAAD,iBAI9E,SAAC,KAAD,WACI,UAAC,EAAA0G,GAAD,YACI,SAAC,EAAAC,GAAD,8FACA,SAAC,EAAAA,GAAD,mCACA,SAAC,EAAAA,GAAD,qBACA,SAAC,EAAAA,GAAD,wCACA,SAAC,EAAAA,GAAD,2EASX,iEAAT7C,IACA,+BACI,SAAC,KAAD,WACI,UAAC,KAAD,CAAOyC,GAAG,WAAWC,QAAQ,UAAUC,QAAS,GAAhD,WACI,SAAC,KAAD,oIACA,SAAC,KAAD,WACI,UAAC,EAAAC,GAAD,YACI,SAAC,EAAAC,GAAD,8FACA,SAAC,EAAAA,GAAD,wCACA,SAAC,EAAAA,GAAD,wCACA,SAAC,EAAAA,GAAD,6EAGR,SAAC,KAAD,UACK/G,EAAKP,KAAI,SAAAgI,GAAK,OACX,UAAC,EAAAX,GAAD,YACI,SAAC,EAAAG,GAAD,UAAKQ,EAAMrH,MACX,UAAC,EAAA6G,GAAD,WAAKQ,EAAMtJ,MAAX,aACA,SAAC,EAAA8I,GAAD,WACI,UAAC,KAAD,CAAQ1H,MAAOkI,EAAMxI,MAAO7B,SAAU,SAAC0D,GAAD,OAvOrD,8CAuO4D4G,CAAc5G,EAAErF,OAAO8D,MAAOkI,EAAMrH,KAAjF,WACI,mFACA,6HACA,6FAGR,SAAC,EAAA6G,GAAD,UAAKQ,EAAME,gBAIvB,SAAC,KAAD,WACI,UAAC,EAAAb,GAAD,YACI,SAAC,EAAAC,GAAD,8FACA,SAAC,EAAAA,GAAD,wCACA,SAAC,EAAAA,GAAD,wCACA,SAAC,EAAAA,GAAD,mFASX,yCAAT7C,IACA,iCACI,SAAC,KAAD,CAAQ/C,aAAa,OAAOK,QAAS+D,GAArC,oGAEA,SAAC,KAAD,WACI,UAAC,KAAD,CAAOoB,GAAG,WAAWC,QAAQ,UAAUC,QAAS,GAAhD,WACI,SAAC,KAAD,kHACA,SAAC,KAAD,WACI,UAAC,EAAAC,GAAD,YACI,SAAC,EAAAC,GAAD,8FACA,SAAC,EAAAA,GAAD,sEACA,SAAC,EAAAA,GAAD,yFACA,SAAC,EAAAA,GAAD,0DACA,SAAC,EAAAA,GAAD,qEAGR,SAAC,KAAD,UACK/G,EAAKP,KAAI,SAAAmI,GAAO,OACb,UAAC,EAAAd,GAAD,YACI,SAAC,EAAAG,GAAD,UAAKW,EAAQxH,MACb,SAAC,EAAA6G,GAAD,UAAKW,EAAQrE,UACb,SAAC,EAAA0D,GAAD,CAAIY,aAAa,WAAWC,SAAS,SAASlG,MAAO,CAAEmG,SAAU,SAAjE,SAA6EH,EAAQnE,QACrF,SAAC,EAAAwD,GAAD,WAAI,SAAC,KAAD,CAAQ1F,YAAY,OAAOC,QAAS,kBAtOtD,SAACoG,GACnBvD,EAAeuD,EAAQrE,QACvBe,EAAesD,EAAQnE,MACvBc,EAAaqD,EAAQxH,IACrBsF,KAkO8EsC,CAAcJ,IAAxD,UAAkE,SAAC,KAAD,SACtE,SAAC,EAAAX,GAAD,WAAI,SAAC,KAAD,CAAQ1F,YAAY,MAAMC,QAAS,kBAtRlD,4CAsRwDyG,CAAcL,EAAQxH,KAA/D,UAAoE,SAAC,KAAD,iBAIpF,SAAC,KAAD,WACI,UAAC,EAAA0G,GAAD,YACI,SAAC,EAAAC,GAAD,8FACA,SAAC,EAAAA,GAAD,sEACA,SAAC,EAAAA,GAAD,yFACA,SAAC,EAAAA,GAAD,0DACA,SAAC,EAAAA,GAAD,6EAQxB,SAAC,EAAD,CACInJ,OAAQ6G,EACR5G,QAAS+G,EACT9G,GAAI,kBAAM8H,GAAQ3B,EAAI,yDAE1B,SAAC,EAAD,CACIrG,OAAQiH,EACRhH,QAASkH,EACTjH,GAAI,kBAAM8H,GAAQ3B,EAAI,yDAC1B,SAAC,EAAD,CACIrG,OAAQoH,EACRnH,QAASqH,MACb,SAACgD,EAAD,CACItK,OAAQuH,GACRtH,QAASwH,MACb,SAAC,EAAD,CACIzH,OAAQ0H,GACRzH,QAAS2H,GACT1H,GAAI,kBAAM8H,GAAQ3B,EAAI,6CAC1B,SAAC,EAAD,CACIrG,OAAQ6H,GACR5H,QAAS8H,GACT7H,GAAI,kBAAM8H,GAAQ3B,EAAI,0CACtBL,YAAaA,EACbC,YAAaA,EACbC,UAAWA,UAS3B,K,qCCtVMqE,E,MAAWtI,GAAAA,OAAa,CAC5BuI,QAAS,2CACT/F,QAAS,CACP,wBAAiByD,aAAaC,QAAQ,gBAAtC,QAAkD,MAItDoC,EAASE,aAAavI,SAASwI,KAC7B,SAAAC,GAAG,OAAIA,KACP,SAAAC,GAIE,OAH8B,MAA1BA,EAAM1I,SAASC,QACjB+F,aAAa2C,WAAW,SAEnBlM,QAAQE,OAAO+L,MAI1B","sources":["components/cropImage.js","components/admin/NewProduct.js","components/admin/EditProduct.js","components/admin/AddProductType.js","components/admin/DeleteProductType.js","components/admin/AddArticle.js","components/admin/EditArticle.js","pages/admin.js","utils/axios.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport ReactCrop from 'react-image-crop';\r\nimport 'react-image-crop/dist/ReactCrop.css';\r\n\r\nfunction ImageCropper(props) {\r\n    const { imageToCrop, onImageCropped } = props;\r\n\r\n    const [cropConfig, setCropConfig] = useState(\r\n        {\r\n            unit: '%',\r\n            width: 30,\r\n            aspect: 1,\r\n        }\r\n    );\r\n\r\n    const [imageRef, setImageRef] = useState();\r\n\r\n    async function cropImage(crop) {\r\n        if (imageRef && crop.width && crop.height) {\r\n            console.log(imageRef);\r\n            const croppedImage = await getCroppedImage(\r\n                imageRef.target,\r\n                crop,\r\n                'croppedImage.jpeg'\r\n            );\r\n            onImageCropped(croppedImage);\r\n        }\r\n    }\r\n\r\n    function getCroppedImage(sourceImage, cropConfig) {\r\n        const canvas = document.createElement('canvas');\r\n        const scaleX = sourceImage.naturalWidth / sourceImage.width;\r\n        const scaleY = sourceImage.naturalHeight / sourceImage.height;\r\n        canvas.width = cropConfig.width;\r\n        canvas.height = cropConfig.height;\r\n        const ctx = canvas.getContext('2d');\r\n\r\n        ctx.drawImage(\r\n            sourceImage,\r\n            cropConfig.x * scaleX,\r\n            cropConfig.y * scaleY,\r\n            cropConfig.width * scaleX,\r\n            cropConfig.height * scaleY,\r\n            0,\r\n            0,\r\n            cropConfig.width,\r\n            cropConfig.height\r\n        );\r\n\r\n        return new Promise((resolve, reject) => {\r\n            canvas.toBlob(\r\n                (blob) => {\r\n                    if (!blob) {\r\n                        reject(new Error('Canvas is empty'));\r\n                        return;\r\n                    }\r\n\r\n                    const file = new File(\r\n                        [blob],\r\n                        'filename.png',\r\n                        {\r\n                            type: blob.type,\r\n                            lastModified: new Date().getTime()\r\n                        }\r\n                    )\r\n                    const croppedImage = file;\r\n\r\n                    resolve(croppedImage);\r\n                }, 'image/jpeg'\r\n            );\r\n        });\r\n    }\r\n\r\n    return (\r\n        <ReactCrop\r\n            crop={cropConfig}\r\n            ruleOfThirds\r\n            onChange={(cropConfig) => setCropConfig(cropConfig)}\r\n            onComplete={(cropConfig) => cropImage(cropConfig)}\r\n            aspect={1}\r\n        >\r\n            <img\r\n                onLoad={(imageRef) => setImageRef(imageRef)}\r\n                src={imageToCrop} />\r\n        </ReactCrop >\r\n    );\r\n}\r\n\r\nImageCropper.defaultProps = {\r\n    onImageCropped: () => { }\r\n}\r\n\r\nexport default ImageCropper;","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n    Button,\r\n    Modal,\r\n    ModalOverlay,\r\n    ModalContent,\r\n    ModalCloseButton,\r\n    ModalHeader,\r\n    FormControl,\r\n    Input,\r\n    FormLabel,\r\n    ModalBody,\r\n    ModalFooter,\r\n    Select,\r\n    Checkbox,\r\n    Flex\r\n} from \"@chakra-ui/react\";\r\nimport axios from '../../utils/axios';\r\nimport { observer } from \"mobx-react-lite\";\r\nimport ImageCropper from '../cropImage';\r\n\r\nconst NewProduct = observer(({ isOpen, onClose, cb }) => {\r\n    const [info, setInfo] = useState([])\r\n    const [name, setName] = useState(\"\")\r\n    const [price, setPrice] = useState(0)\r\n    const [priceWithDiscount, setPriceWithDiscount] = useState()\r\n    const [typeID, setTypeID] = useState(\"\")\r\n    const [types, setTypes] = useState([])\r\n    const [image, setImage] = useState(null)\r\n    const [imageUrl, setImageUrl] = useState(null)\r\n    const [isDiscount, setIsDiscount] = useState(false);\r\n    const [state, setState] = useState(\"В наявності\")\r\n    const is = [\"В наявності\", \"Закінчується\", \"Закінчився\", \"Очікується\"]\r\n\r\n    const [croppedImage, setCroppedImage] = useState(undefined);\r\n\r\n    const selectFile = event => {\r\n        if (event.target.files && event.target.files.length > 0) {\r\n            const reader = new FileReader();\r\n\r\n            reader.addEventListener('load', () =>\r\n                setImageUrl(reader.result)\r\n            );\r\n\r\n            reader.readAsDataURL(event.target.files[0]);\r\n            setImage(event.target.files[0]);\r\n        }\r\n    }\r\n\r\n    const addInfo = () => {\r\n        setInfo([...info, { title: '', description: '', number: Date.now() }])\r\n    }\r\n    const removeInfo = (number) => {\r\n        setInfo(info.filter(i => i.number !== number))\r\n        console.log(info)\r\n    }\r\n    const changeInfo = (key, value, number) => {\r\n        setInfo(info.map(i => i.number === number ? { ...i, [key]: value } : i))\r\n    }\r\n\r\n    const submit = () => {\r\n        const formData = new FormData()\r\n        formData.append('name', name)\r\n        formData.append('price', price)\r\n        formData.append(\"image\", croppedImage)\r\n        formData.append('typeID', typeID)\r\n        formData.append('state', state)\r\n        formData.append('info', JSON.stringify(info))\r\n        formData.append('isDiscount', isDiscount);\r\n        if (isDiscount) formData.append('priceWithDiscount', priceWithDiscount);\r\n\r\n        axios.post('good/create', formData, {\r\n            headers: {\r\n                'content-type': 'multipart/form-data',\r\n            }\r\n        })\r\n            .then(() => {\r\n                cb();\r\n                close();\r\n            })\r\n    }\r\n\r\n    const close = () => {\r\n        setInfo([])\r\n        setName(\"\")\r\n        setPrice(0)\r\n        setTypeID(\"\")\r\n        setImage(null)\r\n        setImageUrl(null)\r\n        setPriceWithDiscount()\r\n        setIsDiscount(false)\r\n        setState(\"\")\r\n\r\n        onClose();\r\n    }\r\n\r\n\r\n    const getTypes = async () => {\r\n        const response = await axios.get('type/getAll');\r\n        if (response.status === 200) setTypes(response.data);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getTypes();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                isOpen={isOpen}\r\n                onClose={close}\r\n            >\r\n                <ModalOverlay />\r\n                <ModalContent>\r\n                    <ModalHeader>Добавити продукт</ModalHeader>\r\n                    <ModalCloseButton />\r\n                    <ModalBody pb={6}>\r\n                        <FormControl>\r\n                            <FormLabel>Фото</FormLabel>\r\n                            <input accept=\"image/*\" type=\"file\" name=\"avatar\" id=\"reg-avatar\" onChange={selectFile} />\r\n                        </FormControl>\r\n                        {image &&\r\n                            <ImageCropper imageToCrop={imageUrl} onImageCropped={(croppedImage) => setCroppedImage(croppedImage)} />\r\n                        }\r\n                        <FormControl>\r\n                            <FormLabel></FormLabel>\r\n                            <FormLabel>Назва</FormLabel>\r\n                            <Input placeholder='Назва' value={name} onChange={(e) => setName(e.target.value)} />\r\n                        </FormControl>\r\n                        <FormControl>\r\n                            <FormLabel>Ціна</FormLabel>\r\n                            <Input placeholder='Ціна' value={price} onChange={(e) => setPrice(Number(e.target.value))} />\r\n                        </FormControl>\r\n                        <FormControl>\r\n                            <FormLabel>Ціна зі знижкою</FormLabel>\r\n                            <Flex>\r\n                                <Checkbox mx=\"10px\" onChange={(e) => setIsDiscount(e.target.checked)} />\r\n                                <Input placeholder='Ціна зі знижкою' isDisabled={!isDiscount} value={priceWithDiscount} onChange={(e) => setPriceWithDiscount(Number(e.target.value))} />\r\n                            </Flex>\r\n                        </FormControl>\r\n                        <FormControl>\r\n                            <FormLabel>Тип</FormLabel>\r\n                            <Select placeholder=\"Виберіть тип\" onChange={(e) => setTypeID(e.target.value)} value={typeID}>\r\n                                {types.map(i =>\r\n                                    <option key={i.id} value={i.id}>{i.name}</option>\r\n                                )}\r\n                            </Select>\r\n                            <FormLabel>Наявність на складі</FormLabel>\r\n                            <Select placeholder=\"Виберіть стан\" onChange={(e) => setState(e.target.value)} value={state}>\r\n                                {is.map(i =>\r\n                                    <option key={i}>{i}</option>\r\n                                )}\r\n                            </Select>\r\n                        </FormControl>\r\n                        <FormLabel></FormLabel>\r\n                        <FormLabel>Властивості</FormLabel>\r\n\r\n                        <FormControl marginBottom=\"5px\" my=\"15px\" display=\"flex\" justifyContent=\"center\" >\r\n                            <Button colorScheme=\"green\"\r\n                                onClick={addInfo}>Добавити властивості\r\n                            </Button>\r\n                        </FormControl>\r\n                        {info.map(i =>\r\n                            <FormControl key={i.number} style={{ display: \"flex\", marginBottom: \"5px\" }}>\r\n                                <div style={{ marginRight: \"5px\" }}>\r\n                                    <Input placeholder='Назва'\r\n                                        onChange={(e) => changeInfo('title', e.target.value, i.number)} />\r\n\r\n                                </div>\r\n                                <div style={{ marginRight: \"5px\" }}>\r\n                                    <Input placeholder='Значення'\r\n                                        onChange={(e) => changeInfo('description', e.target.value, i.number)} />\r\n                                </div>\r\n                                <div>\r\n                                    <Button colorScheme=\"red\"\r\n                                        onClick={() => removeInfo(i.number)}>-</Button>\r\n                                </div>\r\n                            </FormControl>\r\n                        )}\r\n\r\n                    </ModalBody>\r\n\r\n                    <ModalFooter>\r\n                        <Button colorScheme='blue' mr={3} onClick={submit}>\r\n                            Save\r\n                        </Button>\r\n                        <Button onClick={onClose}>Cancel</Button>\r\n                    </ModalFooter>\r\n                </ModalContent>\r\n            </Modal>\r\n        </>\r\n    )\r\n})\r\nexport default NewProduct","import React, { useState, useEffect, useContext } from \"react\";\r\nimport {\r\n    Select,\r\n    Button,\r\n    Modal,\r\n    ModalOverlay,\r\n    ModalContent,\r\n    ModalCloseButton,\r\n    ModalHeader,\r\n    FormControl,\r\n    Input,\r\n    FormLabel,\r\n    ModalBody,\r\n    ModalFooter\r\n} from \"@chakra-ui/react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport axios from '../../utils/axios';\r\nimport { Context } from \"../..\";\r\n\r\nconst EditProduct = observer(({ isOpen, onClose, cb }) => {\r\n    const { good } = useContext(Context);\r\n    const [ name, setName ] = useState();\r\n    const [ price, setPrice ] = useState();\r\n    const [ typeID, setTypeID ] = useState();\r\n    const [ state, setState ] = useState();\r\n    const [info, setInfo] = useState([])\r\n\r\n    const [types, setTypes] = useState([])\r\n    const is = [\"В наявності\", \"Закінчується\", \"Закінчився\", \"Очікується\"]\r\n\r\n    const submit = async () => {\r\n        const response = await axios.put(`good/${good.id}`, {\r\n            name: name ?? good.name, \r\n            price: price ?? good.price,\r\n            state: state ?? good.status,\r\n            typeID: typeID ?? good.typeID,\r\n            info: JSON.stringify(info ?? good.params)\r\n        })\r\n        if (response.status === 200) {\r\n            cb();\r\n            onClose()\r\n        };\r\n    }\r\n\r\n    const getTypes = async () => {\r\n        const response = await axios.get('type/getAll');\r\n        if (response.status === 200) setTypes(response.data);\r\n    }\r\n \r\n    const addInfo = () => {\r\n        setInfo([...info, { title: '', description: '', number: Date.now() }])\r\n    }\r\n    const removeInfo = (number) => {\r\n        setInfo(info.filter(i => i.number !== number))\r\n    }\r\n    const changeInfo = (key, value, number) => {\r\n        setInfo(info.map(i => i.number === number ? { ...i, [key]: value } : i))\r\n    }\r\n\r\n    const close = () => {\r\n        setName();\r\n        setPrice();\r\n        onClose();\r\n    }\r\n\r\n    useEffect(() => {\r\n        getTypes();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                isOpen={isOpen}\r\n                onClose={close}\r\n            >\r\n                <ModalOverlay />\r\n                <ModalContent>\r\n                    <ModalHeader>Редагувати продукт</ModalHeader>\r\n                    <ModalCloseButton />\r\n                    <ModalBody pb={6}>\r\n                        <FormControl>\r\n                            <FormLabel>Назва</FormLabel>\r\n                            <Input placeholder='Назва' defaultValue={good.name} value={name} onChange={(e) => setName(e.target.value)}/>\r\n                        </FormControl>\r\n                        <FormControl>\r\n                            <FormLabel>Ціна</FormLabel>\r\n                            <Input placeholder='Ціна' defaultValue={good.price} value={price} onChange={(e) => setPrice(e.target.value)} />\r\n                        </FormControl>\r\n                        <FormControl>\r\n                            <FormLabel>Тип</FormLabel>\r\n                            <Select placeholder=\"Виберіть тип\">\r\n                                {types.map(i =>\r\n                                    <option key={i.id} selected={good.typeID === i.id} onClick={() => setTypeID(i.id)}>{i.name}</option>\r\n                                )}\r\n                            </Select>\r\n                            <FormLabel>Наявність на складі</FormLabel>\r\n                            <Select placeholder=\"Виберіть стан\" defaultValue={good.state} onChange={(e) => setState(e.target.value)} value={state}>\r\n                                {is.map(i =>\r\n                                    <option key={i}>{i}</option>\r\n                                )}\r\n                            </Select>\r\n                        </FormControl>\r\n\r\n                        <FormControl my=\"15px\" display=\"flex\" justifyContent=\"center\">\r\n                            <Button colorScheme=\"green\"\r\n                                onClick={addInfo}>Добавити властивості</Button>\r\n\r\n                        </FormControl>\r\n                        {info.map(i =>\r\n                            <FormControl key={i.number} style={{ display: \"flex\", marginBottom: \"5px\" }}>\r\n                                <div style={{ marginRight: \"5px\" }}>\r\n                                    <Input placeholder='Назва'\r\n                                        onChange={(e) => changeInfo('title', e.target.value, i.number)} />\r\n\r\n                                </div>\r\n                                <div style={{ marginRight: \"5px\" }}>\r\n                                    <Input placeholder='Значення'\r\n                                        onChange={(e) => changeInfo('description', e.target.value, i.number)} />\r\n                                </div>\r\n                                <div>\r\n                                    <Button colorScheme=\"red\"\r\n                                        onClick={() => removeInfo(i.number)}>-</Button>\r\n                                </div>\r\n                            </FormControl>\r\n                        )}\r\n\r\n                    </ModalBody>\r\n\r\n                    <ModalFooter>\r\n                        <Button colorScheme='blue' mr={3} onClick={submit}>\r\n                            Save\r\n                        </Button>\r\n                        <Button onClick={onClose}>Cancel</Button>\r\n                    </ModalFooter>\r\n                </ModalContent>\r\n            </Modal>\r\n        </>\r\n    )\r\n})\r\n\r\nexport default EditProduct","import React, { useState, } from \"react\";\r\nimport {\r\n    Button,\r\n    Modal,\r\n    ModalOverlay,\r\n    ModalContent,\r\n    ModalCloseButton,\r\n    ModalHeader,\r\n    FormControl,\r\n    Input,\r\n    FormLabel,\r\n    ModalBody,\r\n    ModalFooter\r\n} from \"@chakra-ui/react\";\r\nimport axios from '../../utils/axios';\r\n\r\nfunction AddProductType({ isOpen, onClose }) {\r\n    const [type, setType] = useState();\r\n\r\n    async function addType() {\r\n        const response = await axios.post('good/addType', { typeName: type });\r\n        onClose()\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                isOpen={isOpen}\r\n                onClose={onClose}\r\n            >\r\n                <ModalOverlay />\r\n                <ModalContent>\r\n                    <ModalHeader>Добавити тип продукту</ModalHeader>\r\n                    <ModalCloseButton />\r\n                    <ModalBody pb={6}>\r\n                        <FormControl>\r\n                            <FormLabel>Назва</FormLabel>\r\n                            <Input placeholder='Назва' value={type} onChange={(e) => setType(e.target.value)} />\r\n                        </FormControl>\r\n                    </ModalBody>\r\n\r\n                    <ModalFooter>\r\n                        <Button onClick={addType} colorScheme='blue' mr={3}>\r\n                            Додати\r\n                        </Button>\r\n                        <Button onClick={onClose}>Скасувати</Button>\r\n                    </ModalFooter>\r\n                </ModalContent>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\nexport default AddProductType","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalCloseButton,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Checkbox,\r\n  SimpleGrid\r\n} from \"@chakra-ui/react\";\r\nimport axios from \"../../utils/axios\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\nconst AddProductType = observer(({ isOpen, onClose }) => {\r\n  const [types, setTypes] = useState([]);\r\n  const [deleteList, setDeleteList] = useState([]);\r\n\r\n  async function getTypes() {\r\n    const response = await axios.get(\"type/getAll\");\r\n    if (response.status === 200) {\r\n      setTypes(response.data);\r\n    }\r\n  }\r\n\r\n  function addTypeToDelete(id) {\r\n    setDeleteList([...deleteList, id])\r\n  }\r\n\r\n  function removeTypeFromDeleteList(id) {\r\n    setDeleteList(deleteList.filter((typeId) => typeId !== id));\r\n  }\r\n\r\n  async function deleteTypes() {\r\n    const response = await axios.post(`type/delete`, { deleteList });\r\n    if (response.status) {\r\n      getTypes();\r\n      onClose();\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getTypes();\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <Modal isOpen={isOpen} onClose={onClose}>\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalHeader>Видалити типи продукту</ModalHeader>\r\n          <ModalCloseButton />\r\n          <ModalBody pb={6}>\r\n            <SimpleGrid templateColumns=\"1fr 1fr 1fr\">\r\n              {types &&\r\n                types.map((type) =>\r\n                  <Checkbox colorScheme=\"red\" onChange={(e) => e.target.checked ? addTypeToDelete(type.id) : removeTypeFromDeleteList(type.id)}>\r\n                    {type.name}\r\n                  </Checkbox>\r\n                )}\r\n            </SimpleGrid>\r\n          </ModalBody>\r\n\r\n          <ModalFooter>\r\n            <Button onClick={deleteTypes} colorScheme=\"red\" mr={3}>\r\n              Видалити\r\n            </Button>\r\n            <Button onClick={onClose}>Скасувати</Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default AddProductType;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n    Button,\r\n    Modal,\r\n    ModalOverlay,\r\n    ModalContent,\r\n    ModalCloseButton,\r\n    ModalHeader,\r\n    FormControl,\r\n    Input,\r\n    FormLabel,\r\n    ModalBody,\r\n    Textarea,\r\n    ModalFooter\r\n} from \"@chakra-ui/react\";\r\nimport axios from \"../../utils/axios\";\r\n\r\n\r\nfunction AddArticle({ isOpen, onClose, cb }) {\r\n    const [header, setHeader] = useState();\r\n    const [text, setText] = useState();\r\n\r\n    function addArticle() {\r\n        axios.post('user/createArticle', {header, text})\r\n             .then(() => {\r\n                cb();\r\n                onClose();\r\n             })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                isOpen={isOpen}\r\n                onClose={onClose}\r\n            >\r\n                <ModalOverlay />\r\n                <ModalContent>\r\n                    <ModalHeader>Додати статтю</ModalHeader>\r\n                    <ModalCloseButton />\r\n                    <ModalBody pb={6}>\r\n                        <FormControl>\r\n                            <FormLabel>Назва</FormLabel>\r\n                            <Input placeholder='Назва' value={header} onChange={(e) => setHeader(e.target.value)} />\r\n                            <FormLabel>Текст статті</FormLabel>\r\n                            <Textarea h=\"400px\" placeholder='Текст статті' value={text} onChange={(e) => setText(e.target.value)} />\r\n                        </FormControl>\r\n                    </ModalBody>\r\n\r\n                    <ModalFooter>\r\n                        <Button onClick={addArticle} colorScheme='blue' mr={3}>\r\n                            Додати\r\n                        </Button>\r\n                        <Button onClick={onClose}>Скасувати</Button>\r\n                    </ModalFooter>\r\n                </ModalContent>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\nexport default AddArticle","import React, { useState } from \"react\";\r\nimport {\r\n    Button,\r\n    Modal,\r\n    ModalOverlay,\r\n    ModalContent,\r\n    ModalCloseButton,\r\n    ModalHeader,\r\n    FormControl,\r\n    Input,\r\n    FormLabel,\r\n    ModalBody,\r\n    ModalFooter,\r\n    Textarea\r\n} from \"@chakra-ui/react\";\r\nimport axios from '../../utils/axios';\r\n\r\n\r\nfunction EditArticle({ isOpen, onClose, cb, articletext, articlename, articleid }) {\r\n    const [text, setText] = useState()\r\n    const [name, setName] = useState()\r\n    const editArticle = async () => {\r\n\r\n        const response = await axios.put(`user/editarticle/${articleid}`, { text, header: name });\r\n        if (response.status === 200) onClose();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                isOpen={isOpen}\r\n                onClose={onClose}\r\n            >\r\n                <ModalOverlay />\r\n                <ModalContent>\r\n                    <ModalHeader>Редагувати статтю</ModalHeader>\r\n                    <ModalCloseButton />\r\n                    <ModalBody pb={6}>\r\n                        <FormControl>\r\n                            <FormLabel>Назва</FormLabel>\r\n                            <Input placeholder='Назва' defaultValue={articlename} value={name} onChange={(e) => setName(e.target.value)} />\r\n                        </FormControl>\r\n                        <FormControl>\r\n                            <Textarea h=\"400px\" placeholder='Текст статті' defaultValue={articletext} value={text} onChange={(e) => setText(e.target.value)} />\r\n                        </FormControl>\r\n\r\n                    </ModalBody>\r\n\r\n                    <ModalFooter>\r\n                        <Button colorScheme='blue' mr={3} onClick={editArticle}>\r\n                            Додати\r\n                        </Button>\r\n                        <Button onClick={() => { onClose() }}>Скасувати</Button>\r\n                    </ModalFooter>\r\n                </ModalContent>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\nexport default EditArticle","import React, { useState, useEffect, useContext } from 'react'\r\nimport { Option, Select, Container, Center, TableContainer, Table, Th, Image, Td, Tr, Thead, Tbody, Tfoot, TableCaption, Heading, Menu, MenuButton, MenuItem, MenuList, useDisclosure, Button, Flex, Text, Spacer } from '@chakra-ui/react'\r\nimport { ChevronDownIcon } from \"@chakra-ui/icons\"\r\nimport NewProduct from '../components/admin/NewProduct'\r\nimport EditProduct from '../components/admin/EditProduct'\r\nimport AddProductType from '../components/admin/AddProductType'\r\nimport DeleteProductType from '../components/admin/DeleteProductType'\r\nimport AddArticle from '../components/admin/AddArticle'\r\nimport EditArticle from '../components/admin/EditArticle'\r\nimport { EditIcon, DeleteIcon } from '@chakra-ui/icons';\r\nimport axios from '../utils/axios'\r\nimport { observer } from 'mobx-react-lite'\r\nimport { Context } from \"../index\";\r\n\r\nconst Admin = observer(() => {\r\n    const MAP = {\r\n        'Продукти': 'good/getall',\r\n        'Користувачі': 'user/allUsers',\r\n        'Статті': 'user/articles',\r\n        'Замовлення': 'user/getAllOrders',\r\n    }\r\n\r\n    const { good } = useContext(Context);\r\n\r\n    const [page, setPage] = useState('Продукти')\r\n    const [data, setData] = useState([])\r\n    const [articlename, setArticlename] = useState(\"\")\r\n    const [articletext, setArticletext] = useState(\"\")\r\n    const [articleid, setArticleid] = useState(\"\")\r\n\r\n    const { isOpen: isNewProductOpen, onOpen: onNewProductOpen, onClose: onNewProductClose } = useDisclosure()\r\n    const { isOpen: isEditProductOpen, onOpen: onEditProductOpen, onClose: onEditProductClose } = useDisclosure()\r\n    const { isOpen: isAddProductTypeOpen, onOpen: onAddProductTypeOpen, onClose: onAddProductTypeClose } = useDisclosure()\r\n    const { isOpen: isDeleteProductTypeOpen, onOpen: onDeleteProductTypeOpen, onClose: onDeleteProductTypeClose } = useDisclosure()\r\n    const { isOpen: isAddArticleOpen, onOpen: onAddArticleOpen, onClose: onAddArticleClose } = useDisclosure()\r\n    const { isOpen: isEditArticleOpen, onOpen: onEditArticleOpen, onClose: onEditArticleClose } = useDisclosure()\r\n\r\n    async function getData(route) {\r\n        const response = await axios.get(route, {\r\n            headers: {\r\n                'Authorization': localStorage.getItem('Token')\r\n            }\r\n        });\r\n        if (response.status === 200) {\r\n            setData(response.data);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setData([]);\r\n        getData(MAP[page]);\r\n    }, [page]);\r\n\r\n    async function deleteProduct(id) {\r\n        const response = await axios.delete(`good/${id}`);\r\n\r\n        if (response.status === 200) {\r\n            setData(data.filter(item => item.id !== id))\r\n        }\r\n    }\r\n\r\n    const onEditArticle = (article) => {\r\n        setArticlename(article.header);\r\n        setArticletext(article.text);\r\n        setArticleid(article.id)\r\n        onEditArticleOpen();\r\n\r\n    }\r\n\r\n    function onEditProduct({ id, name, typeID, image, price, state }) {\r\n        good.setId(id);\r\n        good.setName(name);\r\n        good.setTypeID(typeID);\r\n        good.setImage(image);\r\n        good.setPrice(price);\r\n        good.setState(state);\r\n        onEditProductOpen();\r\n    }\r\n\r\n\r\n\r\n    async function editArticle(id) {\r\n        const response = await axios.delete(`good/${id}`);\r\n\r\n        if (response.status === 200) {\r\n            setData(data.filter(item => item.id !== id))\r\n        }\r\n    }\r\n\r\n    async function deleteArticle(id) {\r\n        const response = await axios.delete(`user/deleteArticle/${id}`);\r\n\r\n        if (response.status === 200) {\r\n            setData(data.filter(item => item.id !== id));\r\n        }\r\n    }\r\n\r\n    async function setRole(role, id) {\r\n        const response = await axios.post(`user/setRole/${id}`, { role });\r\n        if (response) {\r\n            getData(MAP['Користувачі']);\r\n        }\r\n    }\r\n\r\n    async function deleteUser(id) {\r\n        const response = await axios.delete(`user/deleteUser/${id}`);\r\n        if (response) {\r\n            setData(data.filter(user => user.id !== id));\r\n        }\r\n    }\r\n\r\n    async function setOrderState(state, id) {\r\n        const response = await axios.put(`user/setOrderState/${id}`, { state });\r\n        if (response) {\r\n            getData(MAP['Замовлення']);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container display=\"flex\" flexDirection=\"column\" alignItems=\"center\" p=\"30px\" maxW=\"1000px\">\r\n            <Menu >\r\n                <MenuButton width='170px' mb=\"30px\" as={Button} rightIcon={<ChevronDownIcon />}>\r\n                    {page}\r\n                </MenuButton>\r\n                <Center>\r\n                    <MenuList>\r\n                        <MenuItem onClick={() => setPage('Продукти')}>Продукти</MenuItem>\r\n                        <MenuItem onClick={() => setPage('Користувачі')}>Користувачі</MenuItem>\r\n                        <MenuItem onClick={() => setPage('Замовлення')}>Замовлення</MenuItem>\r\n                        <MenuItem onClick={() => setPage('Статті')}>Статті</MenuItem>\r\n                    </MenuList>\r\n                </Center>\r\n            </Menu>\r\n\r\n            {page === 'Продукти' &&\r\n                <>\r\n                    <Button onClick={onNewProductOpen}>Добавити новий продукт</Button>\r\n                    <Button onClick={onAddProductTypeOpen} my=\"7px\" >Добавити новий тип продукту</Button>\r\n                    <Button onClick={onDeleteProductTypeOpen} marginBottom=\"20px\" >Видалити типи продукту</Button>\r\n\r\n                    <TableContainer>\r\n                        <Table bg='gray.200' variant='striped' rounded={10}>\r\n                            <TableCaption>Список продуктів</TableCaption>\r\n                            <Thead>\r\n                                <Tr>\r\n                                    <Th>Зображення</Th>\r\n                                    <Th>Назва</Th>\r\n                                    <Th>Ціна</Th>\r\n                                    <Th>Стан</Th>\r\n                                    <Th>Змінити</Th>\r\n                                    <Th>Видалити</Th>\r\n                                </Tr>\r\n                            </Thead>\r\n                            <Tbody>\r\n                                {data.map(product => (\r\n                                    <Tr>\r\n                                        <Td><Image h=\"50px\" src={product.image} rounded={5} /></Td>\r\n                                        <Td>{product.name}</Td>\r\n                                        <Td textAlign=\"center\">{product.price}₴</Td>\r\n                                        <Td textAlign=\"center\">{product.state}</Td>\r\n                                        <Td textAlign=\"center\"><Button colorScheme=\"teal\" onClick={() => onEditProduct(product)}><EditIcon /></Button></Td>\r\n                                        <Td textAlign=\"center\"><Button colorScheme=\"red\" onClick={() => deleteProduct(product.id)}><DeleteIcon /></Button></Td>\r\n                                    </Tr>\r\n                                ))}\r\n                            </Tbody>\r\n                            <Tfoot>\r\n                                <Tr>\r\n                                    <Th>Зображення</Th>\r\n                                    <Th>Назва</Th>\r\n                                    <Th>Ціна</Th>\r\n                                    <Th>Стан</Th>\r\n                                    <Th>Змінити</Th>\r\n                                    <Th>Видалити</Th>\r\n                                </Tr>\r\n                            </Tfoot>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </>\r\n            }\r\n\r\n            {\r\n                page === 'Користувачі' &&\r\n                <>\r\n                    <TableContainer>\r\n                        <Table bg='gray.200' variant='striped' rounded={10}>\r\n                            <TableCaption>Список усіх користувачів</TableCaption>\r\n                            <Thead>\r\n                                <Tr>\r\n                                    <Th>Ідентифікатор</Th>\r\n                                    <Th>Ім'я</Th>\r\n                                    <Th>Email</Th>\r\n                                    <Th>Роль</Th>\r\n                                    <Th>Видалити</Th>\r\n                                </Tr>\r\n                            </Thead>\r\n                            <Tbody>\r\n                                {data.map(user => (\r\n                                    <Tr>\r\n                                        <Td>{user.id}</Td>\r\n                                        <Td>{user.name}</Td>\r\n                                        <Td>{user.email}</Td>\r\n                                        <Td>\r\n                                            <Select value={user.role} onChange={(e) => setRole(e.target.value, user.id)}>\r\n                                                <option>customer</option>\r\n                                                <option>admin</option>\r\n                                            </Select>\r\n                                        </Td>\r\n                                        <Td><Button colorScheme=\"red\" onClick={() => deleteUser(user.id)}><DeleteIcon /></Button></Td>\r\n                                    </Tr>\r\n                                ))}\r\n                            </Tbody>\r\n                            <Tfoot>\r\n                                <Tr>\r\n                                    <Th>Ідентифікатор</Th>\r\n                                    <Th>Ім'я</Th>\r\n                                    <Th>Email</Th>\r\n                                    <Th>Роль</Th>\r\n                                    <Th>Видалити</Th>\r\n                                </Tr>\r\n                            </Tfoot>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </>\r\n            }\r\n\r\n            {\r\n                page === 'Замовлення' &&\r\n                <>\r\n                    <TableContainer>\r\n                        <Table bg='gray.200' variant='striped' rounded={10}>\r\n                            <TableCaption>Список усіх замовлень</TableCaption>\r\n                            <Thead>\r\n                                <Tr>\r\n                                    <Th>Ідентифікатор</Th>\r\n                                    <Th>Ціна</Th>\r\n                                    <Th>Стан</Th>\r\n                                    <Th>Дата та час</Th>\r\n                                </Tr>\r\n                            </Thead>\r\n                            <Tbody>\r\n                                {data.map(order => (\r\n                                    <Tr>\r\n                                        <Td>{order.id}</Td>\r\n                                        <Td>{order.price}₴</Td>\r\n                                        <Td>\r\n                                            <Select value={order.state} onChange={(e) => setOrderState(e.target.value, order.id)}>\r\n                                                <option>В обробці</option>\r\n                                                <option>Очікує отримання</option>\r\n                                                <option>Скасовано</option>\r\n                                            </Select>\r\n                                        </Td>\r\n                                        <Td>{order.time}</Td>\r\n                                    </Tr>\r\n                                ))}\r\n                            </Tbody>\r\n                            <Tfoot>\r\n                                <Tr>\r\n                                    <Th>Ідентифікатор</Th>\r\n                                    <Th>Ціна</Th>\r\n                                    <Th>Стан</Th>\r\n                                    <Th>Дата та час</Th>\r\n                                </Tr>\r\n                            </Tfoot>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </>\r\n            }\r\n\r\n            {\r\n                page === 'Статті' &&\r\n                <>\r\n                    <Button marginBottom=\"20px\" onClick={onAddArticleOpen}>Добавити статтю</Button>\r\n\r\n                    <TableContainer>\r\n                        <Table bg='gray.200' variant='striped' rounded={10}>\r\n                            <TableCaption>Список усіх статей</TableCaption>\r\n                            <Thead>\r\n                                <Tr>\r\n                                    <Th>Ідентифікатор</Th>\r\n                                    <Th>Заголовок</Th>\r\n                                    <Th>Уривок тексту</Th>\r\n                                    <Th>Змінити</Th>\r\n                                    <Th>Видалити</Th>\r\n                                </Tr>\r\n                            </Thead>\r\n                            <Tbody>\r\n                                {data.map(article => (\r\n                                    <Tr>\r\n                                        <Td>{article.id}</Td>\r\n                                        <Td>{article.header}</Td>\r\n                                        <Td textOverflow=\"ellipsis\" overflow=\"hidden\" style={{ maxWidth: \"201px\" }}>{article.text}</Td>\r\n                                        <Td><Button colorScheme=\"teal\" onClick={() => onEditArticle(article)}><EditIcon /></Button></Td>\r\n                                        <Td><Button colorScheme=\"red\" onClick={() => deleteArticle(article.id)}><DeleteIcon /></Button></Td>\r\n                                    </Tr>\r\n                                ))}\r\n                            </Tbody>\r\n                            <Tfoot>\r\n                                <Tr>\r\n                                    <Th>Ідентифікатор</Th>\r\n                                    <Th>Заголовок</Th>\r\n                                    <Th>Уривок тексту</Th>\r\n                                    <Th>Змінити</Th>\r\n                                    <Th>Видалити</Th>\r\n                                </Tr>\r\n                            </Tfoot>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </>\r\n            }\r\n\r\n            <NewProduct\r\n                isOpen={isNewProductOpen}\r\n                onClose={onNewProductClose}\r\n                cb={() => getData(MAP['Продукти'])}\r\n            />\r\n            <EditProduct\r\n                isOpen={isEditProductOpen}\r\n                onClose={onEditProductClose}\r\n                cb={() => getData(MAP['Продукти'])} />\r\n            <AddProductType\r\n                isOpen={isAddProductTypeOpen}\r\n                onClose={onAddProductTypeClose} />\r\n            <DeleteProductType\r\n                isOpen={isDeleteProductTypeOpen}\r\n                onClose={onDeleteProductTypeClose} />\r\n            <AddArticle\r\n                isOpen={isAddArticleOpen}\r\n                onClose={onAddArticleClose}\r\n                cb={() => getData(MAP['Статті'])} />\r\n            <EditArticle\r\n                isOpen={isEditArticleOpen}\r\n                onClose={onEditArticleClose}\r\n                cb={() => getData(MAP['Статті'])}\r\n                articletext={articletext}\r\n                articlename={articlename}\r\n                articleid={articleid}\r\n            />\r\n\r\n        </Container >\r\n\r\n\r\n    )\r\n})\r\n\r\nexport default Admin;","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"https://mydiplomlevas.herokuapp.com/api/\",\r\n  headers: {\r\n    'Authorization': localStorage.getItem(\"Token\") ?? \"\"\r\n  }\r\n});\r\n\r\ninstance.interceptors.response.use(\r\n  res => res,\r\n  error => {\r\n    if (error.response.status === 401) {\r\n      localStorage.removeItem(\"Token\");\r\n    };\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default instance;"],"names":["ImageCropper","props","imageToCrop","onImageCropped","useState","unit","width","aspect","cropConfig","setCropConfig","imageRef","setImageRef","crop","height","console","log","getCroppedImage","target","croppedImage","sourceImage","canvas","document","createElement","scaleX","naturalWidth","scaleY","naturalHeight","getContext","drawImage","x","y","Promise","resolve","reject","toBlob","blob","file","File","type","lastModified","Date","getTime","Error","ruleOfThirds","onChange","onComplete","cropImage","onLoad","src","defaultProps","NewProduct","observer","isOpen","onClose","cb","info","setInfo","name","setName","price","setPrice","priceWithDiscount","setPriceWithDiscount","typeID","setTypeID","types","setTypes","image","setImage","imageUrl","setImageUrl","isDiscount","setIsDiscount","state","setState","undefined","setCroppedImage","changeInfo","key","value","number","map","i","close","getTypes","axios","response","status","data","useEffect","pb","accept","id","event","files","length","reader","FileReader","addEventListener","result","readAsDataURL","placeholder","e","Number","mx","checked","isDisabled","marginBottom","my","display","justifyContent","colorScheme","onClick","title","description","now","style","marginRight","filter","mr","formData","FormData","append","JSON","stringify","headers","then","EditProduct","good","useContext","Context","submit","params","defaultValue","selected","setType","typeName","AddProductType","deleteList","setDeleteList","templateColumns","typeId","removeTypeFromDeleteList","header","setHeader","text","setText","h","articletext","articlename","articleid","editArticle","Admin","MAP","page","setPage","setData","setArticlename","setArticletext","setArticleid","useDisclosure","isNewProductOpen","onNewProductOpen","onOpen","onNewProductClose","isEditProductOpen","onEditProductOpen","onEditProductClose","isAddProductTypeOpen","onAddProductTypeOpen","onAddProductTypeClose","isDeleteProductTypeOpen","onDeleteProductTypeOpen","onDeleteProductTypeClose","isAddArticleOpen","onAddArticleOpen","onAddArticleClose","isEditArticleOpen","onEditArticleOpen","onEditArticleClose","getData","route","localStorage","getItem","item","role","user","flexDirection","alignItems","p","maxW","mb","as","Button","rightIcon","bg","variant","rounded","Tr","Th","product","Td","textAlign","setId","onEditProduct","deleteProduct","email","setRole","deleteUser","order","setOrderState","time","article","textOverflow","overflow","maxWidth","onEditArticle","deleteArticle","DeleteProductType","instance","baseURL","interceptors","use","res","error","removeItem"],"sourceRoot":""}