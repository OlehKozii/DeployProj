{"version":3,"file":"static/js/712.f866f1f1.chunk.js","mappings":"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","sources":["components/good/comment.js","pages/goodsPage.js","utils/axios.js"],"sourcesContent":["import { Box, Text, Flex } from '@chakra-ui/react';\r\n\r\nconst Comment = ({ name, text, time, grade }) => {\r\n    const date = new Date(time);\r\n\r\n    function getGradeColor(value) {\r\n        switch (true) {\r\n            case (value >= 75):\r\n                return 'green';\r\n            case (value >= 50):\r\n                return 'teal';\r\n            case (value >= 25):\r\n                return 'yellow';\r\n            case (value >= 0):\r\n                return 'red';\r\n            default:\r\n                return 'teal';\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Box w=\"100%\">\r\n            {console.log(time)}\r\n            <Flex justifyContent='space-between'>\r\n                <Text color=\"gray.600\" fontSize='18px' as='b'>{name}</Text>\r\n                <Text color=\"gray.400\" fontSize='14px'>{`${date.getHours()}:${date.getMinutes()}  ${date.getDate()}/${date.getMonth()}/${date.getFullYear()}`}</Text>\r\n            </Flex>\r\n            <Flex justifyContent='space-between'>\r\n                <Text color=\"gray.500\" fontSize='16px' maxWidth=\"80%\">\r\n                    {text}\r\n                </Text>\r\n                <Text color={getGradeColor(grade)} fontSize='35px' mx=\"10px\">\r\n                    {grade}%\r\n                </Text>\r\n            </Flex>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Comment;","import React, { useContext, useState, useEffect } from \"react\";\r\nimport { Context } from \"../index\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport axios from '../utils/axios';\r\nimport Comment from \"../components/good/comment\";\r\nimport {\r\n    Textarea,\r\n    TableContainer,\r\n    Table,\r\n    Tr,\r\n    Td,\r\n    Tbody,\r\n    Container,\r\n    Box,\r\n    Image,\r\n    SimpleGrid,\r\n    Button,\r\n    Flex,\r\n    Text,\r\n    VStack,\r\n    NumberInput,\r\n    NumberInputField,\r\n    NumberInputStepper,\r\n    NumberIncrementStepper,\r\n    NumberDecrementStepper,\r\n    SliderMark,\r\n    Slider,\r\n    SliderTrack,\r\n    SliderFilledTrack,\r\n    SliderThumb,\r\n    Tooltip\r\n} from '@chakra-ui/react'\r\n\r\nconst Good = observer(() => {\r\n    const { good, user } = useContext(Context);\r\n    console.log(\"User: \", user);\r\n    const [data, setData] = useState({});\r\n    const [commentText, setCommentText] = useState('');\r\n    const [sliderValue, setSliderValue] = useState(50)\r\n    const [showTooltip, setShowTooltip] = useState(false)\r\n\r\n    function getSliderColor(value) {\r\n        switch (true) {\r\n            case (value >= 75):\r\n                return 'green';\r\n            case (value >= 50):\r\n                return 'teal';\r\n            case (value >= 25):\r\n                return 'yellow';\r\n            case (value >= 0):\r\n                return 'red';\r\n            default:\r\n                return 'teal';\r\n        }\r\n    }\r\n\r\n    const COLOR_MAP = {\r\n        \"В наявності\": \"green.300\",\r\n        \"Закінчується\": \"yellow.400\",\r\n        \"Закінчився\": \"red.500\",\r\n        \"Очікується\": \"teal.400\"\r\n    }\r\n\r\n    async function getData() {\r\n        const response = await axios.get(`good/getone/${good.id}`);\r\n        if (response.status === 200) {\r\n            setData(response.data);\r\n            console.log(response.data);\r\n        }\r\n    }\r\n\r\n    async function addComment() {\r\n        const newComment = { name: user.user.name, text: commentText, time: new Date(), grade: sliderValue }\r\n        setData({ ...data, comments: [newComment, ...data.comments] });\r\n        const response = await axios.post(`good/addComment/${good.id}`, newComment);\r\n        setCommentText('');\r\n    }\r\n\r\n    useEffect(() => {\r\n        getData();\r\n    }, []);\r\n\r\n    return (\r\n        <Container p={30} maxWidth={1080}>\r\n            <Box bg=\"whiteAlpha.500\" rounded={10} p='10px 30px 40px 30px'>\r\n                <Text marginBottom=\"10px\" fontSize='4xl'>{data?.name}</Text>\r\n                <SimpleGrid minChildWidth='350px' spacing=\"25px\">\r\n                    <Box>\r\n                        <Image src={data?.image} rounded={5} w=\"100%\" h=\"auto\" objectFit=\"cover\" />\r\n                    </Box>\r\n                    <Box display='flex' flexDirection=\"column\" justifyContent=\"flex-end\">\r\n                        <Box>\r\n                        </Box>\r\n                        <Box borderWidth='1px' borderColor=\"gray.300\" rounded={10} p=\"15px\">\r\n                            <Flex marginBottom=\"10px\" justifyContent=\"space-between\" alignItems=\"end\">\r\n                                <Text fontSize=\"45px\">{data?.price}₴</Text>\r\n                                <Box>\r\n                                    <Text fontSize=\"16px\" fontWeight=\"500\" marginBottom=\"10px\" color={COLOR_MAP[data.state]}>{data.state}</Text>\r\n                                    <Flex fontSize=\"18px\">\r\n                                        Кількість:\r\n                                        <NumberInput marginLeft=\"10px\" size='xs' maxW={14} defaultValue={1} min={1}>\r\n                                            <NumberInputField />\r\n                                            <NumberInputStepper>\r\n                                                <NumberIncrementStepper />\r\n                                                <NumberDecrementStepper />\r\n                                            </NumberInputStepper>\r\n                                        </NumberInput>\r\n                                    </Flex>\r\n                                </Box>\r\n                            </Flex>\r\n                            <Button width=\"100%\" colorScheme=\"teal\">Купити</Button>\r\n                        </Box>\r\n                    </Box>\r\n                </SimpleGrid>\r\n            </Box>\r\n            <Box bg=\"whiteAlpha.500\" rounded={10} p={15} my='20px' display=\"flex\" flexDir='column'>\r\n                <Text m='0 10px 10px 10px' fontSize=\"24px\" alignSelf=\"center\">Характеристики</Text>\r\n                <TableContainer>\r\n                    <Table bg='gray.200' variant='striped' rounded={10}>\r\n                        <Tbody>\r\n                            {data?.params?.map(param => (\r\n                                <Tr>\r\n                                    <Td ><b>{param.title}</b></Td>\r\n                                    <Td >{param.description}</Td>\r\n                                </Tr>\r\n                            ))}\r\n                        </Tbody>\r\n                    </Table>\r\n                </TableContainer>\r\n            </Box>\r\n\r\n            <Box bg=\"whiteAlpha.500\" rounded={10} p={15} my='20px' display=\"flex\" flexDir='column'>\r\n                <Text m='0 10px 10px 10px' fontSize=\"24px\" alignSelf=\"center\">Залиште відгук</Text>\r\n                {user.isAuth ?\r\n                    <>\r\n                        <Textarea\r\n                            rows={5}\r\n                            resize='none'\r\n                            placeholder=\"Напишіть щось...\"\r\n                            value={commentText}\r\n                            onChange={(e) => setCommentText(e.target.value)}\r\n\r\n                        />\r\n                        <Text marginTop=\"20px\" fontSize=\"18px\" alignSelf=\"center\" color=\"gray.500\">Оцініть цей продукт</Text>\r\n                        <Slider\r\n                            isDisabled={!commentText}\r\n                            my=\"20px\"\r\n                            defaultValue={50}\r\n                            min={0}\r\n                            max={100}\r\n                            onChange={(v) => setSliderValue(v)}\r\n                            onMouseEnter={() => setShowTooltip(true)}\r\n                            onMouseLeave={() => setShowTooltip(false)}\r\n                            colorScheme={getSliderColor(sliderValue)}\r\n                        >\r\n                            <SliderMark value={25} mt='1' ml='-2.5' fontSize='sm'>\r\n                                25%\r\n                            </SliderMark>\r\n                            <SliderMark value={50} mt='1' ml='-2.5' fontSize='sm'>\r\n                                50%\r\n                            </SliderMark>\r\n                            <SliderMark value={75} mt='1' ml='-2.5' fontSize='sm'>\r\n                                75%\r\n                            </SliderMark>\r\n                            <SliderTrack colorScheme='red'>\r\n                                <SliderFilledTrack />\r\n                            </SliderTrack>\r\n                            <Tooltip\r\n                                hasArrow\r\n                                bg={getSliderColor(sliderValue)}\r\n                                color='white'\r\n                                placement='top'\r\n                                isOpen={showTooltip}\r\n                                label={`${sliderValue}%`}\r\n                            >\r\n                                <SliderThumb colorScheme='red' />\r\n                            </Tooltip>\r\n                        </Slider>\r\n                        <Button onClick={addComment} colorScheme='teal' my='10px' isDisabled={!commentText}>\r\n                            Опублікувати\r\n                        </Button>\r\n                    </>\r\n                    :\r\n                    <Textarea\r\n                        rows={5}\r\n                        resize='none'\r\n                        isDisabled\r\n                        placeholder=\"Увійдіть або зареєструйтесь, щоб залишити відгук.\"\r\n\r\n                    />\r\n                }\r\n            </Box>\r\n\r\n            <Box bg=\"whiteAlpha.500\" rounded={10} p={15} my='20px' display=\"flex\" flexDir='column'>\r\n                <VStack spacing=\"35px\">\r\n                    {data?.comments?.map((props, i) => <Comment key={i} {...props} />)}\r\n                </VStack>\r\n            </Box>\r\n        </Container >\r\n    )\r\n})\r\n\r\nexport default Good;","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"http://localhost:8000/api/\",\r\n  headers: {\r\n    'Authorization': localStorage.getItem(\"Token\") ?? \"\"\r\n  }\r\n});\r\n\r\nexport default instance;"],"names":["name","text","time","grade","date","Date","w","console","log","justifyContent","color","fontSize","as","getHours","getMinutes","getDate","getMonth","getFullYear","maxWidth","value","getGradeColor","mx","Good","observer","useContext","Context","good","user","useState","data","setData","commentText","setCommentText","sliderValue","setSliderValue","showTooltip","setShowTooltip","getSliderColor","axios","id","response","status","newComment","comments","useEffect","getData","p","bg","rounded","marginBottom","minChildWidth","spacing","src","image","h","objectFit","display","flexDirection","borderWidth","borderColor","alignItems","price","fontWeight","state","marginLeft","size","maxW","defaultValue","min","width","colorScheme","my","flexDir","m","alignSelf","variant","params","map","param","Tr","Td","title","description","isAuth","rows","resize","placeholder","onChange","e","target","marginTop","isDisabled","max","v","onMouseEnter","onMouseLeave","mt","ml","hasArrow","placement","isOpen","label","onClick","props","i","instance","baseURL","headers","localStorage","getItem"],"sourceRoot":""}