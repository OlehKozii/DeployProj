{"version":3,"file":"static/js/489.5315f664.chunk.js","mappings":"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","sources":["components/cropImage.js","components/admin/NewProduct.js","components/admin/EditProduct.js","components/admin/AddProductType.js","components/admin/DeleteProductType.js","components/admin/AddArticle.js","components/admin/EditArticle.js","pages/admin.js","utils/axios.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport ReactCrop from 'react-image-crop';\r\nimport 'react-image-crop/dist/ReactCrop.css';\r\n\r\nfunction ImageCropper(props) {\r\n    const { imageToCrop, onImageCropped } = props;\r\n\r\n    const [cropConfig, setCropConfig] = useState(\r\n        {\r\n            unit: '%',\r\n            width: 30,\r\n            aspect: 1,\r\n        }\r\n    );\r\n\r\n    const [imageRef, setImageRef] = useState();\r\n\r\n    async function cropImage(crop) {\r\n        if (imageRef && crop.width && crop.height) {\r\n            console.log(imageRef);\r\n            const croppedImage = await getCroppedImage(\r\n                imageRef.target,\r\n                crop,\r\n                'croppedImage.jpeg'\r\n            );\r\n            onImageCropped(croppedImage);\r\n        }\r\n    }\r\n\r\n    function getCroppedImage(sourceImage, cropConfig) {\r\n        const canvas = document.createElement('canvas');\r\n        const scaleX = sourceImage.naturalWidth / sourceImage.width;\r\n        const scaleY = sourceImage.naturalHeight / sourceImage.height;\r\n        canvas.width = cropConfig.width;\r\n        canvas.height = cropConfig.height;\r\n        const ctx = canvas.getContext('2d');\r\n\r\n        ctx.drawImage(\r\n            sourceImage,\r\n            cropConfig.x * scaleX,\r\n            cropConfig.y * scaleY,\r\n            cropConfig.width * scaleX,\r\n            cropConfig.height * scaleY,\r\n            0,\r\n            0,\r\n            cropConfig.width,\r\n            cropConfig.height\r\n        );\r\n\r\n        return new Promise((resolve, reject) => {\r\n            canvas.toBlob(\r\n                (blob) => {\r\n                    if (!blob) {\r\n                        reject(new Error('Canvas is empty'));\r\n                        return;\r\n                    }\r\n\r\n                    const file = new File(\r\n                        [blob],\r\n                        'filename.png',\r\n                        {\r\n                            type: blob.type,\r\n                            lastModified: new Date().getTime()\r\n                        }\r\n                    )\r\n                    const croppedImage = file;\r\n\r\n                    resolve(croppedImage);\r\n                }, 'image/jpeg'\r\n            );\r\n        });\r\n    }\r\n\r\n    return (\r\n        <ReactCrop\r\n            crop={cropConfig}\r\n            ruleOfThirds\r\n            onChange={(cropConfig) => setCropConfig(cropConfig)}\r\n            onComplete={(cropConfig) => cropImage(cropConfig)}\r\n            aspect={1}\r\n        >\r\n            <img\r\n                onLoad={(imageRef) => setImageRef(imageRef)}\r\n                src={imageToCrop} />\r\n        </ReactCrop >\r\n    );\r\n}\r\n\r\nImageCropper.defaultProps = {\r\n    onImageCropped: () => { }\r\n}\r\n\r\nexport default ImageCropper;","import React, { useEffect, useState} from \"react\";\r\nimport {\r\n    Button,\r\n    Modal,\r\n    ModalOverlay,\r\n    ModalContent,\r\n    ModalCloseButton,\r\n    ModalHeader,\r\n    FormControl,\r\n    Input,\r\n    FormLabel,\r\n    ModalBody,\r\n    ModalFooter,\r\n    Select\r\n} from \"@chakra-ui/react\";\r\nimport axios from '../../utils/axios';\r\nimport { observer } from \"mobx-react-lite\";\r\nimport ImageCropper from '../cropImage';\r\n\r\nconst NewProduct = observer(({ isOpen, onClose, cb }) => {\r\n    const [info, setInfo] = useState([])\r\n    const [name, setName] = useState(\"\")\r\n    const [price, setPrice] = useState(0)\r\n    const [typeID, setTypeID] = useState(\"1\")\r\n    const [types, setTypes] = useState([])\r\n    const [image, setImage] = useState(null)\r\n    const [imageUrl, setImageUrl] = useState(null)\r\n    const [state, setState] = useState(\"\")\r\n    const is = [\"В наявності\", \"Закінчується\", \"Закінчився\", \"Очікується\"]\r\n\r\n    const [croppedImage, setCroppedImage] = useState(undefined);\r\n\r\n    const selectFile = event => {\r\n        if (event.target.files && event.target.files.length > 0) {\r\n            const reader = new FileReader();\r\n\r\n            reader.addEventListener('load', () =>\r\n                setImageUrl(reader.result)\r\n            );\r\n\r\n            reader.readAsDataURL(event.target.files[0]);\r\n            setImage(event.target.files[0]);\r\n        }\r\n    }\r\n\r\n    const addInfo = () => {\r\n        setInfo([...info, { title: '', description: '', number: Date.now() }])\r\n    }\r\n    const removeInfo = (number) => {\r\n        setInfo(info.filter(i => i.number !== number))\r\n        console.log(info)\r\n    }\r\n    const changeInfo = (key, value, number) => {\r\n        setInfo(info.map(i => i.number === number ? { ...i, [key]: value } : i))\r\n    }\r\n\r\n    const submit = () => {\r\n        const formData = new FormData()\r\n        formData.append('name', name)\r\n        formData.append('price', price)\r\n        formData.append(\"image\", croppedImage)\r\n        formData.append('typeID', typeID)\r\n        formData.append('state', state)\r\n        formData.append('info', JSON.stringify(info))\r\n        axios.post('good/create', formData, {\r\n            headers: {\r\n                'content-type': 'multipart/form-data',\r\n            }\r\n        })\r\n        .then(() => {\r\n            cb();\r\n            onClose();\r\n        })\r\n    }\r\n\r\n    const close = () => {\r\n        setInfo([])\r\n        setName(\"\")\r\n        setPrice(0)\r\n        setTypeID(\"1\")\r\n        setImage(null)\r\n        setImageUrl(null)\r\n        setState(\"\")\r\n        onClose();\r\n    }\r\n\r\n\r\n    const getTypes = async () => {\r\n        const response = await axios.get('type/getAll');\r\n        if (response.status === 200) setTypes(response.data);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getTypes();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                isOpen={isOpen}\r\n                onClose={close}\r\n            >\r\n                <ModalOverlay />\r\n                <ModalContent>\r\n                    <ModalHeader>Добавити продукт</ModalHeader>\r\n                    <ModalCloseButton />\r\n                    <ModalBody pb={6}>\r\n                        <FormControl>\r\n                            <FormLabel>Фото</FormLabel>\r\n                            <input accept=\"image/*\" type=\"file\" name=\"avatar\" id=\"reg-avatar\" onChange={selectFile} />\r\n                        </FormControl>\r\n                        {image &&\r\n                            <ImageCropper imageToCrop={imageUrl} onImageCropped={(croppedImage) => setCroppedImage(croppedImage)} />\r\n                        }\r\n                        <FormControl>\r\n                            <FormLabel></FormLabel>\r\n                            <FormLabel>Назва</FormLabel>\r\n                            <Input placeholder='Назва' value={name} onChange={(e) => setName(e.target.value)} />\r\n                        </FormControl>\r\n                        <FormControl>\r\n                            <FormLabel>Ціна</FormLabel>\r\n                            <Input placeholder='Ціна' value={price} onChange={(e) => setPrice(Number(e.target.value))} />\r\n                        </FormControl>\r\n                        <FormControl>\r\n                            <FormLabel>Тип</FormLabel>\r\n                            <Select placeholder=\"Виберіть тип\" >\r\n                                {types.map(i =>\r\n                                    <option key={i.id}>{i.name}</option>\r\n                                )}\r\n                            </Select>\r\n                            <FormLabel>Наявність на складі</FormLabel>\r\n                            <Select placeholder=\"Виберіть стан\" onChange={(e) => setState(e.target.value)} value={state}>\r\n                                {is.map(i =>\r\n                                    <option key={i}>{i}</option>\r\n                                )}\r\n                            </Select>\r\n                        </FormControl>\r\n                        <FormLabel></FormLabel>\r\n                        <FormLabel>Властивості</FormLabel>\r\n\r\n                        <FormControl marginBottom=\"5px\" my=\"15px\" display=\"flex\" justifyContent=\"center\" >\r\n                            <Button colorScheme=\"green\"\r\n                                onClick={addInfo}>Добавити властивості</Button>\r\n\r\n                        </FormControl>\r\n                        {info.map(i =>\r\n                            <FormControl key={i.number} style={{ display: \"flex\", marginBottom: \"5px\" }}>\r\n                                <div style={{ marginRight: \"5px\" }}>\r\n                                    <Input placeholder='Назва'\r\n                                        onChange={(e) => changeInfo('title', e.target.value, i.number)} />\r\n\r\n                                </div>\r\n                                <div style={{ marginRight: \"5px\" }}>\r\n                                    <Input placeholder='Значення'\r\n                                        onChange={(e) => changeInfo('description', e.target.value, i.number)} />\r\n                                </div>\r\n                                <div>\r\n                                    <Button colorScheme=\"red\"\r\n                                        onClick={() => removeInfo(i.number)}>-</Button>\r\n                                </div>\r\n                            </FormControl>\r\n                        )}\r\n\r\n                    </ModalBody>\r\n\r\n                    <ModalFooter>\r\n                        <Button colorScheme='blue' mr={3} onClick={submit}>\r\n                            Save\r\n                        </Button>\r\n                        <Button onClick={onClose}>Cancel</Button>\r\n                    </ModalFooter>\r\n                </ModalContent>\r\n            </Modal>\r\n        </>\r\n    )\r\n})\r\nexport default NewProduct","import React, { useState, useEffect, useContext } from \"react\";\r\nimport {\r\n    Select,\r\n    Button,\r\n    Modal,\r\n    ModalOverlay,\r\n    ModalContent,\r\n    ModalCloseButton,\r\n    ModalHeader,\r\n    FormControl,\r\n    Input,\r\n    FormLabel,\r\n    ModalBody,\r\n    ModalFooter\r\n} from \"@chakra-ui/react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport axios from '../../utils/axios';\r\nimport { Context } from \"../..\";\r\n\r\nconst EditProduct = observer(({ isOpen, onClose, cb }) => {\r\n    const { good } = useContext(Context);\r\n    const [ name, setName ] = useState();\r\n    const [ price, setPrice ] = useState();\r\n    const [ typeID, setTypeID ] = useState();\r\n    const [ state, setState ] = useState();\r\n    const [info, setInfo] = useState([])\r\n\r\n    const [types, setTypes] = useState([])\r\n    const is = [\"В наявності\", \"Закінчується\", \"Закінчився\", \"Очікується\"]\r\n\r\n    const submit = async () => {\r\n        const response = await axios.put(`good/${good.id}`, {\r\n            name: name ?? good.name, \r\n            price: price ?? good.price,\r\n            state: state ?? good.status,\r\n            typeID: typeID ?? good.typeID,\r\n            info: JSON.stringify(info ?? good.params)\r\n        })\r\n        if (response.status === 200) {\r\n            cb();\r\n            onClose()\r\n        };\r\n    }\r\n\r\n    const getTypes = async () => {\r\n        const response = await axios.get('type/getAll');\r\n        if (response.status === 200) setTypes(response.data);\r\n    }\r\n \r\n    const addInfo = () => {\r\n        setInfo([...info, { title: '', description: '', number: Date.now() }])\r\n    }\r\n    const removeInfo = (number) => {\r\n        setInfo(info.filter(i => i.number !== number))\r\n    }\r\n    const changeInfo = (key, value, number) => {\r\n        setInfo(info.map(i => i.number === number ? { ...i, [key]: value } : i))\r\n    }\r\n\r\n    const close = () => {\r\n        setName();\r\n        setPrice();\r\n        onClose();\r\n    }\r\n\r\n    useEffect(() => {\r\n        getTypes();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                isOpen={isOpen}\r\n                onClose={close}\r\n            >\r\n                <ModalOverlay />\r\n                <ModalContent>\r\n                    <ModalHeader>Редагувати продукт</ModalHeader>\r\n                    <ModalCloseButton />\r\n                    <ModalBody pb={6}>\r\n                        <FormControl>\r\n                            <FormLabel>Назва</FormLabel>\r\n                            <Input placeholder='Назва' defaultValue={good.name} value={name} onChange={(e) => setName(e.target.value)}/>\r\n                        </FormControl>\r\n                        <FormControl>\r\n                            <FormLabel>Ціна</FormLabel>\r\n                            <Input placeholder='Ціна' defaultValue={good.price} value={price} onChange={(e) => setPrice(e.target.value)} />\r\n                        </FormControl>\r\n                        <FormControl>\r\n                            <FormLabel>Тип</FormLabel>\r\n                            <Select placeholder=\"Виберіть тип\">\r\n                                {types.map(i =>\r\n                                    <option key={i.id} selected={good.typeID === i.id} onClick={() => setTypeID(i.id)}>{i.name}</option>\r\n                                )}\r\n                            </Select>\r\n                            <FormLabel>Наявність на складі</FormLabel>\r\n                            <Select placeholder=\"Виберіть стан\" defaultValue={good.state} onChange={(e) => setState(e.target.value)} value={state}>\r\n                                {is.map(i =>\r\n                                    <option key={i}>{i}</option>\r\n                                )}\r\n                            </Select>\r\n                        </FormControl>\r\n\r\n                        <FormControl my=\"15px\" display=\"flex\" justifyContent=\"center\">\r\n                            <Button colorScheme=\"green\"\r\n                                onClick={addInfo}>Добавити властивості</Button>\r\n\r\n                        </FormControl>\r\n                        {info.map(i =>\r\n                            <FormControl key={i.number} style={{ display: \"flex\", marginBottom: \"5px\" }}>\r\n                                <div style={{ marginRight: \"5px\" }}>\r\n                                    <Input placeholder='Назва'\r\n                                        onChange={(e) => changeInfo('title', e.target.value, i.number)} />\r\n\r\n                                </div>\r\n                                <div style={{ marginRight: \"5px\" }}>\r\n                                    <Input placeholder='Значення'\r\n                                        onChange={(e) => changeInfo('description', e.target.value, i.number)} />\r\n                                </div>\r\n                                <div>\r\n                                    <Button colorScheme=\"red\"\r\n                                        onClick={() => removeInfo(i.number)}>-</Button>\r\n                                </div>\r\n                            </FormControl>\r\n                        )}\r\n\r\n                    </ModalBody>\r\n\r\n                    <ModalFooter>\r\n                        <Button colorScheme='blue' mr={3} onClick={submit}>\r\n                            Save\r\n                        </Button>\r\n                        <Button onClick={onClose}>Cancel</Button>\r\n                    </ModalFooter>\r\n                </ModalContent>\r\n            </Modal>\r\n        </>\r\n    )\r\n})\r\n\r\nexport default EditProduct","import React, {useState, useEffect} from \"react\";\r\nimport {\r\n    Button,\r\n    Modal,\r\n    ModalOverlay,\r\n    ModalContent,\r\n    ModalCloseButton,\r\n    ModalHeader,\r\n    FormControl,\r\n    Input,\r\n    FormLabel,\r\n    ModalBody,\r\n    ModalFooter\r\n} from \"@chakra-ui/react\";\r\nimport axios from '../../utils/axios';\r\n\r\nfunction AddProductType({ isOpen, onClose }) {\r\n    const [type, setType] = useState();\r\n    \r\n    async function addType() {\r\n        const response = axios.post('good/addType', { typeName: type });\r\n        onClose()\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                isOpen={isOpen}\r\n                onClose={onClose}\r\n            >\r\n                <ModalOverlay />\r\n                <ModalContent>\r\n                    <ModalHeader>Добавити тип продукту</ModalHeader>\r\n                    <ModalCloseButton />\r\n                    <ModalBody pb={6}>\r\n                        <FormControl>\r\n                            <FormLabel>Назва</FormLabel>\r\n                            <Input placeholder='Назва' value={type} onChange={(e) => setType(e.target.value)} />\r\n                        </FormControl>\r\n                    </ModalBody>\r\n\r\n                    <ModalFooter>\r\n                        <Button onClick={addType} colorScheme='blue' mr={3}>\r\n                            Додати\r\n                        </Button>\r\n                        <Button onClick={onClose}>Скасувати</Button>\r\n                    </ModalFooter>\r\n                </ModalContent>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\nexport default AddProductType","import React, {useState, useEffect, useContext} from \"react\";\r\nimport {\r\n    Button,\r\n    Modal,\r\n    ModalOverlay,\r\n    ModalContent,\r\n    ModalCloseButton,\r\n    ModalHeader,\r\n    FormControl,\r\n    Input,\r\n    FormLabel,\r\n    ModalBody,\r\n    ModalFooter\r\n} from \"@chakra-ui/react\";\r\nimport axios from '../../utils/axios';\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\n\r\nconst AddProductType = observer(({ isOpen, onClose }) => {\r\n    const [ types, setTypes ] = useState([]);\r\n    const [ type, setType ] = useState();\r\n    \r\n    async function getTypes() {\r\n      const response = await axios.get('type/getAll');\r\n      if (response.status === 200) {\r\n        setTypes(response.data);\r\n      }\r\n    }\r\n\r\n    async function deleteType(id) {\r\n        const response = await axios.delete(`type/delete/${id}`);\r\n        if (response.status === 200) {\r\n          setTypes(response.data);\r\n          onClose()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                isOpen={isOpen}\r\n                onClose={onClose}\r\n            >\r\n                <ModalOverlay />\r\n                <ModalContent>\r\n                    <ModalHeader>Видалити тип продукту</ModalHeader>\r\n                    <ModalCloseButton />\r\n                    <ModalBody pb={6}>\r\n                        <FormControl>\r\n                            <FormLabel>Назва</FormLabel>\r\n                            <Input placeholder='Назва' value={type} onChange={(e) => setType(e.target.value)} />\r\n                        </FormControl>\r\n                    </ModalBody>\r\n\r\n                    <ModalFooter>\r\n                        <Button onClick={deleteType} colorScheme='blue' mr={3}>\r\n                            Додати\r\n                        </Button>\r\n                        <Button onClick={onClose}>Скасувати</Button>\r\n                    </ModalFooter>\r\n                </ModalContent>\r\n            </Modal>\r\n        </>\r\n    )\r\n})\r\n\r\nexport default AddProductType","import React, { useState } from \"react\";\r\nimport {\r\n    Button,\r\n    Modal,\r\n    ModalOverlay,\r\n    ModalContent,\r\n    ModalCloseButton,\r\n    ModalHeader,\r\n    FormControl,\r\n    Input,\r\n    FormLabel,\r\n    ModalBody,\r\n    Textarea,\r\n    ModalFooter\r\n} from \"@chakra-ui/react\";\r\nimport axios from \"../../utils/axios\";\r\n\r\n\r\nfunction AddArticle({ isOpen, onClose, cb }) {\r\n    const [header, setHeader] = useState();\r\n    const [text, setText] = useState();\r\n\r\n    function addArticle() {\r\n        axios.post('user/createArticle', {header, text})\r\n             .then(() => {\r\n                cb();\r\n                onClose();\r\n             })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                isOpen={isOpen}\r\n                onClose={onClose}\r\n            >\r\n                <ModalOverlay />\r\n                <ModalContent>\r\n                    <ModalHeader>Додати статтю</ModalHeader>\r\n                    <ModalCloseButton />\r\n                    <ModalBody pb={6}>\r\n                        <FormControl>\r\n                            <FormLabel>Назва</FormLabel>\r\n                            <Input placeholder='Назва' value={header} onChange={(e) => setHeader(e.target.value)} />\r\n                            <FormLabel>Текст статті</FormLabel>\r\n                            <Textarea h=\"400px\" placeholder='Текст статті' value={text} onChange={(e) => setText(e.target.value)} />\r\n                        </FormControl>\r\n                    </ModalBody>\r\n\r\n                    <ModalFooter>\r\n                        <Button onClick={addArticle} colorScheme='blue' mr={3}>\r\n                            Додати\r\n                        </Button>\r\n                        <Button onClick={onClose}>Скасувати</Button>\r\n                    </ModalFooter>\r\n                </ModalContent>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\nexport default AddArticle","import React from \"react\";\r\nimport {\r\n    Button,\r\n    Modal,\r\n    ModalOverlay,\r\n    ModalContent,\r\n    ModalCloseButton,\r\n    ModalHeader,\r\n    FormControl,\r\n    Input,\r\n    FormLabel,\r\n    ModalBody,\r\n    ModalFooter\r\n} from \"@chakra-ui/react\";\r\n\r\nfunction EditArticle({ isOpen, onClose }) {\r\n    return (\r\n        <>\r\n            <Modal\r\n                isOpen={isOpen}\r\n                onClose={onClose}\r\n            >\r\n                <ModalOverlay />\r\n                <ModalContent>\r\n                    <ModalHeader>Редагувати статтю</ModalHeader>\r\n                    <ModalCloseButton />\r\n                    <ModalBody pb={6}>\r\n                        <FormControl>\r\n                            <FormLabel>Назва</FormLabel>\r\n                            <Input placeholder='Назва' />\r\n                        </FormControl>\r\n                    </ModalBody>\r\n\r\n                    <ModalFooter>\r\n                        <Button colorScheme='blue' mr={3}>\r\n                            Додати\r\n                        </Button>\r\n                        <Button onClick={onClose}>Скасувати</Button>\r\n                    </ModalFooter>\r\n                </ModalContent>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\nexport default EditArticle","import React, { useState, useEffect, useContext } from 'react'\r\nimport { Option, Select, Container, Center, TableContainer, Table, Th, Image, Td, Tr, Thead, Tbody, Tfoot, TableCaption, Heading, Menu, MenuButton, MenuItem, MenuList, useDisclosure, Button, Flex, Text, Spacer } from '@chakra-ui/react'\r\nimport { ChevronDownIcon } from \"@chakra-ui/icons\"\r\nimport NewProduct from '../components/admin/NewProduct'\r\nimport EditProduct from '../components/admin/EditProduct'\r\nimport AddProductType from '../components/admin/AddProductType'\r\nimport DeleteProductType from '../components/admin/DeleteProductType'\r\nimport AddArticle from '../components/admin/AddArticle'\r\nimport EditArticle from '../components/admin/EditArticle'\r\nimport { EditIcon, DeleteIcon } from '@chakra-ui/icons';\r\nimport axios from '../utils/axios'\r\nimport { observer } from 'mobx-react-lite'\r\nimport { Context } from \"../index\";\r\n\r\nconst Admin = observer(() => {\r\n    const MAP = {\r\n        'Продукти': 'good/getall',\r\n        'Користувачі': 'user/allUsers',\r\n        'Статті': 'user/articles',\r\n        'Замовлення': 'user/getAllOrders',\r\n    }\r\n\r\n    const { good } = useContext(Context);\r\n\r\n    const [page, setPage] = useState('Продукти')\r\n    const [data, setData] = useState([])\r\n\r\n    const { isOpen: isNewProductOpen, onOpen: onNewProductOpen, onClose: onNewProductClose } = useDisclosure()\r\n    const { isOpen: isEditProductOpen, onOpen: onEditProductOpen, onClose: onEditProductClose } = useDisclosure()\r\n    const { isOpen: isAddProductTypeOpen, onOpen: onAddProductTypeOpen, onClose: onAddProductTypeClose } = useDisclosure()\r\n    const { isOpen: isDeleteProductTypeOpen, onOpen: onDeleteProductTypeOpen, onClose: onDeleteProductTypeClose } = useDisclosure()\r\n    const { isOpen: isAddArticleOpen, onOpen: onAddArticleOpen, onClose: onAddArticleClose } = useDisclosure()\r\n    const { isOpen: isEditArticleOpen, onOpen: onEditArticleOpen, onClose: onEditArticleClose } = useDisclosure()\r\n\r\n    async function getData(route) {\r\n        const response = await axios.get(route, {\r\n            headers: {\r\n                'Authorization': localStorage.getItem('Token')\r\n            }\r\n        });\r\n        if (response.status === 200) {\r\n            setData(response.data);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setData([]);\r\n        getData(MAP[page]);\r\n    }, [page]);\r\n\r\n    async function deleteProduct(id) {\r\n        const response = await axios.delete(`good/${id}`);\r\n\r\n        if (response.status === 200) {\r\n            setData(data.filter(item => item.id !== id))\r\n        }\r\n    }\r\n\r\n    function onEditProduct({id, name, typeID, image, price, state}) {\r\n        good.setId(id);\r\n        good.setName(name);\r\n        good.setTypeID(typeID);\r\n        good.setImage(image);\r\n        good.setPrice(price);\r\n        good.setState(state);\r\n        onEditProductOpen();\r\n    }\r\n\r\n    async function editArticle(id) {\r\n        const response = await axios.delete(`good/${id}`);\r\n\r\n        if (response.status === 200) {\r\n            setData(data.filter(item => item.id !== id))\r\n        }\r\n    }\r\n\r\n    async function deleteArticle(id) {\r\n        const response = await axios.delete(`user/deleteArticle/${id}`);\r\n\r\n        if (response.status === 200) {\r\n            setData(data.filter(item => item.id !== id));\r\n        }\r\n    }\r\n\r\n    async function setRole(role, id) {\r\n        const response = await axios.post(`user/setRole/${id}`, {role});\r\n        if (response) {\r\n            getData(MAP['Користувачі']);\r\n        }\r\n    }\r\n\r\n    async function deleteUser(id) {\r\n        const response = await axios.delete(`user/deleteUser/${id}`);\r\n        if (response) {\r\n            setData(data.filter(user => user.id !== id));\r\n        }\r\n    }\r\n\r\n    async function setOrderState(state, id) {\r\n        const response = await axios.put(`user/setOrderState/${id}`, {state});\r\n        if (response) {\r\n            getData(MAP['Замовлення']);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container display=\"flex\" flexDirection=\"column\" alignItems=\"center\" p=\"30px\" maxW=\"1000px\">\r\n            <Menu >\r\n                <MenuButton width='170px' mb=\"30px\" as={Button} rightIcon={<ChevronDownIcon />}>\r\n                    {page}\r\n                </MenuButton>\r\n                <Center>\r\n                    <MenuList>\r\n                        <MenuItem onClick={() => setPage('Продукти')}>Продукти</MenuItem>\r\n                        <MenuItem onClick={() => setPage('Користувачі')}>Користувачі</MenuItem>\r\n                        <MenuItem onClick={() => setPage('Замовлення')}>Замовлення</MenuItem>\r\n                        <MenuItem onClick={() => setPage('Статті')}>Статті</MenuItem>\r\n                    </MenuList>\r\n                </Center>\r\n            </Menu>\r\n\r\n            {page === 'Продукти' &&\r\n                <>\r\n                    <Button onClick={onNewProductOpen}>Добавити новий продукт</Button>\r\n                    <Button onClick={onAddProductTypeOpen} my=\"7px\" >Добавити новий тип продукту</Button>\r\n                    <Button onClick={onDeleteProductTypeOpen} marginBottom=\"20px\" >Видалити тип продукту</Button>\r\n\r\n                    <TableContainer>\r\n                        <Table bg='gray.200' variant='striped' rounded={10}>\r\n                            <TableCaption>Список продуктів</TableCaption>\r\n                            <Thead>\r\n                                <Tr>\r\n                                    <Th>Зображення</Th>\r\n                                    <Th>Назва</Th>\r\n                                    <Th>Ціна</Th>\r\n                                    <Th>Стан</Th>\r\n                                    <Th>Змінити</Th>\r\n                                    <Th>Видалити</Th>\r\n                                </Tr>\r\n                            </Thead>\r\n                            <Tbody>\r\n                                {data.map(product => (\r\n                                    <Tr>\r\n                                        <Td><Image h=\"50px\" src={product.image} rounded={5} /></Td>\r\n                                        <Td>{product.name}</Td>\r\n                                        <Td textAlign=\"center\">{product.price}₴</Td>\r\n                                        <Td textAlign=\"center\">{product.state}</Td>\r\n                                        <Td textAlign=\"center\"><Button colorScheme=\"teal\" onClick={() => onEditProduct(product)}><EditIcon /></Button></Td>\r\n                                        <Td textAlign=\"center\"><Button colorScheme=\"red\" onClick={() => deleteProduct(product.id)}><DeleteIcon /></Button></Td>\r\n                                    </Tr>\r\n                                ))}\r\n                            </Tbody>\r\n                            <Tfoot>\r\n                                <Tr>\r\n                                    <Th>Зображення</Th>\r\n                                    <Th>Назва</Th>\r\n                                    <Th>Ціна</Th>\r\n                                    <Th>Стан</Th>\r\n                                    <Th>Змінити</Th>\r\n                                    <Th>Видалити</Th>\r\n                                </Tr>\r\n                            </Tfoot>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </>\r\n            }\r\n\r\n            {\r\n                page === 'Користувачі' &&\r\n                <>\r\n                    <TableContainer>\r\n                        <Table bg='gray.200' variant='striped' rounded={10}>\r\n                            <TableCaption>Список усіх користувачів</TableCaption>\r\n                            <Thead>\r\n                                <Tr>\r\n                                    <Th>Ідентифікатор</Th>\r\n                                    <Th>Ім'я</Th>\r\n                                    <Th>Email</Th>\r\n                                    <Th>Роль</Th>\r\n                                    <Th>Видалити</Th>\r\n                                </Tr>\r\n                            </Thead>\r\n                            <Tbody>\r\n                                {data.map(user => (\r\n                                    <Tr>\r\n                                        <Td>{user.id}</Td>\r\n                                        <Td>{user.name}</Td>\r\n                                        <Td>{user.email}</Td>\r\n                                        <Td>\r\n                                            <Select value={user.role} onChange={(e) => setRole(e.target.value, user.id)}>\r\n                                                <option>customer</option>\r\n                                                <option>admin</option>\r\n                                            </Select>  \r\n                                        </Td>\r\n                                        <Td><Button colorScheme=\"red\" onClick={() => deleteUser(user.id)}><DeleteIcon /></Button></Td>\r\n                                    </Tr>\r\n                                ))}\r\n                            </Tbody>\r\n                            <Tfoot>\r\n                                <Tr>\r\n                                    <Th>Ідентифікатор</Th>\r\n                                    <Th>Ім'я</Th>\r\n                                    <Th>Email</Th>\r\n                                    <Th>Роль</Th>\r\n                                    <Th>Видалити</Th>\r\n                                </Tr>\r\n                            </Tfoot>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </>\r\n            }\r\n\r\n            {\r\n                page === 'Замовлення' &&\r\n                <>\r\n                    <TableContainer>\r\n                        <Table bg='gray.200' variant='striped' rounded={10}>\r\n                            <TableCaption>Список усіх користувачів</TableCaption>\r\n                            <Thead>\r\n                                <Tr>\r\n                                    <Th>Ідентифікатор</Th>\r\n                                    <Th>Ціна</Th>\r\n                                    <Th>Стан</Th>\r\n                                    <Th>Дата та час</Th>\r\n                                </Tr>\r\n                            </Thead>\r\n                            <Tbody>\r\n                                {data.map(order => (\r\n                                    <Tr>\r\n                                        <Td>{order.id}</Td>\r\n                                        <Td>{order.price}₴</Td>\r\n                                        <Td>\r\n                                            <Select value={order.state} onChange={(e) => setOrderState(e.target.value, order.id)}>\r\n                                                <option>В обробці</option>\r\n                                                <option>Відправлено</option>\r\n                                                <option>Очікує отримання</option>\r\n                                                <option>Скасовано</option>\r\n                                            </Select>\r\n                                        </Td>\r\n                                        <Td>{order.time}</Td>\r\n                                    </Tr>\r\n                                ))}\r\n                            </Tbody>\r\n                            <Tfoot>\r\n                                <Tr>\r\n                                    <Th>Ідентифікатор</Th>\r\n                                    <Th>Ціна</Th>\r\n                                    <Th>Стан</Th>\r\n                                    <Th>Дата та час</Th>\r\n                                </Tr>\r\n                            </Tfoot>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </>\r\n            }\r\n\r\n            {\r\n                page === 'Статті' &&\r\n                <>\r\n                    <Button marginBottom=\"20px\" onClick={onAddArticleOpen}>Добавити статтю</Button>\r\n                \r\n                    <TableContainer>\r\n                        <Table bg='gray.200' variant='striped' rounded={10}>\r\n                            <TableCaption>Список усіх користувачів</TableCaption>\r\n                            <Thead>\r\n                                <Tr>\r\n                                    <Th>Ідентифікатор</Th>\r\n                                    <Th>Заголовок</Th>\r\n                                    <Th>Уривок тексту</Th>\r\n                                    <Th>Змінити</Th>\r\n                                    <Th>Видалити</Th>\r\n                                </Tr>\r\n                            </Thead>\r\n                            <Tbody>\r\n                                {data.map(article => (\r\n                                    <Tr>\r\n                                        <Td>{article.id}</Td>\r\n                                        <Td>{article.header}</Td>\r\n                                        <Td>{article.text}</Td>\r\n                                        <Td><Button colorScheme=\"teal\" onClick={() => editArticle(article.id)}><EditIcon /></Button></Td>\r\n                                        <Td><Button colorScheme=\"red\" onClick={() => deleteArticle(article.id)}><DeleteIcon /></Button></Td>\r\n                                    </Tr>\r\n                                ))}\r\n                            </Tbody>\r\n                            <Tfoot>\r\n                                <Tr>\r\n                                    <Th>Ідентифікатор</Th>\r\n                                    <Th>Заголовок</Th>\r\n                                    <Th>Уривок тексту</Th>\r\n                                    <Th>Змінити</Th>\r\n                                    <Th>Видалити</Th>\r\n                                </Tr>\r\n                            </Tfoot>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </>\r\n            }\r\n\r\n            <NewProduct\r\n                isOpen={isNewProductOpen}\r\n                onClose={onNewProductClose}\r\n                cb={() => getData(MAP['Продукти'])}\r\n            />\r\n            <EditProduct\r\n                isOpen={isEditProductOpen}\r\n                onClose={onEditProductClose}\r\n                cb={() => getData(MAP['Продукти'])} />\r\n            <AddProductType\r\n                isOpen={isAddProductTypeOpen}\r\n                onClose={onAddProductTypeClose} />\r\n            <DeleteProductType\r\n                isOpen={isDeleteProductTypeOpen}\r\n                onClose={onDeleteProductTypeClose} />\r\n            <AddArticle\r\n                isOpen={isAddArticleOpen}\r\n                onClose={onAddArticleClose}\r\n                cb={() => getData(MAP['Статті'])} />\r\n            <EditArticle\r\n                isOpen={isEditArticleOpen}\r\n                onClose={onEditArticleClose} />\r\n\r\n        </Container >\r\n\r\n\r\n    )\r\n})\r\n\r\nexport default Admin;","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"http://localhost:8000/api/\",\r\n  headers: {\r\n    'Authorization': localStorage.getItem(\"Token\") ?? \"\"\r\n  }\r\n});\r\n\r\ninstance.interceptors.response.use(\r\n  res => res,\r\n  error => {\r\n    if (error.response.status === 401) {\r\n      localStorage.removeItem(\"Token\");\r\n    };\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default instance;"],"names":["ImageCropper","props","imageToCrop","onImageCropped","useState","unit","width","aspect","cropConfig","setCropConfig","imageRef","setImageRef","crop","height","console","log","getCroppedImage","target","croppedImage","sourceImage","canvas","document","createElement","scaleX","naturalWidth","scaleY","naturalHeight","getContext","drawImage","x","y","Promise","resolve","reject","toBlob","blob","file","File","type","lastModified","Date","getTime","Error","ruleOfThirds","onChange","onComplete","cropImage","onLoad","src","defaultProps","NewProduct","observer","isOpen","onClose","cb","info","setInfo","name","setName","price","setPrice","typeID","setTypeID","types","setTypes","image","setImage","imageUrl","setImageUrl","state","setState","undefined","setCroppedImage","changeInfo","key","value","number","map","i","getTypes","axios","response","status","data","useEffect","pb","accept","id","event","files","length","reader","FileReader","addEventListener","result","readAsDataURL","placeholder","e","Number","marginBottom","my","display","justifyContent","colorScheme","onClick","title","description","now","style","marginRight","filter","mr","formData","FormData","append","JSON","stringify","headers","then","EditProduct","good","useContext","Context","submit","params","defaultValue","selected","setType","typeName","AddProductType","header","setHeader","text","setText","h","Admin","MAP","page","setPage","setData","useDisclosure","isNewProductOpen","onNewProductOpen","onOpen","onNewProductClose","isEditProductOpen","onEditProductOpen","onEditProductClose","isAddProductTypeOpen","onAddProductTypeOpen","onAddProductTypeClose","isDeleteProductTypeOpen","onDeleteProductTypeOpen","onDeleteProductTypeClose","isAddArticleOpen","onAddArticleOpen","onAddArticleClose","isEditArticleOpen","onEditArticleClose","getData","route","localStorage","getItem","item","role","user","flexDirection","alignItems","p","maxW","mb","as","Button","rightIcon","bg","variant","rounded","Tr","Th","product","Td","textAlign","setId","onEditProduct","deleteProduct","email","setRole","deleteUser","order","setOrderState","time","article","editArticle","deleteArticle","DeleteProductType","instance","baseURL","interceptors","use","res","error","removeItem"],"sourceRoot":""}