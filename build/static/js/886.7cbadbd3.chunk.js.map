{"version":3,"file":"static/js/886.7cbadbd3.chunk.js","mappings":"qGAEAA,EAAOC,QAAU,SAA4BC,GAC3C,IA6DIC,EA7DEC,EAASC,EAAQ,MACjBC,EAAUJ,EAASA,EAAOK,OAAS,KAOnCC,EAAgB,CACpB,SAAK,IACL,SAAK,IACL,SAAK,IACL,SAAK,IACL,SAAK,IACL,SAAK,IACL,SAAK,IACL,SAAK,IACL,SAAK,IACL,SAAK,IACL,SAAK,IACL,SAAK,IACL,SAAK,IACL,SAAK,IACL,SAAK,IACL,SAAK,IACL,SAAK,IACL,SAAK,IAIS,OAAZF,EACFG,OAAOC,OAAOF,EAAe,CAC3B,SAAK,IACL,SAAK,IACL,SAAK,GACL,SAAK,IACL,SAAK,MAEc,OAAZF,EACTG,OAAOC,OAAOF,EAAe,CAC3B,SAAK,IACL,SAAK,IACL,SAAK,IACL,SAAK,IACL,SAAK,IACL,IAAK,GACL,SAAK,GACL,SAAK,KAEc,OAAZF,GACTG,OAAOC,OAAOF,EAAe,CAC3B,SAAK,IACL,SAAK,IACL,SAAK,IACL,SAAK,IACL,SAAK,IACL,SAAK,IACL,SAAK,KAKO,OAAZF,EAEFH,EAAwBM,OAAOC,OAAON,EAAOI,GAAgB,CAAE,EAAK,SAAK,GAAI,MACxD,OAAZF,GAGY,OAAZA,KADTH,EAAwBM,OAAOC,OAAON,EAAOI,GAAgB,CAAE,GAAI,MAMrE,IAkCIG,EAlCEC,EAAgC,OAAZN,EAAoB,CAAE,SAAK,MAAS,CAAE,SAAK,KAAM,SAAK,MAG1EO,EAAmB,CACvB,SAAK,KACL,SAAK,KACL,SAAK,KACL,SAAK,KACL,SAAK,KACL,SAAK,KACL,SAAK,OACL,SAAK,KACL,SAAK,MAGDC,EAAiBL,OAAOC,OAAO,GAAIG,EAAkBD,GAErDG,EAAyBN,OAAOC,OAAON,EAAOU,IAE9CE,EAAqBP,OAAOC,OAAOF,EAAeM,GAMlDG,EAAmBR,OAAOC,OAAO,GAAIF,EAAe,CAAE,SAAK,MACjD,OAAZF,EACFG,OAAOC,OAAOO,EAAkB,CAAE,SAAK,MAClB,OAAZX,EACTG,OAAOC,OAAOO,EAAkB,CAAE,SAAK,MAClB,OAAZX,GACTG,OAAOC,OAAOO,EAAkB,CAAE,SAAK,MAIzB,OAAZX,EAEFK,EAA2BF,OAAOC,OAAON,EAAOI,GAAgB,CAC9D,EAAK,SACL,EAAK,SACL,EAAK,SACL,GAAI,KAEe,OAAZF,IAETK,EAA2BF,OAAOC,OAAON,EAAOI,GAAgB,CAAE,GAAI,MAIxE,IAAIU,EAAsB,GACV,OAAZZ,IACFY,EAAsB,CACpB,SAAK,KACL,SAAK,KACL,SAAK,OAIT,IAAMC,EAAoBV,OAAOC,OAAOG,EAAkBK,GAEpDE,EAA4BX,OAAOC,OAAON,EAAOe,IAEjDE,EAAwBZ,OAAOC,OAAOO,EAAkBE,GA0H9D,MAAO,CACLG,UAxHF,SAAmBC,EAAOC,GACxB,IAAKD,EACH,MAAO,GAUT,IALA,IAAME,EAAkBF,EAAMG,YAE1BC,EAAS,GACTC,GAAiB,EAEZC,EAAI,EAAGA,EAAIJ,EAAgBK,OAAQD,IAAK,CAC/C,IAAME,EAAwBN,EAAgBI,KAAOJ,EAAgBI,GAAGG,cACpEC,EAAeR,EAAgBI,GAAGK,cAEtC,GAAqB,MAAjBD,EAAJ,CAMA,IAAIE,OAAS,EAEI,OAAZ7B,GAAsE,iBAAlDmB,EAAgBW,MAAMP,EAAE,EAAGA,EAAE,GAAGK,cAEvDC,EAAY,KACG,IAANN,GAAWD,GACpBO,EAAYnB,EAAmBiB,GAC/BL,GAAiB,GAEjBO,EAAYd,EAAsBY,GAGhC,qBAAuBE,EACzBR,GAAUI,EAAwBE,EAAaD,cAAgBC,EACtDF,EAETI,EAAUL,OAAS,EACfH,GAAUQ,EAAU,GAAGH,cAAgBG,EAAUC,MAAM,GACvDT,GAAUQ,EAAUH,cAExBL,GAAUQ,OAzBVR,GAAUH,GAAuC,IACjDI,GAAiB,EA2BrB,OAAOD,GA4EPU,QAzEF,SAAiBd,EAAOC,GAEtB,IAAKD,EAAO,MAAO,GAQnB,IANA,IAAME,EAAkBF,EAAMG,YAE1BC,EAAS,GACTC,GAAiB,EACjBC,EAAI,EAEDA,EAAIJ,EAAgBK,QAAQ,CACjC,IAAMC,EAAwBN,EAAgBI,KAAOJ,EAAgBI,GAAGG,cACpEC,EAAeR,EAAgBI,GAAGK,cAClCI,EAAeT,EAEnB,GAAqB,MAAjBI,GAAwBA,IAAiBT,EAA7C,CAOA,IAAIW,OAAS,EAETI,EAAUd,EAAgBW,MAAMP,EAAGA,EAAI,GAAGK,cACpC,IAANL,GAAWD,IACbO,EAAYpB,EAAuBwB,IAEjCV,GAAK,GAELM,EAAYhC,EAAsB8B,GAClCJ,KAEFD,GAAiB,IAEjBO,EAAYf,EAA0BmB,IAEpCV,GAAK,GAELM,EAAYxB,EAAyBsB,GACrCJ,KAKwE,SAAxEJ,EAAgBW,MAAME,EAAcA,EAAe,GAAGJ,eACxDC,EAAY,SACZN,EAAIS,EAAe,GACkE,QAA5Eb,EAAgBW,MAAME,EAAe,EAAGA,EAAe,GAAGJ,gBACnEC,EAAY,SACZN,EAAIS,EAAe,GAGjB,qBAAuBH,EACzBR,GAAUI,EAAwBE,EAAaD,cAAgBC,EAG3DF,EAEAI,EAAUL,OAAS,EACfH,GAAUQ,EAAU,GAAGH,cAAgBG,EAAUC,MAAM,GACvDT,GAAUQ,EAAUH,cAExBL,GAAUQ,OA/CdR,GAAU,IACVC,GAAiB,EACjBC,IAkDJ,OAAOF,M,iBCvPX,IAAIa,EAAmB,iBAGnBC,EAAU,qBACVC,EAAU,oBACVC,EAAS,6BAGTC,EAAW,mBAoCf,IAPiBC,EAAMvB,EAOnBwB,EAAcrC,OAAOsC,UAGrBC,EAAiBF,EAAYE,eAO7BC,EAAiBH,EAAYI,SAG7BC,EAAuBL,EAAYK,qBAGnCC,GAvBaP,EAuBQpC,OAAO4C,KAvBT/B,EAuBeb,OAtB7B,SAAS6C,GACd,OAAOT,EAAKvB,EAAUgC,MA+B1B,SAASC,EAAcC,EAAOC,GAG5B,IAAIC,EAAUC,EAAQH,IAoKxB,SAAqBA,GAEnB,OAmFF,SAA2BA,GACzB,OAgHF,SAAsBA,GACpB,QAASA,GAAyB,iBAATA,EAjHlBI,CAAaJ,IAAUK,EAAYL,GApFnCM,CAAkBN,IAAUR,EAAee,KAAKP,EAAO,aAC1DL,EAAqBY,KAAKP,EAAO,WAAaP,EAAec,KAAKP,IAAUf,GAvKhDuB,CAAYR,GAtD9C,SAAmBS,EAAGC,GAIpB,IAHA,IAAIC,GAAS,EACTT,EAASU,MAAMH,KAEVE,EAAQF,GACfP,EAAOS,GAASD,EAASC,GAE3B,OAAOT,EAgDHW,CAAUb,EAAM1B,OAAQwC,QACxB,GAEAxC,EAAS4B,EAAO5B,OAChByC,IAAgBzC,EAEpB,IAAK,IAAI0C,KAAOhB,GACTC,IAAaT,EAAee,KAAKP,EAAOgB,IACvCD,IAAuB,UAAPC,GAAmBC,EAAQD,EAAK1C,KACpD4B,EAAOgB,KAAKF,GAGhB,OAAOd,EAcT,IA2DuBiB,EA3DnBC,EA4DK,SAASC,EAAQX,EAAUY,GAMhC,IALA,IAAIX,GAAS,EACTY,EAAWtE,OAAOoE,GAClBG,EAAQF,EAASD,GACjB/C,EAASkD,EAAMlD,OAEZA,KAAU,CACf,IAAI0C,EAAMQ,EAAML,EAAY7C,IAAWqC,GACvC,IAA+C,IAA3CD,EAASa,EAASP,GAAMA,EAAKO,GAC/B,MAGJ,OAAOF,GA/CX,SAASI,EAAaJ,EAAQK,EAAQhB,EAAUiB,GAI9C,OAnBF,SAAoBN,EAAQX,GACnBW,GAAUD,EAAQC,EAAQX,EAAUb,GAe3C+B,CAAWP,GAAQ,SAASrB,EAAOgB,EAAKK,GACtCK,EAAOC,EAAajB,EAASV,GAAQgB,EAAKK,MAErCM,EAUT,SAASE,EAASR,GAChB,IAwEF,SAAqBrB,GACnB,IAAI8B,EAAO9B,GAASA,EAAM+B,YACtBC,EAAwB,mBAARF,GAAsBA,EAAKvC,WAAcD,EAE7D,OAAOU,IAAUgC,EA5EZC,CAAYZ,GACf,OAAOzB,EAAWyB,GAEpB,IAAInB,EAAS,GACb,IAAK,IAAIc,KAAO/D,OAAOoE,GACjB7B,EAAee,KAAKc,EAAQL,IAAe,eAAPA,GACtCd,EAAOgB,KAAKF,GAGhB,OAAOd,EAiDT,SAASe,EAAQjB,EAAO1B,GAEtB,SADAA,EAAmB,MAAVA,EAAiBU,EAAmBV,KAE1B,iBAAT0B,GAAqBZ,EAAS8C,KAAKlC,KAC1CA,GAAS,GAAKA,EAAQ,GAAK,GAAKA,EAAQ1B,EAgE7C,IAAI6B,EAAUS,MAAMT,QA2BpB,SAASE,EAAYL,GACnB,OAAgB,MAATA,GAkFT,SAAkBA,GAChB,MAAuB,iBAATA,GACZA,GAAS,GAAKA,EAAQ,GAAK,GAAKA,GAAShB,EApFnBmD,CAASnC,EAAM1B,UAiDzC,SAAoB0B,GAGlB,IAAIoC,EA4DN,SAAkBpC,GAChB,IAAIqC,SAAcrC,EAClB,QAASA,IAAkB,UAARqC,GAA4B,YAARA,GA9D7BC,CAAStC,GAASP,EAAec,KAAKP,GAAS,GACzD,OAAOoC,GAAOlD,GAAWkD,GAAOjD,EArDmBoD,CAAWvC,GAmKhE,IAjRwB0B,EAAQc,EAwUdxC,EAvDdpD,GAjRoB8E,EAiRI,SAASxB,EAAQF,EAAOgB,GAClDd,EAAOF,GAASgB,GAsDAhB,EAsBlB,SAAkBA,GAChB,OAAOA,GA/VuBwC,EAyUvB,WACL,OAAOxC,GAzUF,SAASqB,EAAQX,GACtB,OAAOe,EAAaJ,EAAQK,EAAQc,EAAW9B,GAAW,MA+S9D,SAASb,EAAKwB,GACZ,OAAOhB,EAAYgB,GAAUtB,EAAcsB,GAAUQ,EAASR,GAgDhE7E,EAAOC,QAAUG","sources":["../node_modules/cyrillic-to-translit-js/CyrillicToTranslit.js","../node_modules/lodash.invert/index.js"],"sourcesContent":["'use strict';\n\nmodule.exports = function cyrillicToTranslit(config) {\n  const invert = require('lodash.invert');\n  const _preset = config ? config.preset : \"ru\";\n\n  /*\n  ASSOCIATIONS FOR INITIAL POSITION\n  */\n\n  // letters shared between languages\n  const _firstLetters = {\n    \"а\": \"a\",\n    \"б\": \"b\",\n    \"в\": \"v\",\n    \"д\": \"d\",\n    \"з\": \"z\",\n    \"й\": \"y\",\n    \"к\": \"k\",\n    \"л\": \"l\",\n    \"м\": \"m\",\n    \"н\": \"n\",\n    \"о\": \"o\",\n    \"п\": \"p\",\n    \"р\": \"r\",\n    \"с\": \"s\",\n    \"т\": \"t\",\n    \"у\": \"u\",\n    \"ф\": \"f\",\n    \"ь\": \"\"\n  };\n\n  // language-specific letters\n  if (_preset === \"ru\") {\n    Object.assign(_firstLetters, {\n      \"г\": \"g\",\n      \"и\": \"i\",\n      \"ъ\": \"\",\n      \"ы\": \"i\",\n      \"э\": \"e\",\n    });\n  } else if (_preset === \"uk\") {\n    Object.assign(_firstLetters, {\n      \"г\": \"h\",\n      \"ґ\": \"g\",\n      \"е\": \"e\",\n      \"и\": \"y\",\n      \"і\": \"i\",\n      \"'\": \"\",\n      \"’\": \"\",\n      \"ʼ\": \"\",\n    })\n  } else if (_preset === \"mn\") {\n    Object.assign(_firstLetters, {\n      \"г\": \"g\",\n      \"ө\": \"o\",\n      \"ү\": \"u\",\n      \"и\": \"i\",\n      \"ы\": \"y\",\n      \"э\": \"e\",\n      \"ъ\": \"\"\n    })\n  }\n\n  let _reversedFirstLetters;\n  if (_preset === \"ru\") {\n    // Russian: i > always и, y > й in initial position, e > э in initial position\n    _reversedFirstLetters = Object.assign(invert(_firstLetters), { \"i\": \"и\", \"\": \"\" });\n  } else if (_preset === \"uk\") {\n    // Ukrainian: i > always i, y > always и, e > always е\n    _reversedFirstLetters = Object.assign(invert(_firstLetters), { \"\": \"\" });\n  } else if (_preset === \"mn\") {\n    _reversedFirstLetters = Object.assign(invert(_firstLetters), { \"\": \"\" });\n  }\n\n  // digraphs appearing only in initial position\n  const _initialDigraphs = (_preset === \"ru\") ? { \"е\": \"ye\" } : { \"є\": \"ye\", \"ї\": \"yi\" };\n\n  // digraphs appearing in all positions\n  const _regularDigraphs = {\n    \"ё\": \"yo\",\n    \"ж\": \"zh\",\n    \"х\": \"kh\",\n    \"ц\": \"ts\",\n    \"ч\": \"ch\",\n    \"ш\": \"sh\",\n    \"щ\": \"shch\",\n    \"ю\": \"yu\",\n    \"я\": \"ya\",\n  }\n\n  const _firstDigraphs = Object.assign({}, _regularDigraphs, _initialDigraphs);\n\n  const _reversedFirstDigraphs = Object.assign(invert(_firstDigraphs));\n\n  const _firstAssociations = Object.assign(_firstLetters, _firstDigraphs);\n\n  /*\n  ASSOCIATIONS FOR NON-INITIAL POSITION\n  */\n\n  const _nonFirstLetters = Object.assign({}, _firstLetters, { \"й\": \"i\" });\n  if (_preset === \"ru\") {\n    Object.assign(_nonFirstLetters, { \"е\": \"e\" });\n  } else if (_preset === \"uk\") {\n    Object.assign(_nonFirstLetters, { \"ї\": \"i\" });\n  } else if (_preset === \"mn\") {\n    Object.assign(_nonFirstLetters, { \"е\": \"e\" });\n  }\n\n  let _reversedNonFirstLetters;\n  if (_preset === \"ru\") {\n    // Russian: i > always и, y > ы in non-initial position, e > е in non-initial position\n    _reversedNonFirstLetters = Object.assign(invert(_firstLetters), {\n      \"i\": \"и\", \n      \"y\": \"ы\",\n      \"e\": \"е\",\n      \"\": \"\" \n    });\n  } else if (_preset === \"uk\") {\n    // Ukrainian: i > always i, y > always и, e > always е\n    _reversedNonFirstLetters = Object.assign(invert(_firstLetters), { \"\": \"\" });\n  }\n\n  // digraphs appearing only in non-initial positions\n  let _nonInitialDigraphs = {};\n  if (_preset === \"uk\") {\n    _nonInitialDigraphs = {\n      \"є\": \"ie\",\n      \"ю\": \"iu\",\n      \"я\": \"ia\",\n    };\n  }\n\n  const _nonFirstDigraphs = Object.assign(_regularDigraphs, _nonInitialDigraphs);\n\n  const _reversedNonFirstDigraphs = Object.assign(invert(_nonFirstDigraphs));\n\n  const _nonFirstAssociations = Object.assign(_nonFirstLetters, _nonFirstDigraphs);\n\n\n  function transform(input, spaceReplacement) {\n    if (!input) {\n      return \"\";\n    }\n\n    // We must normalize string for transform all unicode chars to uniform form\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize\n    const normalizedInput = input.normalize();\n\n    let newStr = \"\";\n    let isWordBoundary = false;\n\n    for (let i = 0; i < normalizedInput.length; i++) {\n      const isUpperCaseOrWhatever = normalizedInput[i] === normalizedInput[i].toUpperCase();\n      let strLowerCase = normalizedInput[i].toLowerCase();\n\n      if (strLowerCase === \" \") {\n        newStr += spaceReplacement ? spaceReplacement :  \" \";\n        isWordBoundary = true;\n        continue;\n      }\n\n      let newLetter;\n\n      if ( _preset === \"uk\" && normalizedInput.slice(i-1, i+1).toLowerCase() === \"зг\") {\n        // handle ukrainian special case зг > zgh\n        newLetter = \"gh\";\n      } else if (i === 0 || isWordBoundary) {\n        newLetter = _firstAssociations[strLowerCase];\n        isWordBoundary = false;\n      } else {\n        newLetter = _nonFirstAssociations[strLowerCase];\n      }\n\n      if (\"undefined\" === typeof newLetter) {\n        newStr += isUpperCaseOrWhatever ? strLowerCase.toUpperCase() : strLowerCase;\n      } else if (isUpperCaseOrWhatever) {\n        // handle multi-symbol letters\n        newLetter.length > 1\n          ? newStr += newLetter[0].toUpperCase() + newLetter.slice(1)\n          : newStr += newLetter.toUpperCase();\n      } else {\n        newStr += newLetter;\n      }\n    }\n    return newStr;\n  }\n\n  function reverse(input, spaceReplacement) {\n\n    if (!input) return \"\";\n\n    const normalizedInput = input.normalize();\n\n    let newStr = \"\";\n    let isWordBoundary = false;\n    let i = 0;\n\n    while (i < normalizedInput.length) {\n      const isUpperCaseOrWhatever = normalizedInput[i] === normalizedInput[i].toUpperCase();\n      let strLowerCase = normalizedInput[i].toLowerCase();\n      let currentIndex = i;\n\n      if (strLowerCase === \" \" || strLowerCase === spaceReplacement) {\n        newStr += \" \";\n        isWordBoundary = true;\n        i++;\n        continue;\n      }\n      \n      let newLetter;\n\n      let digraph = normalizedInput.slice(i, i + 2).toLowerCase();\n      if (i === 0 || isWordBoundary) {\n        newLetter = _reversedFirstDigraphs[digraph];\n        if (newLetter) {\n          i += 2;\n        } else {\n          newLetter = _reversedFirstLetters[strLowerCase];\n          i++;\n        }\n        isWordBoundary = false;\n      } else {\n        newLetter = _reversedNonFirstDigraphs[digraph];\n        if (newLetter) {\n          i += 2;\n        } else {\n          newLetter = _reversedNonFirstLetters[strLowerCase];\n          i++;\n        }\n      }\n\n      // special cases: щ and зг\n      if (normalizedInput.slice(currentIndex, currentIndex + 4).toLowerCase() === \"shch\") {\n        newLetter = \"щ\";\n        i = currentIndex + 4;\n      } else if (normalizedInput.slice(currentIndex - 1, currentIndex + 2).toLowerCase() === \"zgh\") {\n        newLetter = \"г\";\n        i = currentIndex + 2;\n      }\n\n      if (\"undefined\" === typeof newLetter) {\n        newStr += isUpperCaseOrWhatever ? strLowerCase.toUpperCase() : strLowerCase;\n      }\n      else {\n        if (isUpperCaseOrWhatever) {\n            // handle multi-symbol letters\n            newLetter.length > 1\n              ? newStr += newLetter[0].toUpperCase() + newLetter.slice(1)\n              : newStr += newLetter.toUpperCase();\n        } else {\n            newStr += newLetter;\n        }\n      }\n    }\n\n    return newStr;\n  }\n\n  return {\n    transform: transform,\n    reverse: reverse\n  };\n};\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]';\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  // Safari 9 makes `arguments.length` enumerable in strict mode.\n  var result = (isArray(value) || isArguments(value))\n    ? baseTimes(value.length, String)\n    : [];\n\n  var length = result.length,\n      skipIndexes = !!length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (key == 'length' || isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\n/**\n * The base implementation of `_.invert` and `_.invertBy` which inverts\n * `object` with values transformed by `iteratee` and set by `setter`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform values.\n * @param {Object} accumulator The initial inverted object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction baseInverter(object, setter, iteratee, accumulator) {\n  baseForOwn(object, function(value, key, object) {\n    setter(accumulator, iteratee(value), key, object);\n  });\n  return accumulator;\n}\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\n/**\n * Creates a function like `_.invertBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} toIteratee The function to resolve iteratees.\n * @returns {Function} Returns the new inverter function.\n */\nfunction createInverter(setter, toIteratee) {\n  return function(object, iteratee) {\n    return baseInverter(object, setter, toIteratee(iteratee), {});\n  };\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Creates an object composed of the inverted keys and values of `object`.\n * If `object` contains duplicate values, subsequent values overwrite\n * property assignments of previous values.\n *\n * @static\n * @memberOf _\n * @since 0.7.0\n * @category Object\n * @param {Object} object The object to invert.\n * @returns {Object} Returns the new inverted object.\n * @example\n *\n * var object = { 'a': 1, 'b': 2, 'c': 1 };\n *\n * _.invert(object);\n * // => { '1': 'c', '2': 'b' }\n */\nvar invert = createInverter(function(result, value, key) {\n  result[value] = key;\n}, constant(identity));\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\n/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant(value) {\n  return function() {\n    return value;\n  };\n}\n\n/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = invert;\n"],"names":["module","exports","config","_reversedFirstLetters","invert","require","_preset","preset","_firstLetters","Object","assign","_reversedNonFirstLetters","_initialDigraphs","_regularDigraphs","_firstDigraphs","_reversedFirstDigraphs","_firstAssociations","_nonFirstLetters","_nonInitialDigraphs","_nonFirstDigraphs","_reversedNonFirstDigraphs","_nonFirstAssociations","transform","input","spaceReplacement","normalizedInput","normalize","newStr","isWordBoundary","i","length","isUpperCaseOrWhatever","toUpperCase","strLowerCase","toLowerCase","newLetter","slice","reverse","currentIndex","digraph","MAX_SAFE_INTEGER","argsTag","funcTag","genTag","reIsUint","func","objectProto","prototype","hasOwnProperty","objectToString","toString","propertyIsEnumerable","nativeKeys","keys","arg","arrayLikeKeys","value","inherited","result","isArray","isObjectLike","isArrayLike","isArrayLikeObject","call","isArguments","n","iteratee","index","Array","baseTimes","String","skipIndexes","key","isIndex","push","fromRight","baseFor","object","keysFunc","iterable","props","baseInverter","setter","accumulator","baseForOwn","baseKeys","Ctor","constructor","proto","isPrototype","test","isLength","tag","type","isObject","isFunction","toIteratee"],"sourceRoot":""}