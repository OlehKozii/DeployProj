{"version":3,"file":"static/js/120.bf26aded.chunk.js","mappings":"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","sources":["validation/singup.js","components/AuthForms/SignUp.js","pages/auth/SignUp.js","utils/axios.js","webpack://client/./src/pages/auth/Auth.module.scss?a5aa"],"sourcesContent":["import * as yup from \"yup\"\r\n\r\nexport default yup.object().shape({\r\n    name: yup.string().required(\"Enter name\").max(16),\r\n    email: yup.string().email().required(\"Email is invalid\").max(20),\r\n    password: yup.string().required(\"Password have to be from 6 to 16 characters\").min(6).max(16),\r\n})","import React, { useContext, useState } from \"react\";\r\nimport { Context } from \"../../index\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from '../../utils/axios';\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { SIGN_IN } from \"../../routes/const\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Input, Heading, FormControl, FormErrorMessage, Box } from \"@chakra-ui/react\";\r\nimport jwtDecode from \"jwt-decode\";\r\nimport signUpSchema from \"../../validation/singup\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport { useForm } from 'react-hook-form';\r\n\r\n\r\nconst SignUpForm = observer(() => {\r\n    const { user } = useContext(Context);\r\n    const navigator = useNavigate();\r\n\r\n    const { register, handleSubmit, formState: { errors } } = useForm({\r\n        resolver: yupResolver(signUpSchema),\r\n    });\r\n\r\n    const submit = async (values) => {\r\n        const { name, email, password } = values;\r\n        const response = await axios.post('user/registration', { name, email, password });\r\n\r\n        if (response.status === 200) {\r\n            var decode = jwtDecode(response.data.token)\r\n            user.setUser({\r\n                id: decode.id,\r\n                name: decode.name,\r\n                email: decode.email,\r\n                role: decode.role\r\n            })\r\n            if (user.user.role === \"admin\") {\r\n                user.setIsAdmin(true)\r\n            }\r\n            user.setIsAuth(true)\r\n            localStorage.setItem(\"Token\", \"Bearer \" + response.data.token);\r\n            navigator('/');\r\n        };\r\n        window.location.reload()\r\n    }\r\n\r\n    return (\r\n        // <FormControl maxW='500px' bg='gray.200' rounded={10} p=\"20px\" display='flex' flexDirection=\"column\" alignItems=\"center\">\r\n        //     <Heading my=\"20px\">Реєстрація</Heading>\r\n        //     <Input bg='gray.100' w=\"80%\" my=\"10px\" type='text' placeholder=\"Ім'я\" value={name} onChange={(e) => setName(e.target.value)} />\r\n        //     <Input bg='gray.100' w=\"80%\" my=\"10px\" type='email' placeholder=\"Email\" value={email} onChange={(e) => setEmail(e.target.value)} />\r\n        //     <Input bg='gray.100' w=\"80%\" my=\"10px\" type='password' placeholder=\"Пароль\" value={password} onChange={(e) => setPassword(e.target.value)} />\r\n        //     <Button w=\"80%\" my=\"10px\" colorScheme=\"teal\" onClick={submit}>Зареєструватись</Button>\r\n        //     <Link to={SIGN_IN}>Увійти</Link>\r\n        // </FormControl>\r\n        <Box w='500px' bg='gray.100' rounded={10} p=\"20px\" display='flex' flexDirection=\"column\" alignItems=\"center\">\r\n            <Heading my=\"20px\">Реєстрація</Heading>\r\n            <FormControl\r\n                my=\"10px\"\r\n                px=\"40px\"\r\n                isInvalid={!!errors?.name?.message}\r\n                errortext={errors?.name?.message}\r\n            >\r\n                <Input bg='gray.100' placeholder=\"Name\"  {...register(\"name\")} />\r\n                <FormErrorMessage>{errors?.name?.message}</FormErrorMessage>\r\n            </FormControl>\r\n            <FormControl\r\n                my=\"10px\"\r\n                px=\"40px\"\r\n                isInvalid={!!errors?.email?.message}\r\n                errortext={errors?.email?.message}\r\n            >\r\n                <Input bg='gray.100' type='email' placeholder=\"Email\"  {...register(\"email\")} />\r\n                <FormErrorMessage>{errors?.email?.message}</FormErrorMessage>\r\n            </FormControl>\r\n            <FormControl\r\n                my=\"10px\"\r\n                px=\"40px\"\r\n                isInvalid={!!errors?.password?.message}\r\n                errortext={errors?.password?.message}\r\n            >\r\n                <Input bg='gray.100' type='password' placeholder=\"Пароль\" {...register(\"password\")} />\r\n                <FormErrorMessage>{errors?.password?.message}</FormErrorMessage>\r\n            </FormControl>\r\n            <Button w=\"80%\" my=\"10px\" colorScheme=\"teal\" onClick={handleSubmit(submit)}>Увійти</Button>\r\n        </Box>\r\n    );\r\n})\r\n\r\nexport default SignUpForm;\r\n","import React from \"react\";\r\nimport SignUpForm from \"../../components/AuthForms/SignUp\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport styles from \"./Auth.module.scss\";\r\n\r\nconst SignUp = observer(() => {\r\n    return <div id={styles.wrapper}>\r\n        <SignUpForm />\r\n    </div>;\r\n});\r\n\r\nexport default SignUp;\r\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"https://mydiplomlevas.herokuapp.com/api/\",\r\n  headers: {\r\n    'Authorization': localStorage.getItem(\"Token\") ?? \"\"\r\n  }\r\n});\r\n\r\ninstance.interceptors.response.use(\r\n  res => res,\r\n  error => {\r\n    if (error.response.status === 401) {\r\n      localStorage.removeItem(\"Token\");\r\n    };\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default instance;","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Auth_wrapper__Od48h\"};"],"names":["yup","shape","name","required","max","email","password","min","SignUpForm","observer","user","useContext","Context","navigator","useNavigate","useForm","resolver","yupResolver","signUpSchema","register","handleSubmit","errors","formState","submit","values","axios","response","status","decode","jwtDecode","data","token","setUser","id","role","setIsAdmin","setIsAuth","localStorage","setItem","window","location","reload","w","bg","rounded","p","display","flexDirection","alignItems","my","px","isInvalid","message","errortext","placeholder","type","colorScheme","onClick","styles","SignUp","instance","baseURL","headers","getItem","interceptors","use","res","error","removeItem","Promise","reject"],"sourceRoot":""}