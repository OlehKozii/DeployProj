{"version":3,"file":"static/js/735.eedefe01.chunk.js","mappings":"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","sources":["pages/basket.js","utils/axios.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react'\r\nimport { Context } from \"../index\";\r\nimport { Box, Container, VStack, Flex, Text, Image, Button, NumberDecrementStepper, NumberIncrementStepper, NumberInputStepper, NumberInputField, NumberInput } from '@chakra-ui/react'\r\nimport { DeleteIcon } from \"@chakra-ui/icons\";\r\nimport { observer } from \"mobx-react-lite\"\r\nimport axios from '../utils/axios';\r\n\r\nconst Basket = observer(() => {\r\n    const { user } = useContext(Context);\r\n    const [basket, setBasket] = useState([]);\r\n    const [totalPrice, setTotalPrice] = useState(0);\r\n\r\n    async function getBasket() {\r\n        const response = await axios.get('basket/get');\r\n\r\n        if (response.status === 200) {\r\n            setBasket(response.data)\r\n            const total = response.data.reduce((total, item) => total + item.price * item.count, 0);\r\n            setTotalPrice(total);\r\n        }\r\n    }\r\n\r\n    async function deleteGood({ id, itemPrice }) {\r\n        const response = await axios.delete(`basket/${id}`);\r\n        if (response.status === 200) {\r\n            setBasket(basket.filter(item => item.id !== id));\r\n            setTotalPrice(totalPrice - itemPrice)\r\n        }\r\n    }\r\n\r\n    function recalculate() {\r\n        const total = basket.reduce((total, item) => total + item.price * item.count, 0);\r\n        setTotalPrice(total);\r\n    }\r\n\r\n    async function createOrder() {\r\n        const response = await axios.post('user/createOrder', {userId: user.user.id, basket, price: totalPrice});\r\n\r\n        if(response.status === 200) {\r\n            setBasket([])\r\n            setTotalPrice(0)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getBasket()\r\n    }, []);\r\n\r\n    return (\r\n        <Container maxWidth={1080} paddingBottom=\"200px\">\r\n            {basket.length ?\r\n                <VStack> \r\n                    {basket.map((item, i) => {\r\n                            return (\r\n                                \r\n                                <Flex key={i} w=\"100%\" h=\"150px\" rounded={10} bg=\"gray.100\" m={4} p=\"15px 20px 15px 20px\" justifyContent=\"space-between\">\r\n                                    <Flex>\r\n                                        <Image h=\"100%\" w=\"auto\" rounded={5} src={item.image}/>\r\n                                        <Flex mx={4} my={1} flexDirection=\"column\" justifyContent=\"space-between\">\r\n                                            <Text fontSize=\"30px\" color=\"gray.800\" lineHeight=\"30px\">{item.name}</Text>\r\n                                            <NumberInput defaultValue={item.count} min={1} w=\"100px\" bg=\"gray.100\" rounded={2} onChange={(value) => {item.count = value; recalculate()}}>\r\n                                                <NumberInputField />\r\n                                                <NumberInputStepper>\r\n                                                    <NumberIncrementStepper />\r\n                                                    <NumberDecrementStepper />\r\n                                                </NumberInputStepper>\r\n                                            </NumberInput>\r\n                                        </Flex>\r\n                                    </Flex>\r\n                                    <Flex flexDir=\"column\" justifyContent=\"space-between\" alignItems=\"flex-end\">\r\n                                        <Button w=\"40px\" h=\"40px\" colorScheme=\"red\" onClick={() => deleteGood({id: item.id, itemPrice: item.price * item.count})}>\r\n                                            <DeleteIcon>\r\n                                                \r\n                                            </DeleteIcon>\r\n                                        </Button>\r\n                                        <Text mx={4} fontSize=\"30px\" m=\"0\" color=\"gray.600\">{item.price}₴</Text>\r\n                                    </Flex>\r\n                                </Flex>\r\n                            )}\r\n                        )}\r\n                    <Flex alignItems=\"center\" alignSelf=\"end\" borderWidth=\"2px\" borderColor=\"green.300\" rounded={5} bg=\"green.100\" p=\"20px\">\r\n                        <Text fontSize=\"30px\" marginRight=\"30px\" color=\"gray.600\">{totalPrice}₴</Text>\r\n                        <Button colorScheme=\"green\" onClick={createOrder}>Купити</Button>\r\n                    </Flex>\r\n            </VStack>\r\n            :\r\n            <Box position=\"fixed\" top=\"50%\" left=\"calc(50% - 30px)\">\r\n                <Text fontSize=\"40px\">\r\n                    Пусто\r\n                </Text>\r\n            </Box>\r\n        }\r\n        </Container>\r\n    )\r\n})\r\n\r\nexport default Basket; ","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"http://localhost:8000/api/\",\r\n  headers: {\r\n    'Authorization': localStorage.getItem(\"Token\") ?? \"\"\r\n  }\r\n});\r\n\r\ninstance.interceptors.response.use(\r\n  res => res,\r\n  error => {\r\n    if (error.response.status === 401) {\r\n      localStorage.removeItem(\"Token\");\r\n    };\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default instance;"],"names":["Basket","observer","user","useContext","Context","useState","basket","setBasket","totalPrice","setTotalPrice","axios","response","status","data","total","reduce","item","price","count","id","itemPrice","filter","userId","useEffect","getBasket","maxWidth","paddingBottom","length","map","i","w","h","rounded","bg","m","p","justifyContent","src","image","mx","my","flexDirection","fontSize","color","lineHeight","name","defaultValue","min","onChange","value","recalculate","flexDir","alignItems","colorScheme","onClick","deleteGood","alignSelf","borderWidth","borderColor","marginRight","position","top","left","instance","baseURL","headers","localStorage","getItem","interceptors","use","res","error","removeItem","Promise","reject"],"sourceRoot":""}