{"version":3,"file":"static/js/450.a016f590.chunk.js","mappings":"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","sources":["components/goodsList/oneProduct.js","pages/shop.js","utils/axios.js"],"sourcesContent":["import React, { useContext } from \"react\";\r\n// import ShoppingCartIcon from '@mui/icons-material/ShoppingCart';\r\nimport { Link } from \"react-router-dom\";\r\nimport { Box, Flex, Image, Button, Text } from \"@chakra-ui/react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { GOOD_ROUTE } from \"../../routes/const\";\r\nimport CyrillicToTranslit from 'cyrillic-to-translit-js';\r\nimport { Context } from \"../../index\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport axios from '../../utils/axios';\r\n\r\nconst cyrillicToTranslit = new CyrillicToTranslit();\r\n\r\nconst OneProduct = observer(({ param }) => {\r\n    const navigator = useNavigate();\r\n    const { good, user } = useContext(Context);\r\n    const COLOR_MAP = {\r\n        \"В наявності\": \"green.300\",\r\n        \"Закінчується\": \"yellow.400\",\r\n        \"Закінчився\": \"red.500\",\r\n        \"Очікується\": \"teal.400\"\r\n    }\r\n\r\n\r\n    async function goToGoodPage(){\r\n        const name = cyrillicToTranslit.transform(param.name, '-').toLowerCase();\r\n        good.setId(param.id);\r\n        navigator(GOOD_ROUTE + `/${name}`)\r\n    };\r\n\r\n    async function addToBasket(e) {\r\n        e.stopPropagation();\r\n        const response = await axios.post('basket/add', { goodId: param.id });\r\n\r\n        if (response.status === 200) {\r\n\r\n        };\r\n    }\r\n\r\n\r\n    return (\r\n        <Box layerStyle=\"card\" onClick={goToGoodPage}>\r\n            <Image w=\"100%\" objectFit=\"cover\" src={param.image} alt=\"\" />\r\n            <Text noOfLines={1} textOverflow=\"ellipsis\" fontSize='20px' my=\"10px\" maxHeight={24} overflow=\"hidden\" alignSelf=\"start\">{param.name}</Text>\r\n            <Text noOfLines={1} textOverflow=\"ellipsis\" fontSize='20px' my=\"10px\" maxHeight={24} overflow=\"hidden\" alignSelf=\"start\" color={COLOR_MAP[param.state]} >{param.state}</Text>\r\n            <Flex justifyContent=\"space-between\" w=\"80%\">\r\n                <div className=\"Price\"><p style={{ fontSize: \"24px\" }}>{param.price}₴</p></div>\r\n                <div className=\"Cart\">\r\n                    <Button colorScheme=\"teal\" h=\"30px\" isDisabled={!user.isAuth} onClick={(e) => addToBasket(e)}>\r\n                        Кошик\r\n                        {/* <ShoppingCartIcon></ShoppingCartIcon> */}\r\n                    </Button>\r\n                    </div>\r\n            </Flex>\r\n\r\n        </Box>\r\n    );\r\n})\r\n\r\nexport default OneProduct;","import React, { useEffect, useState } from 'react'\r\nimport OneProduct from \"../components/goodsList/oneProduct\";\r\nimport axios from '../utils/axios';\r\nimport { Box, FormLabel, Container, Select, SimpleGrid, DrawerHeader, DrawerBody, Checkbox, DrawerFooter, Button, useDisclosure, Drawer, DrawerOverlay, DrawerContent, DrawerCloseButton, Flex } from \"@chakra-ui/react\";\r\n\r\nconst is = [\"В наявності\", \"Закінчується\", \"Закінчився\", \"Очікується\"]\r\n\r\nconst Shop = () => {\r\n    const [typeID, setTypeID] = useState([])\r\n    const [state, setState] = useState(\"\")\r\n    const [discount, setDiscount] = useState(false)\r\n    const [goodsList, setGoods] = useState([]);\r\n    const [typesList, setTypes] = useState([]);\r\n    const { isOpen, onOpen, onClose } = useDisclosure()\r\n    const btnRef = React.useRef()\r\n\r\n    const getGoods = async () => {\r\n        let typeurl = [];\r\n        typeID.forEach((id) => typeurl.push(`typeID=${id}`));\r\n        const response = await axios.get(`good/getall?${typeurl.join(\"&\")}&state=${state}&discount=${discount}`);\r\n        console.log(response.data);\r\n        if (response.status === 200) setGoods(response.data);\r\n    }\r\n\r\n    const getTypes = async () => {\r\n        const response = await axios.get('type/getAll');\r\n        console.log(response.data);\r\n        if (response.status === 200) setTypes(response.data);\r\n    }\r\n\r\n    const check = (checked, filter) => {\r\n        if (checked) {\r\n            setTypeID([...typeID, filter]);\r\n        }\r\n        else {\r\n            setTypeID([...typeID.filter((id) => filter !== id)])\r\n        }\r\n\r\n\r\n    }\r\n\r\n    const toDefaults = () => {\r\n        setState(\"\");\r\n        setTypeID([]);\r\n        setDiscount(false);\r\n        getGoods();\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        getTypes();\r\n        getGoods();\r\n        console.log(goodsList);\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <>\r\n            <Container p=\"30px\" maxWidth=\"1500px\">\r\n                <Button ref={btnRef} colorScheme='teal' onClick={onOpen} marginBottom=\"15px\">\r\n                    Фільтри\r\n                </Button>\r\n                <SimpleGrid justifyItems=\"center\" minChildWidth='250px' spacing='20px'>\r\n                    {goodsList.map((good) => (\r\n                        <OneProduct key={good.id} param={good} />\r\n                    ))}\r\n                </SimpleGrid>\r\n            </Container>\r\n\r\n            <Drawer\r\n                isOpen={isOpen}\r\n                placement='left'\r\n                onClose={onClose}\r\n                finalFocusRef={btnRef}\r\n            >\r\n                <DrawerOverlay />\r\n                <DrawerContent>\r\n                    <DrawerCloseButton />\r\n                    <DrawerHeader>Фільтер</DrawerHeader>\r\n\r\n                    <DrawerBody>\r\n                        <Box>\r\n                            <Select color=\"black\" placeholder='Наявність'>\r\n                                {is.map((isfilter) =>\r\n                                    <option key={isfilter} onClick={() => { setState(isfilter); }}>{isfilter}</option>\r\n                                )}\r\n                            </Select>\r\n                        </Box>\r\n                        <Flex flexDir=\"column\">\r\n                            {typesList.map((filter) =>\r\n\r\n                                <Checkbox my=\"5px\" key={filter.id} onChange={(e) => { check(e.target.checked, filter.id); }}>{filter.name}</Checkbox>\r\n\r\n                            )}\r\n                        </Flex>\r\n                        <Box>\r\n                            <FormLabel>Гарячі пропозиції</FormLabel>\r\n                            <Checkbox onClick={() => { setDiscount(!discount); }}>Акційний товар</Checkbox>\r\n                        </Box>\r\n                        <Button variant='outline' mr={3} marginTop=\"7px\" onClick={() => { toDefaults(); }}>\r\n                            Скинути фільтри\r\n                        </Button>\r\n                    </DrawerBody>\r\n\r\n                    <DrawerFooter>\r\n                        <Button variant='outline' mr={3} onClick={onClose}>\r\n                            Скасувати\r\n                        </Button>\r\n                        <Button colorScheme='blue' onClick={() => { getGoods(); }}>Підтвердити</Button>\r\n                    </DrawerFooter>\r\n                </DrawerContent>\r\n            </Drawer >\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Shop;","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"http://localhost:8000/api/\",\r\n  headers: {\r\n    'Authorization': localStorage.getItem(\"Token\") ?? \"\"\r\n  }\r\n});\r\n\r\ninstance.interceptors.response.use(\r\n  res => res,\r\n  error => {\r\n    if (error.response.status === 401) {\r\n      localStorage.removeItem(\"Token\");\r\n    };\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default instance;"],"names":["cyrillicToTranslit","CyrillicToTranslit","OneProduct","observer","param","navigator","useNavigate","useContext","Context","good","user","name","transform","toLowerCase","setId","id","GOOD_ROUTE","e","stopPropagation","axios","goodId","status","layerStyle","onClick","w","objectFit","src","image","alt","noOfLines","textOverflow","fontSize","my","maxHeight","overflow","alignSelf","color","state","justifyContent","className","style","price","colorScheme","h","isDisabled","isAuth","addToBasket","is","useState","typeID","setTypeID","setState","discount","setDiscount","goodsList","setGoods","typesList","setTypes","useDisclosure","isOpen","onOpen","onClose","btnRef","React","getGoods","typeurl","forEach","push","join","response","console","log","data","getTypes","useEffect","p","maxWidth","ref","marginBottom","justifyItems","minChildWidth","spacing","map","placement","finalFocusRef","placeholder","isfilter","flexDir","filter","onChange","checked","check","target","variant","mr","marginTop","instance","baseURL","headers","localStorage","getItem","interceptors","use","res","error","removeItem","Promise","reject"],"sourceRoot":""}